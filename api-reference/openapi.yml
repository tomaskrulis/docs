openapi: 3.0.0
info:
  title: 'Web API v2 - Public '
  description: Documentation of the public web API.
  version: 1.0.0
servers:
  - url: /{basePath}
    description: Local server
    variables:
      basePath:
        default: api/v2
  - url: https://master.make.cloud/{basePath}
    description: Development server
    variables:
      basePath:
        default: api/v2
components:
  securitySchemes:
    cookie:
      type: apiKey
      in: cookie
      name: sid
    token:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Team:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        organizationId:
          type: integer
    Team--Admin:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        organizationId:
          type: integer
        scenarioDrafts:
          type: boolean
        deleted:
          type: boolean
        externalId:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        language:
          type: string
        timezoneId:
          type: integer
        localeId:
          type: integer
        countryId:
          type: integer
        features:
          type: object
          properties:
            allow_apps:
              type: boolean
        avatar:
          type: string
          format: uri
        timezone:
          type: string
        locale:
          type: string
        usersAdminsRoleId:
          type: integer
        hasPassword:
          type: boolean
        tfaEnabled:
          type: boolean
        forceSetPassword:
          type: boolean
        userOrganizationRoles:
          type: array
          items:
            type: object
            properties:
              usersRoleId:
                type: integer
              userId:
                type: integer
              organizationId:
                type: integer
              invitation:
                type: string
        userTeamRoles:
          type: array
          items:
            type: object
            properties:
              usersRoleId:
                type: integer
              userId:
                type: integer
              teamId:
                type: integer
              changeable:
                type: boolean
        lastlogin:
          type: string
          format: date-time
    UserPublic:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        language:
          type: string
        timezoneId:
          type: integer
        localeId:
          type: integer
        countryId:
          type: integer
        features:
          type: object
          properties:
            allow_apps:
              type: boolean
        avatar:
          type: string
          format: uri
    UserUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        language:
          type: string
        timezoneId:
          type: integer
        localeId:
          type: integer
        countryId:
          type: integer
        usersAdminsRoleId:
          type: integer
    UserRole:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        subsidiary:
          type: boolean
        category:
          type: string
        permissions:
          type: array
          items:
            type: string
    UserTeamRole:
      type: object
      properties:
        usersRoleId:
          type: integer
        userId:
          type: integer
        teamId:
          type: integer
        changeable:
          type: boolean
        ssoPending:
          type: boolean
    Pg:
      type: object
      properties:
        last:
          type: string
        showLast:
          type: boolean
        sortBy:
          type: string
        sortDir:
          type: string
        limit:
          type: integer
        offset:
          type: integer
    UserOrganizationInvitations:
      type: object
      properties:
        hash:
          type: string
        invitation:
          type: string
        usersRoleId:
          type: integer
        organizationId:
          type: integer
        organizationName:
          type: string
        zone:
          type: string
    UserOrganizationRole:
      type: object
      properties:
        userId:
          type: integer
        organizationId:
          type: integer
        usersRoleId:
          type: integer
        invitation:
          type: string
    UserOrganizationRoleAll:
      allOf:
        - type: object
          properties:
            userId:
              type: integer
            organizationId:
              type: integer
            usersRoleId:
              type: integer
            invitation:
              type: string
        - type: object
          properties:
            organizationTeamsCount:
              type: integer
            joinedTeamsCount:
              type: integer
    UserTeamNotification:
      type: object
      properties:
        userId:
          type: integer
        teamId:
          type: integer
        notificationId:
          type: integer
        enabled:
          type: boolean
    ApiToken:
      type: object
      properties:
        token:
          type: string
        scope:
          type: array
          items:
            type: string
            format: uri
        created:
          type: string
          format: date-time
        label:
          type: string
    EmailPreferences:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
        email:
          type: string
          format: email
        is_email_verified:
          type: boolean
        global:
          type: object
          properties:
            isEmailVerified:
              type: boolean
            preferences:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  enabled:
                    type: boolean
                  label:
                    type: string
                  description:
                    type: string
        zones:
          type: array
          items: {}
    DataStructureWhole:
      type: object
      properties:
        id:
          type: integer
        teamId:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 128
        strict:
          type: boolean
        spec:
          type: array
          items:
            oneOf:
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - boolean
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  default:
                    type: boolean
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - text
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  default:
                    type: string
                  multiline:
                    type: boolean
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - number
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  default:
                    type: number
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - date
                  name:
                    type: string
                  label:
                    type: string
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - buffer
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  codepage:
                    type: string
                    enum:
                      - binary
                      - utf8
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - collection
                  name:
                    type: string
                  label:
                    type: string
                  spec:
                    type: array
                    items:
                      type: object
                  sequence:
                    type: boolean
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                  name:
                    type: string
                  label:
                    type: string
                  spec:
                    type: object
                  sequence:
                    type: boolean
                required:
                  - name
                  - type
      required:
        - id
        - teamId
        - name
        - strict
        - spec
    DataStructureCreate:
      type: object
      properties:
        teamId:
          type: integer
          description: >-
            The unique ID of the team in which the data structure will be
            created.
        name:
          type: string
          description: >-
            The name of the data structure. The maximum length of the name is
            128 characters.
          minLength: 1
          maxLength: 128
        strict:
          type: boolean
          description: >
            Set to `true` to enforce strict validation of the data put in the
            data structure. With the strict validation enabled, the data
            structure won't store data that don't fit into the structure and the
            storing module will return an error.


            The default value of this parameter is `false`. With the default
            setting, the modules using the data structure will process data that
            don't conform to the data structure.
          example: true
        spec:
          type: array
          description: Sets the data structure specification.
          items:
            oneOf:
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - boolean
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  default:
                    type: boolean
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - text
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  default:
                    type: string
                  multiline:
                    type: boolean
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - number
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  default:
                    type: number
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - date
                  name:
                    type: string
                  label:
                    type: string
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - buffer
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  codepage:
                    type: string
                    enum:
                      - binary
                      - utf8
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - collection
                  name:
                    type: string
                  label:
                    type: string
                  spec:
                    type: array
                    items:
                      type: object
                  sequence:
                    type: boolean
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                  name:
                    type: string
                  label:
                    type: string
                  spec:
                    type: object
                  sequence:
                    type: boolean
                required:
                  - name
                  - type
      required:
        - teamId
        - name
        - strict
        - spec
    DataStructurePatch:
      type: object
      properties:
        name:
          type: string
          description: >-
            The name of the data structure. The maximum length of the name is
            128 characters.
          minLength: 1
          maxLength: 128
        strict:
          type: boolean
          description: >
            Set to `true` to enforce strict validation of the data put in the
            data structure. With the strict validation enabled, the data
            structure won't store data that don't fit into the structure and the
            storing module will return an error.


            The default value of this parameter is `false`. With the default
            setting, the modules using the data structure will process data that
            don't conform to the data structure.
          example: false
        spec:
          type: array
          description: >
            Sets the data structure specification.
             
            Note that when you update the data structure specification with the
            `spec` parameter, you have to provide all structure fields you want
            to use. Make replaces the old structure specification with the new
            one."
          items:
            oneOf:
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - boolean
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  default:
                    type: boolean
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - text
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  default:
                    type: string
                  multiline:
                    type: boolean
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - number
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  default:
                    type: number
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - date
                  name:
                    type: string
                  label:
                    type: string
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - buffer
                  name:
                    type: string
                  label:
                    type: string
                  required:
                    type: boolean
                  codepage:
                    type: string
                    enum:
                      - binary
                      - utf8
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - collection
                  name:
                    type: string
                  label:
                    type: string
                  spec:
                    type: array
                    items:
                      type: object
                  sequence:
                    type: boolean
                required:
                  - name
                  - type
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                  name:
                    type: string
                  label:
                    type: string
                  spec:
                    type: object
                  sequence:
                    type: boolean
                required:
                  - name
                  - type
    DataStructureSpec:
      oneOf:
        - type: object
          properties:
            type:
              type: string
              enum:
                - boolean
            name:
              type: string
            label:
              type: string
            required:
              type: boolean
            default:
              type: boolean
          required:
            - name
            - type
        - type: object
          properties:
            type:
              type: string
              enum:
                - text
            name:
              type: string
            label:
              type: string
            required:
              type: boolean
            default:
              type: string
            multiline:
              type: boolean
          required:
            - name
            - type
        - type: object
          properties:
            type:
              type: string
              enum:
                - number
            name:
              type: string
            label:
              type: string
            required:
              type: boolean
            default:
              type: number
          required:
            - name
            - type
        - type: object
          properties:
            type:
              type: string
              enum:
                - date
            name:
              type: string
            label:
              type: string
          required:
            - name
            - type
        - type: object
          properties:
            type:
              type: string
              enum:
                - buffer
            name:
              type: string
            label:
              type: string
            required:
              type: boolean
            codepage:
              type: string
              enum:
                - binary
                - utf8
          required:
            - name
            - type
        - type: object
          properties:
            type:
              type: string
              enum:
                - collection
            name:
              type: string
            label:
              type: string
            spec:
              type: array
              items:
                type: object
            sequence:
              type: boolean
          required:
            - name
            - type
        - type: object
          properties:
            type:
              type: string
              enum:
                - array
            name:
              type: string
            label:
              type: string
            spec:
              type: object
            sequence:
              type: boolean
          required:
            - name
            - type
    Device:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        teamId:
          type: integer
        udid:
          type: string
        scope:
          type: array
          items:
            type: string
        info:
          type: object
        queueCount:
          type: integer
        queueLimit:
          type: integer
        scenarioId:
          type: integer
    DeviceEventIncoming:
      type: object
      properties:
        id:
          type: string
        scope:
          type: string
        size:
          type: integer
        created:
          type: string
          format: date-time
    DeviceEventOutgoing:
      type: object
      properties:
        id:
          type: string
        scope:
          type: string
        size:
          type: integer
        created:
          type: string
          format: date-time
    Dlq:
      type: object
      properties:
        id:
          type: string
        reason:
          type: string
        created:
          type: string
          format: date-time
        size:
          type: integer
        resolved:
          type: boolean
        retry:
          type: boolean
        attempts:
          type: integer
    DlqFull:
      type: object
      properties:
        id:
          type: string
        scenarioId:
          type: integer
        scenarioName:
          type: string
        companyId:
          type: integer
        companyName:
          type: string
        resolved:
          type: boolean
        deleted:
          type: boolean
        index:
          type: integer
        created:
          type: string
          format: date-time
        executionId:
          type: string
        retry:
          type: boolean
        attempts:
          type: integer
        size:
          type: integer
    DlqLog:
      type: object
      properties:
        imtId:
          type: string
        duration:
          type: integer
        transfer:
          type: integer
        operations:
          type: integer
        teamId:
          type: integer
        id:
          type: string
        type:
          type: string
        authorId:
          type: string
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        instant:
          type: boolean
        organizationId:
          type: integer
    Blueprint:
      type: object
      properties:
        flow:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              mapper:
                type: object
                properties:
                  ca:
                    type: string
                  qs:
                    type: array
                    items: {}
                  url:
                    type: string
                    format: uri
                  gzip:
                    type: boolean
                  method:
                    type: string
                  headers:
                    type: array
                    items: {}
                  timeout:
                    type: string
                  authPass:
                    type: string
                  authUser:
                    type: string
                  bodyType:
                    type: string
                  shareCookies:
                    type: boolean
                  parseResponse:
                    type: boolean
                  followRedirect:
                    type: boolean
                  useQuerystring:
                    type: boolean
                  rejectUnauthorized:
                    type: boolean
              module:
                type: string
                format: uri
              onerror:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    mapper:
                      type: object
                      properties:
                        count:
                          type: string
                          format: utc-millisec
                        retry:
                          type: boolean
                        interval:
                          type: string
                          format: utc-millisec
                    module:
                      type: string
                      format: uri
                    version:
                      type: integer
                    metadata:
                      type: object
                      properties:
                        expect:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              type:
                                type: string
                              label:
                                type: string
                              required:
                                type: boolean
                        restore:
                          type: object
                          properties:
                            retry:
                              type: object
                              properties:
                                mode:
                                  type: string
                        designer:
                          type: object
                          properties:
                            x:
                              type: integer
                            'y':
                              type: integer
                    parameters:
                      type: object
              version:
                type: integer
              metadata:
                type: object
                properties:
                  expect:
                    type: array
                    items:
                      type: object
                  restore:
                    type: object
                    properties:
                      qs:
                        type: object
                        properties:
                          mode:
                            type: string
                          items:
                            type: array
                            items: {}
                      method:
                        type: object
                        properties:
                          mode:
                            type: string
                          label:
                            type: string
                      headers:
                        type: object
                        properties:
                          mode:
                            type: string
                          items:
                            type: array
                            items: {}
                      bodyType:
                        type: object
                        properties:
                          label:
                            type: string
                  designer:
                    type: object
                    properties:
                      x:
                        type: integer
                      'y':
                        type: integer
                  parameters:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        type:
                          type: string
                        label:
                          type: string
                        required:
                          type: boolean
              parameters:
                type: object
                properties:
                  handleErrors:
                    type: boolean
        name:
          type: string
        metadata:
          type: object
          properties:
            version:
              type: integer
            scenario:
              type: object
              properties:
                maxErrors:
                  type: integer
                autoCommit:
                  type: boolean
                roundtrips:
                  type: integer
    Hook:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        teamId:
          type: integer
        udid:
          type: string
        type:
          type: string
        packageName:
          type: string
        theme:
          type: string
          format: color
        flags:
          type: object
          properties:
            form:
              type: boolean
        editable:
          type: boolean
        queueCount:
          type: integer
        queueLimit:
          type: integer
        enabled:
          type: boolean
        gone:
          type: boolean
        typeName:
          type: string
        data:
          type: object
          additionalProperties: true
          properties:
            headers:
              type: boolean
            method:
              type: boolean
            stringify:
              type: boolean
            teamId:
              type: integer
            ip:
              type: string
              format: ipv6
            udt:
              type: integer
        scenarioId:
          type: integer
        url:
          type: string
          format: uri
    HookEventIncoming:
      type: object
      properties:
        id:
          type: string
        scope:
          type: string
        size:
          type: integer
        created:
          type: string
          format: date-time
        data:
          type: object
    Key:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        typeName:
          type: string
        teamId:
          type: integer
        packageName:
          type: string
        theme:
          type: string
          format: color
    KeyType:
      type: object
      properties:
        name:
          type: string
        label:
          type: string
        parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              label:
                type: string
              type:
                type: string
        componentType:
          type: string
        author:
          type: string
        version:
          type: string
        theme:
          type: string
          format: color
        icon:
          type: string
    Organization:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        serviceName:
          type: string
        nextReset:
          type: string
          format: date-time
        lastReset:
          type: string
          format: date-time
        isPaused:
          type: boolean
        countryId:
          type: integer
        timezoneId:
          type: integer
        deleted:
          type: boolean
        license:
          type: object
          additionalProperties: {}
        zone:
          type: string
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
        productName:
          type: string
        scenarios:
          type: integer
        activeScenarios:
          type: integer
    Notification:
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
        read:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
        type:
          type: integer
    NotificationAll:
      allOf:
        - type: object
          properties:
            id:
              type: string
            subject:
              type: string
            read:
              type: string
              format: date-time
            created:
              type: string
              format: date-time
            type:
              type: integer
        - type: object
          properties:
            body:
              type: string
    Connection:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        accountName:
          type: string
        accountLabel:
          type: string
        packageName:
          type: string
        expire:
          type: string
          format: date-time
        metadata:
          type: object
          properties:
            value:
              type: string
            type:
              type: string
              enum:
                - string
                - email
        teamId:
          type: integer
        theme:
          type: string
          format: color
        upgradeable:
          type: boolean
        scopesCnt:
          type: integer
        scoped:
          type: boolean
        accountType:
          type: string
        editable:
          type: boolean
        uid:
          type: string
        connectedSystemId:
          type: string
        organizationId:
          type: integer
    ConnectionAll:
      allOf:
        - type: object
          properties:
            id:
              type: integer
            name:
              type: string
            accountName:
              type: string
            accountLabel:
              type: string
            packageName:
              type: string
            expire:
              type: string
              format: date-time
            metadata:
              type: object
              properties:
                value:
                  type: string
                type:
                  type: string
                  enum:
                    - string
                    - email
            teamId:
              type: integer
            theme:
              type: string
              format: color
            upgradeable:
              type: boolean
            scopesCnt:
              type: integer
            scoped:
              type: boolean
            accountType:
              type: string
            editable:
              type: boolean
            uid:
              type: string
            connectedSystemId:
              type: string
            organizationId:
              type: integer
        - type: object
          properties:
            scopes:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  account:
                    type: string
    Template:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        teamId:
          type: integer
        teamName:
          type: string
        organizationId:
          type: string
        description:
          type: string
        usedApps:
          type: array
          items:
            type: string
        public:
          type: boolean
        published:
          type: string
          format: date-time
        approved:
          type: string
          format: date-time
        approvedId:
          type: integer
        requestedApproval:
          type: boolean
        publishedId:
          type: integer
        publicUrl:
          type: string
        approvedName:
          type: string
        publishedName:
          type: string
    TemplatePublic:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        url:
          type: string
        usedApps:
          type: array
          items:
            type: string
        usage:
          type: integer
    SdkApp:
      type: object
      properties:
        name:
          type: string
        label:
          type: string
        version:
          type: integer
        beta:
          type: boolean
    SdkAppDetail:
      type: object
      properties:
        name:
          type: string
        label:
          type: string
        description:
          type: string
        version:
          type: integer
        beta:
          type: boolean
        theme:
          type: string
          format: color
        language:
          type: string
        public:
          type: boolean
        approved:
          type: boolean
        global:
          type: boolean
        countries:
          type: array
          items: {}
        created:
          type: string
          format: date-time
        manifestVersion:
          type: integer
    SdkAppReview:
      type: object
      properties:
        contactName:
          type: string
        contactEmail:
          type: string
          format: email
        reviewerName:
          type: string
        reviewerEmail:
          type: string
          format: email
        codeStatus:
          type: string
        testStatus:
          type: string
        docsStatus:
          type: string
    SdkAppReviewForm:
      type: object
      properties:
        config:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              label:
                type: string
              type:
                type: string
              required:
                type: boolean
              spec:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    label:
                      type: string
                    type:
                      type: string
        values:
          type: object
          properties:
            testingScenarios:
              type: object
    Scheduling:
      type: object
      properties:
        type:
          type: string
          enum:
            - immediately
            - indefinitely
            - once
            - daily
            - weekly
            - monthly
            - yearly
        interval:
          type: integer
          minimum: 0
        date:
          type: string
          format: date-time
        between:
          type: array
          items:
            type: string
            format: date-time
        time:
          type: string
          pattern: ^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\.[0-9]+)?$
        days:
          type: array
          items:
            type: integer
            minimum: 0
            maximum: 31
        months:
          type: array
          items:
            type: integer
            minimum: 1
            maximum: 12
        restrict:
          type: array
          items:
            type: object
            properties:
              time:
                type: array
                items:
                  type: string
                  nullable: true
                  pattern: ^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\.[0-9]+)?$
              days:
                type: array
                items:
                  type: integer
                  minimum: 0
                  maximum: 31
              months:
                type: array
                items:
                  type: integer
                  minimum: 1
                  maximum: 12
    Controller:
      type: object
      properties:
        name:
          type: string
          maxLength: 120
          minLength: 1
        description:
          type: string
          maxLength: 1500
          minLength: 0
        idSequence:
          type: integer
        modules:
          type: object
    HookLog:
      type: object
      properties:
        statusId:
          type: integer
        parser:
          type: string
        replayable:
          type: boolean
        sizes:
          type: object
          properties:
            before:
              type: integer
            after:
              type: integer
        loggedAt:
          type: string
          format: date-time
        udids:
          type: array
          items:
            type: string
        typeId:
          type: integer
        id:
          type: integer
        appParser:
          type: string
        imtId:
          type: string
    HookLogDetail:
      type: object
      properties:
        statusId:
          type: integer
        parser:
          type: string
        replayable:
          type: boolean
        data:
          type: object
          properties:
            request:
              type: object
              properties:
                headers:
                  type: object
                  additionalProperties: {}
                method:
                  type: string
                query:
                  type: object
                  additionalProperties: {}
                ip:
                  type: string
                parsed:
                  type: string
                body:
                  oneOf:
                    - type: string
                    - type: object
                      additionalProperties: {}
                url:
                  type: string
            response:
              type: object
              properties:
                headers:
                  type: array
                  items:
                    type: string
                body:
                  type: string
                status:
                  type: integer
        sizes:
          type: object
          properties:
            before:
              type: integer
            after:
              type: integer
        loggedAt:
          type: string
          format: date-time
        udids:
          type: array
          items:
            type: string
        typeId:
          type: integer
        id:
          type: integer
        appParser:
          type: string
        imtId:
          type: string
    ScenarioInterfaceInput:
      type: object
      additionalProperties: {}
      description: >-
        Contains the `input` array with specification of the scenario input
        parameters.
    ScenarioInterfaceOutput:
      type: object
      additionalProperties: {}
    Admin--Organizations:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        timezoneId:
          type: number
        countryId:
          type: number
        license:
          type: object
          additionalProperties: {}
        serviceName:
          type: string
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              externalId:
                type: string
        isPaused:
          type: boolean
        zone:
          type: string
        externalId:
          type: string
        scenarios:
          type: integer
        activeScenarios:
          type: integer
        deleted:
          type: boolean
    CustomPropertyStructureItem-response:
      type: object
      properties:
        id:
          type: integer
        created:
          type: string
          format: date-time
        belongers:
          type: array
          items:
            type: object
            properties:
              belongerId:
                type: integer
              belongerType:
                type: string
              associatedTypes:
                type: array
                items:
                  type: string
    CustomPropertyStructureItem-requestBody-post:
      type: object
      properties:
        name:
          description: >-
            The ID of the structure item. The `name` has to be unique in the
            custom properties structure.
          type: string
        label:
          description: Make displays the item label to users in the scenario table header.
          type: string
        description:
          description: >-
            The description of the custom property structure item. You can
            review the item description in the **Scenario properties** tab in
            the Organization dashboard.
          type: string
        type:
          description: >-
            The data type of the custom property structure item. The data types
            `dropdown` and `multiselect` allow you to specify available options
            for the item data.
          type: string
          enum:
            - boolean
            - number
            - shortText
            - longText
            - date
            - dropdown
            - multiselect
        options:
          description: >-
            The options available to users when filling in the item data. For
            the data types `dropdown` and `multiselect`, fill in an object like
            `{"options":[{"value": "Marketing"}, {"value": "Sales"}]}`.

            You can omit the `options` parameter for the rest of the data
            types. 
        required:
          description: >-
            Set to `true` in order to make a structure item required when adding
            custom property data. Default value is `false`.
          type: boolean
      required:
        - name
        - label
        - type
    CustomPropertyStructureItem-requestBody-patch:
      type: object
      properties:
        label:
          description: Make displays the item label to users in the scenario table header.
          type: string
        description:
          description: >-
            The description of the custom property structure item. You can
            review the item description in the **Scenario properties** tab in
            the Organization dashboard.
          type: string
        options:
          description: >-
            The options available to users when filling in the item data. For
            the data types `dropdown` and `multiselect`, fill in an object like
            `{"options":[{"value": "Marketing"}, {"value": "Sales"}]}`.

            You can omit the `options` parameter for the rest of the data
            types. 
        required:
          description: >-
            Set to `true` if you require to fill in data to the structure item
            when adding custom property data. Default value is `false`.
          type: boolean
  parameters:
    PgSortBy:
      name: pg[sortBy]
      in: query
      schema:
        type: string
      description: The value that will be used to sort returned entities by.
    PgSortById:
      name: pg[sortBy]
      in: query
      schema:
        type: string
        enum:
          - id
      description: The value that will be used to sort returned entities by.
    PgSortByName:
      name: pg[sortBy]
      in: query
      schema:
        type: string
        enum:
          - name
      description: The value that will be used to sort returned entities by.
    PgSortByCustomProperties:
      name: pg[sortBy]
      in: query
      schema:
        type: string
        enum:
          - id
          - name
          - label
          - description
          - type
          - required
      description: >-
        Specify the custom property item attribute. The custom property items in
        the response are sorted by the value of the attribute.
    PgOffset:
      name: pg[offset]
      in: query
      schema:
        type: integer
      description: The value of entities you want to skip before getting entities you need.
    PgSortDir:
      name: pg[sortDir]
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
      description: >-
        The sorting order. It accepts the ascending and descending direction
        specifiers.
    PgLimit:
      name: pg[limit]
      in: query
      schema:
        type: integer
      description: The maximum entities to return.
    TemplateId:
      name: templateId
      in: path
      schema:
        type: integer
      required: true
      description: >-
        The unique ID of the private template. It can be retrieved from the
        [List templates](/templates-get) endpoint.
      example: 164
    TemplateUrl:
      name: templateUrl
      in: path
      schema:
        type: string
      required: true
      description: >-
        The unique URL of the public (approved) template consisting of the
        template ID and name. It can be retrieved from the [List
        templates](/templates-get) endpoint.
      example: 16-multiple-apps-template-example
    TemplatePublicId:
      name: templatePublicId
      in: query
      schema:
        type: integer
      description: >-
        The unique ID of the public version of the approved template. It can be
        retrieved from the [List templates](/templates-get) endpoint as one of
        the following IDs: `publishedId` for all published templates that are
        waiting for approval or not, or `approvedId` for approved templates.
      example: 18
    TemplateUsedApps:
      name: usedApps[]
      in: query
      schema:
        type: array
        items:
          type: string
      example:
        - http
      description: >-
        The array with the text IDs of the apps used in the templates. This
        parameter allows you to get only the templates containing specific apps.
    ConnectionId:
      name: connectionId
      in: path
      schema:
        type: integer
      required: true
      description: >-
        The unique ID of the connection. It can be retrieved from the [List
        connections](/connections-get) endpoint.
      example: 1
    HookId:
      name: hookId
      in: path
      schema:
        type: integer
      required: true
      description: >-
        The ID of the webhook. Use the `GET /hooks` API call to get the ID
        values of your webhooks.
      example: 654
    ImtZoneId:
      name: imtZoneId
      in: query
      schema:
        type: integer
      description: >-
        The unique ID of the Make zone. This parameter is required to retrieve
        notifications from the Make version. For other Make platforms, it can be
        ignored. The IDs of the zones can be obtained from the `/enum/imt-zones`
        endpoint.
      example: 2
    ColsDescription:
      name: cols
      in: query
      schema:
        type: array
        items:
          type: string
      description: >-
        Specifies columns that are returned in the response. Use the `cols[]`
        parameter for every column that you want to return in the response. For
        example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and
        `key2` columns in the response.


        [Check the "Filtering" section for a full
        example.](https://www.make.com/en/api-documentation/filtering)
    To:
      name: to
      in: query
      schema:
        type: integer
      example: 1663495749015
      description: >-
        Limits data in the response to entries older than the specified
        timestamp. Use the [UNIX
        timestamp](https://en.wikipedia.org/wiki/Unix_time) format in
        milliseconds.
    From:
      name: from
      in: query
      schema:
        type: integer
      example: 1663495749015
      description: >-
        Limits data in the response to entries newer than the specified
        timestamp. Use the [UNIX
        timestamp](https://en.wikipedia.org/wiki/Unix_time) format in
        milliseconds.
    LogId:
      name: logId
      in: path
      schema:
        type: string
      required: true
      description: >-
        The ID of the webhook execution log. Use the `GET /hooks/{hookId}/logs`
        API call to get the ID values of your webhook execution logs.
      example: 95b1c20c790ff5f9d2f1e805943ce95d
    Confirmed:
      name: confirmed
      in: query
      schema:
        type: boolean
      example: true
    CustomPropertyStructureId:
      name: customPropertyStructureId
      in: path
      schema:
        type: integer
      required: true
      description: >-
        The ID of the custom property structure.

        Use the API call `GET /custom-property-structures?{organizationId}` to
        get the ID of a custom property structure.
      example: 2
    CustomPropertyStructureItemId:
      name: customPropertyStructureItemId
      in: path
      schema:
        type: integer
      required: true
      description: >-
        The ID of the custom property structure item. Get the item ID with the
        API call to [list custom property structure
        items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-get).
      example: 2
    KeyId:
      name: keyId
      in: path
      schema:
        type: integer
      required: true
      description: The unique ID of the Key.
      example: 1
    DataStructureIdRequired:
      name: dataStructureId
      in: path
      schema:
        type: integer
      required: true
      description: >-
        The data structure ID. Get the `dataStructureId` with the [list data
        structures](/data-structures-get) endpoint.
      example: 1459
security:
  - cookie: []
  - token:
      - organization:read
tags:
  - name: Auth
  - name: Admin
    description: >-
      The following sections describe endpoints available to the admins of the
      Make White Label product. If you are using the Make Cloud service you
      cannot use these endpoints.
  - name: Admin > Users
    description: >-
      The following endpoints retrieve information about the users of your Make
      White Label instance. You can also manage users, for example adding them
      to organizations and teams.
  - name: Admin > Teams
    description: >-
      The following endpoint allows you to create new teams within organizations
      in the Make White Label product. You can set the team admin directly in
      the API call request body.
  - name: Admin > Organizations
    description: >-
      The following endpoints allow you to inspect and manage organizations in
      the Make White Label product. You can also adjust operations and data
      transfer allowance and manage individual organizations access to Make
      White Label features.
  - name: Admin > Platform settings
    description: >-
      The following endpoints allow you to inspect the settings of your Make
      platform instance.
  - name: Affiliate
  - name: Agents
  - name: Audit logs
    description: >
      The following endpoints allow you to get the organization and team audit
      logs and their details.


      You can read more about audit logs in our [Help
      Center](https://www.make.com/en/help/access-management/audit-logs).
  - name: Cashier
  - name: Connections
    description: >-
      For most apps included in Make, it is necessary to create a connection,
      through which Make will communicate with the given third-party service
      according to the settings of a specific scenario. The following endpoints
      allow you to create and manage connections.
  - name: Custom properties
    description: >-
      The following endpoints allow you to create and list custom property
      structures.

      To use custom properties, you have to:

      1. [Create a custom properties
      structure](https://www.make.com/en/api-documentation/custom-property-structures-post).
       2. [Create custom properties structure items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-post).
       3. [Fill the items with data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post).

      Read more about custom properties in the [custom properties feature
      documentation](https://www.make.com/en/help/scenarios/custom-scenario-properties).
  - name: Custom properties > Structure items
    description: >-
      The following endpoints allow you to manage items in a custom property
      structure.

      To use custom properties, you have to:

      1. [Create a custom properties
      structure](https://www.make.com/en/api-documentation/custom-property-structures-post).
       2. [Create custom properties structure items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-post).
       3. [Fill the items with data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post).

      Read more about custom properties in the [custom properties feature
      documentation](https://www.make.com/en/help/scenarios/custom-scenario-properties).
  - name: Data stores
    description: >-
      Data stores are used to store data from scenarios or for transferring data
      in between individual scenarios or scenario runs. The following endpoints
      allow you to create and manage data stores.
  - name: Data stores > Data
    description: >-
      The following endpoints allow you to create and manage records in data
      stores.
  - name: Data structures
    description: >-
      Data structures define the format of the data being transferred to the
      Make platform. For example, they are widely used by the Data stores
      component. The following endpoints allow you to create and manage data
      structures.
  - name: Devices
  - name: Devices > Incomings
  - name: Devices > Outgoing
  - name: Incomplete executions
    description: >-
      If a scenario terminates unexpectedly because of an error, then the
      scenario run is discarded. You can set the scenario to store the failed
      scenario run as an incomplete execution. With that, if an error occurs in
      your scenario, you can resolve it manually and avoid losing data.


      Read more about the [incomplete
      executions](https://www.make.com/en/help/scenarios/incomplete-executions).
  - name: Enums
    description: >-
      The parameters with a predefined set of values are called \"enums.\" The
      enums endpoints list the mappings of a possible parameter values and the
      IDs of those values. For example, the endpoint `/enums/timezones` lists
      the timezone `name` and `code`, such as `Europe/Berlin`, and the
      `timezoneId`.
  - name: Custom functions
    description: >-
      Custom functions are functions you or your team members create that you
      can use in a scenario. The following API endpoints allow you to:


      - list
       - evaluate
       - create
       - update
       - delete
       - check version history

      of your custom functions.


      Check the custom functions feature [documentation in the Make Help
      center](https://www.make.com/en/help/functions/custom-functions).
  - name: General
    description: >-
      This section contains endpoints that provide general functionality for the
      Make API.
  - name: Hooks
    description: >-
      Hooks refer to the webhooks and mailhooks available in the various apps in
      the Make interface. They notify you whenever a certain change occurs in
      the connected app or service, such as sending an HTTP request or an email.
      The following endpoints allow you to create and manage hooks.
  - name: Hooks > Incomings
    description: >-
      When data arrive to a scheduled webhook, Make places the data in the
      webhook processing queue. Webhooks process data in the same order as they
      arrive. The following endpoints allow you to inspect and update the
      webhook processing queue.
  - name: Hooks > Logs
    description: >-
      Make stores a log of every webhook execution. Make stores webhook logs for
      3 days. The webhook logs for organizations with the Enterprise plan are
      stored for 30 days.  [Read more about webhook
      logs](https://www.make.com/en/help/tools/webhooks#webhook-logs).


      The following endpoints allow you to retrieve webhook logs.
  - name: Keys
  - name: Notifications
    description: >-
      The **Notifications** feature keeps you informed about problems in your
      scenarios and keep you up to date when it comes to the new features and
      improvements in Make. The following endpoints allow you to manage the
      notifications.
  - name: Custom property structures
    description: >-
      The following endpoints allow you to manage the custom property
      structures.
  - name: Custom property structures > Items
    description: >-
      The following endpoints allow you to manage the custom property structure
      items.
  - name: Oauth
    description: experimental
  - name: Organizations
    description: >-
      Organizations are main containers that contain all teams, scenarios, and
      users. The API endpoints discussed further allow you to manage
      organizations. [Read more about
      organizations](https://www.make.com/en/help/access-management/organizations).
  - name: Organizations > User organization roles
    description: >-
      User organization roles define user permissions in the organization. The
      endpoints discussed further retrieve information about user roles in the
      organization. Use the
      `/users/{userId}/user-organization-roles/{organizationIdId}` to manage
      user organization roles. Check out the [overview of user organization
      roles and the associated user
      permissions](https://www.make.com/en/help/access-management/organizations#organization-roles).
  - name: Organizations > Domain claimed
    description: The following endpoints allow you to manage the domain claiming.
  - name: Remote procedures
  - name: Scenarios
    description: >-
      **Scenarios** allow you to create and run automation tasks. A scenario
      consists of a series of modules that indicate how data should be
      transferred and transformed between apps or services. The following
      endpoints allow you to create, manage and execute scenarios and also
      inspect and manage [scenario
      inputs](https://www.make.com/en/help/scenarios/scenario-inputs).
  - name: Scenarios > Logs
    description: The following endpoints allow you to manage scenarios logs.
  - name: Scenarios > Blueprints
    description: The following endpoints allow you to manage scenarios blueprints.
  - name: Scenarios > Consumptions
    description: >-
      Scenario consumption is the information about the number of operations and
      data transfer used by a scenario. The following endpoints retrieve
      information about your scenarios consumptions in your current restart
      period. You can view the end of your current restart period in your
      dashboard in the **Usage reset** field.
  - name: Scenarios > Custom properties data
    description: >-
      The following endpoints allow you to manage custom scenario properties
      data.

      To use custom properties, you have to:

      1. [Create a custom properties
      structure](https://www.make.com/en/api-documentation/custom-property-structures-post).
       2. [Create custom properties structure items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-post).
       3. [Fill the items with data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post).

      Read more about custom properties in the [custom properties feature
      documentation](https://www.make.com/en/help/scenarios/custom-scenario-properties).
  - name: Scenarios folders
    description: >-
      Scenarios can be grouped into folders for better organization. The
      following endpoints allow you to create and manage scenarios folders.
  - name: SDK Apps
  - name: SDK Apps > Invites
  - name: SDK Apps > Modules
  - name: SDK Apps > RPCs
  - name: SDK Apps > Functions
  - name: SDK Apps > Connections
  - name: SDK Apps > Webhooks
  - name: SSO certificates
    description: Managing of SSO certificates.
  - name: Teams
    description: >-
      Teams are containers that contain scenarios and data accessible only by
      the members of the team. The API endpoints discussed further allow you to
      manage teams. [Read more about
      teams](https://www.make.com/en/help/access-management/teams).
  - name: Teams > User team roles
    description: >-
      User team roles define user permissions in the team. The endpoints
      discussed further retrieve information about user roles in the team. Use
      the `/users/{userId}/user-team-roles/{userId}` endpoint to manage user
      team roles. Check out the [overview of user team roles and the associated
      permissions](https://www.make.com/en/help/access-management/teams#managing-team-members).
  - name: Templates
    description: >-
      The **Templates** feature allows you to create and use templates as a
      starting point for your Make scenarios. By default, Make offers hundreds
      of templates containing the scenarios of most-used apps. The following
      endpoints allow you to create and manage templates.
  - name: Templates > Public
    description: >-
      The following endpoints focus on the public (approved) templates that are
      available to every user regardless of the organization and team.
  - name: Users
    description: >-
      The following main user endpoints allow you to get a list of existing
      users and manage their basic details such as password change.
  - name: Users > Me
    description: >-
      The following endpoints retrieve data about the currently authenticated
      user.
  - name: Users > API Tokens
    description: >-
      The following endpoints manage and retrieve data about the API tokens
      assigned to the currently authenticated user.
  - name: Users > User team roles
    description: >-
      The following endpoints update and retrieve data about user team roles of
      a user in a team. Check out the [overview of user team roles and the
      associated
      permissions](https://www.make.com/en/help/access-management/teams#managing-team-members).
  - name: Users > User team notifications
    description: >-
      The following endpoints update and retrieve data about user team
      notifications settings of a user in a team. [Read more about user team
      notifications](https://www.make.com/en/help/access-management/teams#managing-team-notification-options).
  - name: Users > User organization roles
    description: >-
      The following endpoints update and retrieve data about user organization
      roles of a user in an organization. Check out the [overview of user
      organization roles and the associated
      permissions](https://www.make.com/en/help/access-management/organizations#organization-roles).
  - name: Users > Roles
    description: >-
      The following endpoint retrieves the mapping of a `userRoleId` parameter
      and user role name.
  - name: Users > Unread notifications
    description: >-
      The following endpoint retrieves the number of unread notifications of the
      currently authenticated user.
  - name: Users > User email preferences - Mailhub
  - name: Users > Membership Promises
paths:
  /login:
    post:
      tags:
        - Auth
      summary: Log in
      x-private: true
      description: >-
        Logs a user in by passing the user's email and password in the request
        body. It does not work with an API token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
            example:
              email: test@make.cloud
              password: test
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
              example:
                userId: 1
  /logout:
    post:
      tags:
        - Auth
      summary: Log out
      x-private: true
      description: >-
        Logs the currently logged-in user out. It does not work with an API
        token.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /sso/authorize:
    post:
      tags:
        - Auth
      summary: Authorize URL
      x-private: true
      description: experimental
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                redirect:
                  type: string
              required:
                - redirect
            example:
              redirect: /
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  authorizeUrl:
                    type: string
                    format: uri
              example:
                authorizeUrl: >-
                  https://sso.example.com/authorize?response_type=code&client_id=mock.make.cloud&redirect_uri=https%3A%2F%2Fmock.make.cloud%2Fsso%2Foauth&state=c72e0f91265beae1cf7f&scope=mock.connect
  /sso/login:
    post:
      tags:
        - Auth
      summary: OAuth login
      x-private: true
      description: experimental
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                state:
                  type: string
              required:
                - code
                - state
            example:
              code: 966d7b84db750a3a297341fff8e33f07cb47b420
              state: c72e0f91265beae1cf7f
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect:
                    type: string
                  redirectAction:
                    type: object
                    properties:
                      action:
                        type: string
                      data:
                        type: object
                    required:
                      - action
              example:
                redirect: /
                redirectAction:
                  action: CREATE_SCENARIO
                  data:
                    modules:
                      - weather:now
                      - google:sheet
  /admin/teams:
    get:
      x-published: false
      tags:
        - Admin > Teams
      summary: List teams
      description: >-
        Gets the list of teams in the organization with the specified
        `organizationId`.
      security:
        - token:
            - admin:read
            - teams:read
      parameters:
        - name: organizationId
          in: query
          schema:
            type: integer
          required: true
          example: 22
          description: The ID of the organization.
        - name: externalId
          in: query
          schema:
            type: string
          description: >-
            Custom team ID from an external system to the Make White Label
            platform.
        - name: pg[sortBy]
          in: query
          schema:
            type: string
            enum:
              - name
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        organizationId:
                          type: integer
                        scenarioDrafts:
                          type: boolean
                        deleted:
                          type: boolean
                        externalId:
                          type: string
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                teams:
                  - id: 38
                    name: Management
                    organizationId: 22
                    scenarioDrafts: false
                    deleted: false
                    externalId: null
                  - id: 36
                    name: Removed team
                    organizationId: 20
                    scenarioDrafts: false
                    deleted: true
                    externalId: null
                pg:
                  sortBy: name
                  limit: 10000
                  sortDir: asc
                  offset: 0
    post:
      x-published: false
      tags:
        - Admin > Teams
      summary: Create a team
      description: >-
        Creates a new team in the specified organization.


        You can set the team admin with the parameter `userTeamAdmin` in the
        request body. If you don't use the `userTeamAdmin` parameter and you are
        part of the organization, then Make sets you as the team admin.
      security:
        - token:
            - admin:write
            - teams:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                organizationId:
                  type: integer
                  description: The ID of the organization.
                userTeamAdmin:
                  type: integer
                  description: >-
                    Set the user with the specified `userId` as the admin of the
                    team.
              required:
                - name
                - organizationId
            example:
              name: Marketing team
              organizationId: 20
              userTeamAdmin: 15
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      organizationId:
                        type: integer
                  userTeamRole:
                    type: object
                    properties:
                      usersRoleId:
                        type: integer
                      userId:
                        type: integer
                      teamId:
                        type: integer
                      changeable:
                        type: boolean
                      ssoPending:
                        type: boolean
              example:
                team:
                  id: 26
                  name: Marketing team
                  organizationId: 20
                userTeamRole:
                  usersRoleId: 1
                  userId: 15
                  teamId: 26
                  changeable: false
                  ssoPending: false
  /admin/teams/{teamId}:
    patch:
      x-published: false
      tags:
        - Admin > Teams
      summary: Update team
      description: >-
        Updates team information. Make updates only the values in the request
        body.
      security:
        - token:
            - admin:write
            - teams:write
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 56
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
            example:
              name: Sales people team
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      organizationId:
                        type: integer
                      scenarioDrafts:
                        type: boolean
                      deleted:
                        type: boolean
                      externalId:
                        type: string
              example:
                id: 56
                name: Sales people team
                organizationId: 22
                scenarioDrafts: false
                deleted: false
                externalId: null
    delete:
      x-published: false
      tags:
        - Admin > Teams
      summary: Delete a team
      description: >-
        Deletes the team with the specified `teamId`. Make removes all users
        from the deleted team and deletes all data associated with the team,
        such as data stores and scenarios.


        The team won't be visible for the users. However, if you run the API
        call `GET /admin/teams` the response will contain also the deleted team
        with the `deleted: true` pair. Similarly, the team will remain visible
        in the Administration UI.
      security:
        - token:
            - admin:write
            - teams:write
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: integer
              example:
                team: 22
  /admin/organizations:
    get:
      x-published: false
      tags:
        - Admin > Organizations
      summary: List organizations
      description: >-
        Gets the list of all organizations in the Make White Label product
        instance. The response contains all available information about all
        organizations in the Make White Label product instance.


        Use the `id`, `name` or `externalId` query parameters to limit the
        results to a specific organization or the `cols[]` parameter to get
        specific columns.
      security:
        - token:
            - admin:read
            - organizations:read
      parameters:
        - name: id
          in: query
          description: The ID of the organization.
          schema:
            type: integer
          examples:
            filter-data:
              value: 5
        - name: name
          in: query
          description: The name of the organization.
          schema:
            type: string
        - name: externalId
          in: query
          description: >-
            Custom organization ID from a different system than Make White
            Label.
          schema:
            type: string
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            filter-data:
              value:
                - id
                - name
                - license
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        timezoneId:
                          type: number
                        countryId:
                          type: number
                        license:
                          type: object
                          additionalProperties: {}
                        serviceName:
                          type: string
                        teams:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              externalId:
                                type: string
                        isPaused:
                          type: boolean
                        zone:
                          type: string
                        externalId:
                          type: string
                        scenarios:
                          type: integer
                        activeScenarios:
                          type: integer
                        deleted:
                          type: boolean
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              examples:
                default-cols:
                  summary: All data
                  description: >-
                    Get all available data about all organizations in the Make
                    White Label instance.
                  value:
                    organizations:
                      - id: 7
                        name: API example
                        timezoneId: 318
                        countryId: 202
                        license:
                          dslimit: 40
                          executionTime: 45
                          fslimit: 1048576000
                          iolimit: 10000
                          dsslimit: 524288000
                          interval: 1
                          transfer: 1099511627776
                          operations: 800000000
                          gracePeriod: 0
                          customVariables: true
                          productManagement: salesforce
                          scenarioInputs: true
                          restartPeriod: 1 month
                        serviceName: default
                        teams:
                          - id: 6
                            name: My Team
                            externalId: null
                        isPaused: false
                        zone: white.label.example.com
                        externalId: null
                        scenarios: 2
                        activeScenarios: 0
                        deleted: false
                      - id: 5
                        name: new org
                        timezoneId: 113
                        countryId: 1
                        license:
                          dslimit: 40
                          fslimit: 2147483648
                          iolimit: 10000
                          apiLimit: 2000
                          dsslimit: 524288000
                          fulltext: true
                          interval: 1
                          transfer: 1099511627776
                          operations: 800000000
                          scenarioIO: true
                          executionTime: 45
                          restartPeriod: 1 month
                          customVariables: true
                          creatingTemplates: true
                          installPublicApps: true
                          gracePeriod: 0
                          productManagement: salesforce
                        serviceName: default
                        teams:
                          - id: 4
                            name: My Team
                            externalId: null
                        isPaused: false
                        zone: white.label.example.com
                        externalId: null
                        scenarios: 0
                        activeScenarios: 0
                        deleted: true
                    pg:
                      sortBy: id
                      limit: 10000
                      sortDir: desc
                      offset: 0
                filter-data:
                  summary: Filter results
                  description: >-
                    Get the `id`, `name` and `license` of the specified
                    organization.
                  value:
                    organizations:
                      - id: 5
                        name: new org
                        license:
                          dslimit: 40
                          fslimit: 2147483648
                          iolimit: 10000
                          apiLimit: 2000
                          dsslimit: 524288000
                          fulltext: true
                          interval: 1
                          transfer: 1099511627776
                          operations: 800000000
                          scenarioIO: true
                          executionTime: 45
                          restartPeriod: 1 month
                          customVariables: true
                          creatingTemplates: true
                          installPublicApps: true
                          scenarioInputs: true
                          productManagement: salesforce
                          gracePeriod: 0
                    pg:
                      sortBy: id
                      limit: 10000
                      sortDir: desc
                      offset: 0
    post:
      x-published: false
      tags:
        - Admin > Organizations
      summary: Create an organization
      description: >
        Create a new organization in the Make White Label instance. You can set
        the organization admin, timezone, country and features with the
        `countryId`, `timezoneId`, `userOrgAdmin` and `license` parameters in
        the request body.


        If you don't use the `countryId` and `timezoneId` parameters Make uses
        your account values to set the organization timezone and country.


        If you don't use the `userOrgAdmin` parameter you are set as the
        organization admin.


        The `license` object sets the features and limits for the users in the
        organization. The following table lists all license parameters and their
        maximum, minimum, or available values for enumerated parameters. If you
        don't use the `license` parameter Make sets the organization's license
        to the default values for your Make White Label instance. You can check
        the default license of your Make White Label instance with the [get
        default
        license](https://www.make.com/en/api-documentation/admin-system-settings-default-license-get)
        endpoint.
         <!-- license input anchor begin -->
        <div itemscope itemtype="https://schema.org/FAQPage"> <div class="card
        table"> <table class="table"> <thead> <tr> <th><strong
        class="text-nowrap">Parameter</strong></th> <th><strong>Description and
        values</strong></th> </tr> </thead> <tbody> <tr itemscope
        itemprop="mainEntity" itemtype="https://schema.org/Question"> <td> <p
        itemprop="name"> <code>restartPeriod</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>The period of time after which Make resets
        organization's operations and data transfer.</p>
        <p><strong>Type:</strong> enum&lt;string&gt;</p>
        <p><strong>Values:</strong></p> <ul> <li>1 month</li> <li>1 year</li>
        </ul> </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>operations</code> <span class="required">REQUIRED</span> </p>
        </td> <td itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>The
        number of operations that are available to scenarios in the
        organization. Operations reset after the restart period.</p>
        <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p>
        <ul> <li><strong>min:</strong> 0</li> <li><strong>max:</strong>
        800000000</li> </ul> </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>transfer</code> <span class="required">REQUIRED</span> </p> </td>
        <td itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>The
        maximum amount of data transfer in bytes available to scenarios in the
        organization. Transfer resets after the restart period.</p>
        <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p>
        <ul> <li><strong>min:</strong> 104857600</li> <li><strong>max:</strong>
        1099511627776</li> </ul> </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>dslimit</code> <span class="required">REQUIRED</span> </p> </td>
        <td itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>The
        maximum number of data stores in the organization.</p>
        <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p>
        <ul> <li><strong>min:</strong> 1</li> <li><strong>max:</strong>
        1000</li> </ul> </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>dsslimit</code> <span class="required">REQUIRED</span> </p> </td>
        <td itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>The
        maximum storage in bytes available across all data stores in the
        organization.</p> <p><strong>Type:</strong> uinteger</p>
        <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 1</li>
        <li><strong>max:</strong> 2306867200</li> </ul> </td> </tr> <tr
        itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
        <td> <p itemprop="name"> <code>interval</code> <span
        class="required">REQUIRED</span> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>The minimum interval between two scheduled scenario
        executions in minutes. The interval setting is ignored when the scenario
        scheduling is set to "immediately".</p> <p><strong>Type:</strong>
        uinteger</p> <p><strong>Values:</strong></p> <ul>
        <li><strong>min:</strong> 1</li> <li><strong>max:</strong> 15</li> </ul>
        </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>teams</code> </p> </td> <td itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>The
        maximum number of teams in the organization. Unlimited if not
        specified.</p> <p><strong>Type:</strong> uinteger</p>
        <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 1</li>
        <li><strong>max:</strong> 1000</li> </ul> </td> </tr> <tr itemscope
        itemprop="mainEntity" itemtype="https://schema.org/Question"> <td> <p
        itemprop="name"> <code>retention</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>The number of days to store internal logs
        (<code>activity stream</code>, <code>userdata fulltext</code>,
        <code>userdata</code>, <code>debugdata</code>) for the organization.
        <br> The <code>retention</code> parameter limits for example the
        scenario execution detail storage duration. Scenario executions older
        than the <code>retention</code> period have only information about the
        scenario execution start and status.</p> <p><strong>Type:</strong>
        enum&lt;uinteger&gt;</p> <p><strong>Values:</strong></p> <ul> <li>7</li>
        <li>30</li> <li>60</li> <li><strong>default:</strong> 60</li> </ul>
        </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>premiumApps</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Users in the organization have access to premium
        apps that have the same or lower premium tier as the value of the
        <code>premiumApps</code> parameter. <br> To check the installed apps
        premium tier: <br> 1. List all installed apps with the API call
        <code>GET /admin/apps</code> to get the app names in the
        <code>name</code> field. <br> 2. Run the API call <code>GET
        /admin/apps/{appName}</code>. Check the field <code>premiumTier</code>
        for the premium tier of the app.</p> <p><strong>Type:</strong>
        uinteger</p> <p><strong>Values:</strong></p> <ul>
        <li><strong>min:</strong> 1</li> <li><strong>max:</strong> 10</li> </ul>
        </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>priority</code> </p> </td> <td itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Sets the
        scenario execution priority of the scenarios in the organization. <br>
        Make executes scenarios from an execution queue. If there are scenarios
        scheduled to run at the same time, Make orders them for execution
        according to their priority.</p> <p><strong>Type:</strong>
        enum&lt;string&gt;</p> <p><strong>Values:</strong></p> <ul> <li>low</li>
        <li>medium</li> <li>high</li> </ul> </td> </tr> <tr itemscope
        itemprop="mainEntity" itemtype="https://schema.org/Question"> <td> <p
        itemprop="name"> <code>allowOverage</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Sets the percentage by which scenarios can exceed
        the number of available operations and data transfer. <br> For example,
        if the organization has the <code>operations</code> limit 1000 and the
        <code>allowOverage</code> parameter set to 120, the scenarios in the
        organization can use up to 1200 operations before Make stops and
        inactivates them.</p> <p><strong>Type:</strong> uinteger</p>
        <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 100</li>
        <li><strong>max:</strong> 200</li> </ul> </td> </tr> <tr itemscope
        itemprop="mainEntity" itemtype="https://schema.org/Question"> <td> <p
        itemprop="name"> <code>apiLimit</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Sets a limit to the number of API calls per minute
        to work with the data contained in the organization. If a user is part
        of multiple organizations, Make limits API calls to each organization
        according to the organization's <code>apiLimit</code>. <br> <br> <div
        class="alert alert-warning">If you don't specify the
        <code>apiLimit</code>, Make sets the <code>apiLimit</code> to 0, which
        disables access to the data in the organization with the API.</div></p>
        <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p>
        <ul> <li><strong>min:</strong> 0</li> <li><strong>max:</strong>
        2000</li> </ul> </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>fulltext</code> </p> </td> <td itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Allows
        full text search in the scenario execution history to the users in the
        organization.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr
        itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
        <td> <p itemprop="name"> <code>dedicatedSso</code> </p> </td> <td
        itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Allows
        logging in to the White Label platform with a custom single sign-on
        solution.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr
        itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
        <td> <p itemprop="name"> <code>installPublicApps</code> </p> </td> <td
        itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Allows
        installation of apps that were created by user that is not part of the
        organization.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr
        itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
        <td> <p itemprop="name"> <code>creatingTemplates</code> </p> </td> <td
        itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Allows
        the users to create scenario templates.</p> <p><strong>Type:</strong>
        boolean</p> </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>scenarios</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Sets the maximum number of active scenarios in the
        organization. The number is unlimited if not specified.</p>
        <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p>
        <ul> <li><strong>min:</strong> 1</li> <li><strong>max:</strong>
        1000000</li> </ul> </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>dlqStorage</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Sets the maximum storage in bytes for the scenario
        incomplete executions.</p> <p><strong>Type:</strong> uinteger</p>
        <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 1</li>
        <li><strong>max:</strong> 2097152000</li> </ul> </td> </tr> <tr
        itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
        <td> <p itemprop="name"> <code>executionTime</code> </p> </td> <td
        itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>The
        maximum duration of a scenario execution in minutes.</p>
        <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p>
        <ul> <li><strong>min:</strong> 5</li> <li><strong>max:</strong> 45</li>
        </ul> </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>customVariables</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Allows using the <a
        href="https://www.make.com/en/help/functions/variables#custom-variables-1529751">custom
        variables</a> feature.</p> <p><strong>Type:</strong> boolean</p> </td>
        </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>customFunctions</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Allows using the <a
        href="https://www.make.com/en/help/functions/custom-functions">custom
        functions</a> feature.</p> <p><strong>Type:</strong> boolean</p> </td>
        </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>fslimit</code> <span class="required">REQUIRED</span> </p> </td>
        <td itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Maximum
        individual file size in bytes that a scenario in the organization can
        transfer.</p> <p><strong>Type:</strong> uinteger</p>
        <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong>
        5242880</li> <li><strong>max:</strong> 1048576000</li> </ul> </td> </tr>
        <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>productManagement</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Defines the subscription management method.
        Organizations in the Make White Label platform must have this parameter
        set to "salesforce". You cannot change the value of this parameter.</p>
        <p><strong>Type:</strong> enum&lt;string&gt;</p>
        <p><strong>Values:</strong></p> <ul> <li>salesforce</li> </ul> </td>
        </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>iolimit</code> <span class="required">REQUIRED</span> </p> </td>
        <td itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Sets the
        maximum size of input and output webhook queues.</p>
        <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p>
        <ul> <li><strong>min:</strong> 10</li> <li><strong>max:</strong>
        10000</li> </ul> </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>gracePeriod</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Sets a time limit in days during which the
        organization has access to all of its features without payment.
        Organizations in the Make White Label platform must have this parameter
        set to 0. You cannot change the value of this parameter.</p>
        <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p>
        <ul> <li>0</li> </ul> </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>appslimit</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Sets the maximum number of apps used by all active
        scenarios in the organization. Unlimited if not specified.</p>
        <p><strong>Type:</strong> uinteger</p> </td> </tr> <tr itemscope
        itemprop="mainEntity" itemtype="https://schema.org/Question"> <td> <p
        itemprop="name"> <code>onDemandScheduling</code> </p> </td> <td
        itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Allows <a
        href="https://www.make.com/en/help/scenarios/scheduling-a-scenario#on-demand-scheduling-935240">scenario
        On-Demand scheduling</a>.</p> <p><strong>Type:</strong> boolean</p>
        </td> </tr> <tr itemscope itemprop="mainEntity"
        itemtype="https://schema.org/Question"> <td> <p itemprop="name">
        <code>scenarioIO</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Allows the <a
        href="https://www.make.com/en/help/scenarios/scenario-inputs">scenario
        inputs</a> feature for the scenarios in the organization.</p>
        <p><strong>Type:</strong> boolean</p> </td> </tr> <tr itemscope
        itemprop="mainEntity" itemtype="https://schema.org/Question"> <td> <p
        itemprop="name"> <code>customProperties</code> </p> </td> <td itemscope
        itemprop="acceptedAnswer" itemtype="https://schema.org/Answer"> <div
        itemprop="text"> <p>Enables the <a
        href="https://www.make.com/en/help/scenarios/custom-scenario-properties">custom
        properties</a> feature. With custom properties, your users can add
        custom metadata to scenarios and use them to sort and filter their
        scenarios. <br/> The specified number sets the maximum number of
        structure items in a custom property structure.</p>
        <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p>
        <ul> <li><strong>default:</strong> 100</li> </ul> </td> </tr> <tr
        itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
        <td> <p itemprop="name"> <code>auditLogsDays</code> </p> </td> <td
        itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Set the
        parameter to a non-zero number to enable the <a
        href="https://www.make.com/en/help/access-management/audit-logs">audit
        logs</a> feature. With audit logs, you can track and review user actions
        in Make. In addition, users with the "Owner," "Admin" and "Team Admin"
        roles can view audit logs in Make.<br/> The specified number is the
        amount of days for which Make stores the audit log entries. <br/>  The
        default value 0 disables the feature.</p> <p><strong>Type:</strong>
        uinteger</p> <p><strong>Values:</strong></p> <ul>
        <li><strong>default:</strong> 0</li> </ul> </td> </tr> <tr itemscope
        itemprop="mainEntity" itemtype="https://schema.org/Question"> <td> <p
        itemprop="name"> <code>webhookLogRetentionDays</code> </p> </td> <td
        itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Sets the
        number of days for which Make keeps webhook logs.</p>
        <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p>
        <ul> <li><strong>default:</strong> 3</li> <li><strong>min:</strong>
        3</li> <li><strong>max:</strong> 30</li> </ul> </td> </tr> <tr itemscope
        itemprop="mainEntity" itemtype="https://schema.org/Question"> <td> <p
        itemprop="name"> <code>dynamicDependencies</code> </p> </td> <td
        itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Enables
        dynamic dependencies in a scenario. Dynamic dependencies allow users to
        map Make entities, like connections or data stores, in their
        scenarios.<br/> For example, <a
        href="https://www.make.com/en/help/connections/dynamic-connections">dynamic
        connections</a> are dynamic dependencies.</p> <p><strong>Type:</strong>
        boolean</p> <p><strong>Values:</strong></p> <ul>
        <li><strong>default:</strong> false</li> </ul> </td> </tr> <tr itemscope
        itemprop="mainEntity" itemtype="https://schema.org/Question"> <td> <p
        itemprop="name"> <code>dynamicConnections</code> </p> </td> <td
        itemscope itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"> <div itemprop="text"> <p>Enables
        <a
        href="https://www.make.com/en/help/connections/dynamic-connections">dynamic
        connections</a> in a scenario. To allow using dynamic connections, you
        have to enable dynamic dependencies as well.</p>
        <p><strong>Type:</strong> boolean</p> <p><strong>Values:</strong></p>
        <ul> <li><strong>default:</strong> false</li> </ul> </td> </tr> </tbody>
        </table> </div>

        <!-- license input anchor end -->
      security:
        - token:
            - admin:write
            - organizations:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the organization.
                timezoneId:
                  type: integer
                  description: >-
                    The ID of the timezone associated with the organization. Get
                    the list of the timezone IDs with the API call `GET
                    /enums/timezones`.
                countryId:
                  type: integer
                  description: >-
                    The ID of the country associated with the organization. Get
                    the list of the country IDs with the API call `GET
                    /enums/countries`.
                userOrgAdmin:
                  type: integer
                  description: >-
                    The ID of the user who will be the admin of the
                    organization. Get the list of the user IDs with the API call
                    `GET /admin/users`.
                license:
                  type: object
                  additionalProperties: {}
                  description: >-
                    The resources and features available to the users in the
                    organization.
              required:
                - name
            examples:
              useDefaults:
                summary: Use defaults
                description: >-
                  Create a new organization. You have to specify only the name
                  of the organization. The rest is set to default values.


                  Organizations timezone and country are set the same as your
                  account timezone and country. You are set as the organization
                  admin. The organization license is set from the default
                  license parameters.
                value:
                  name: Default organization
              specifyManually:
                summary: Set manually
                description: Fill all available parameters with custom values.
                value:
                  name: Custom organization
                  timezoneId: 76
                  countryId: 105
                  userOrganizationAdmin: 5
                  license:
                    dslimit: 40
                    fslimit: 1048576000
                    iolimit: 1000
                    dsslimit: 230686720
                    interval: 4
                    transfer: 104857600
                    scenarios: 4
                    operations: 50000000
                    customVariables: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      serviceName:
                        type: string
                      nextReset:
                        type: string
                        format: date-time
                      lastReset:
                        type: string
                        format: date-time
                      isPaused:
                        type: boolean
                      countryId:
                        type: integer
                      timezoneId:
                        type: integer
                      deleted:
                        type: boolean
                      license:
                        type: object
                        additionalProperties: {}
                      zone:
                        type: string
                      teams:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                      productName:
                        type: string
                      scenarios:
                        type: integer
                      activeScenarios:
                        type: integer
              examples:
                useDefaults:
                  value:
                    organization:
                      name: Default organization
                      timezoneId: 113
                      countryId: 42
                      license:
                        dslimit: 50
                        fslimit: 1048576000
                        iolimit: 10000
                        dsslimit: 230686720
                        interval: 1
                        transfer: 104857600
                        scenarios: 4
                        operations: 800000000
                        gracePeriod: 0
                        customVariables: false
                        productManagement: salesforce
                      serviceName: default
                      teams:
                        - id: null
                          name: My team
                      isPaused: false
                      zone: white.label.zone.com
                      externalId: null
                      scenarios: 0
                      activeScenarios: 0
                      deleted: false
                    userOrganizationRole:
                      userId: 4
                      organizationId: 22
                      userRoleId: 11
                      invitation: null
                      ssoPending: false
                specifyManually:
                  value:
                    organization:
                      name: Custom organization
                      timezoneId: 76
                      countryId: 105
                      userOrganizationAdmin: 5
                      license:
                        dslimit: 40
                        fslimit: 1048576000
                        iolimit: 1000
                        dsslimit: 230686720
                        interval: 4
                        transfer: 104857600
                        scenarios: 4
                        operations: 50000000
                        gracePeriod: 0
                        customVariables: true
                        productManagement: salesforce
                      serviceName: default
                      teams:
                        - id: null
                          name: My team
                      isPaused: false
                      zone: white.label.zone.com
                      externalId: null
                      scenarios: 0
                      activeScenarios: 0
                      deleted: false
                    userOrganizationRole:
                      userId: 5
                      organizationId: 22
                      userRoleId: 11
                      invitation: null
                      ssoPending: false
  /admin/organizations/{organizationId}:
    patch:
      x-published: false
      tags:
        - Admin > Organizations
      summary: Update organization
      description: >-
        Updates the specified organization. Updates only parameters specified in
        the request body. Check the [API call to create
        organizations](https://www.make.com/en/api-documentation/admin-organizations-post)
        for a full breakdown of the organization license parameters.


        <div class="alert alert-warning">When updating organization's license,
        Make replaces the old organization's license with the new one. You have
        to send a valid <code>license</code> object with all the license
        parameters you want to set for the organization.</div>


        You can set the next reset of the organization's consumption with the
        `nextReset` parameter. 


        Use the `performReset` parameter to reset the organization's consumption
        with the API call. You can set the next reset with the `nextReset`
        parameter, or Make sets the next reset according to the organization's
        `resetPeriod`.
      security:
        - token:
            - admin:write
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          description: The ID of the organization.
          schema:
            type: integer
          required: true
          example: 10
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the organization.
                timezoneId:
                  type: integer
                  description: >-
                    The ID of the timezone associated with the organization. Get
                    the list of the timezone IDs with the API call `GET
                    /enums/timezones`.
                countryId:
                  type: integer
                  description: >-
                    The ID of the country associated with the organization. Get
                    the list of the country IDs with the API call `GET
                    /enums/countries`.
                nextReset:
                  type: string
                  format: date-time
                  description: >-
                    The moment to which you want to schedule the reset of the
                    organization's consumption.
                performReset:
                  type: boolean
                  description: >-
                    Set to `true` if you want to reset the organization's
                    consumption with the API call. Make sets the next reset of
                    the organization's consumption either to the moment from the
                    `nextReset` parameter, or according to the organization's
                    restart period.
                license:
                  type: object
                  additionalProperties: {}
                  description: >-
                    The resources and features available to the users in the
                    organization.
            examples:
              update-org:
                summary: Update organization
                description: >-
                  Updates the organization's `name`, timezone, country and
                  `license`.
                value:
                  name: Updated organization
                  timezoneId: 113
                  countryId: 1
                  license:
                    dslimit: 20
                    fslimit: 6242880
                    iolimit: 10000
                    apiLimit: 2000
                    dsslimit: 524288000
                    fulltext: true
                    interval: 1
                    transfer: 105000000
                    operations: 100000
                    executionTime: 45
                    restartPeriod: 1 month
                    customVariables: true
                    creatingTemplates: true
                    installPublicApps: true
              update-reset:
                summary: Reset organization's consumption
                description: >-
                  Resets the organization's consumption immediately and sets the
                  next reset to 04. 07. 2023 12:00.
                value:
                  performReset: true
                  nextReset: 2024-07-04T12:00:00.000Z
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      serviceName:
                        type: string
                      nextReset:
                        type: string
                        format: date-time
                      lastReset:
                        type: string
                        format: date-time
                      isPaused:
                        type: boolean
                      countryId:
                        type: integer
                      timezoneId:
                        type: integer
                      deleted:
                        type: boolean
                      license:
                        type: object
                        additionalProperties: {}
                      zone:
                        type: string
                      teams:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                      productName:
                        type: string
                      scenarios:
                        type: integer
                      activeScenarios:
                        type: integer
              examples:
                update-org:
                  value:
                    organization:
                      id: 10
                      name: Updated organization
                      timezoneId: 113
                      countryId: 1
                      lastReset: 2023-06-05T12:00:00.000Z
                      nextReset: 2023-07-05T12:00:00.000Z
                      license:
                        dslimit: 20
                        fslimit: 6242880
                        iolimit: 10000
                        apiLimit: 2000
                        dsslimit: 524288000
                        fulltext: true
                        interval: 1
                        transfer: 105000000
                        operations: 100000
                        executionTime: 45
                        restartPeriod: 1 month
                        customVariables: true
                        creatingTemplates: true
                        installPublicApps: true
                        gracePeriod: 0
                        productManagement: salesforce
                      serviceName: default
                      teams:
                        - id: 155364
                          name: My team
                      isPaused: false
                      zone: white.label.example.com
                      externalId: null
                      scenarios: 0
                      activeScenarios: 0
                      deleted: false
                update-reset:
                  value:
                    organization:
                      id: 12
                      name: Reset organization
                      timezoneId: 113
                      countryId: 1
                      lastReset: 2023-06-04T12:00:00.000Z
                      nextReset: 2023-07-04T12:00:00.000Z
                      license:
                        dslimit: 20
                        fslimit: 6242880
                        iolimit: 10000
                        apiLimit: 2000
                        dsslimit: 524288000
                        fulltext: true
                        interval: 1
                        transfer: 105000000
                        operations: 100000
                        executionTime: 45
                        restartPeriod: 1 month
                        customVariables: true
                        creatingTemplates: true
                        installPublicApps: true
                        gracePeriod: 0
                        productManagement: salesforce
                      serviceName: default
                      teams:
                        - id: 155468
                          name: My team
                      isPaused: false
                      zone: white.label.example.com
                      externalId: null
                      scenarios: 0
                      activeScenarios: 0
                      deleted: false
    delete:
      x-published: false
      tags:
        - Admin > Organizations
      summary: Delete an organization
      description: >-
        Deletes the specified organization. All data associated with the
        organization and with the teams in the organization, such as data stores
        and scenarios, are also deleted.
      security:
        - token:
            - admin:write
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          description: The ID of the organization.
          schema:
            type: integer
          required: true
          example: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization:
                    type: number
              example:
                organization: 10
  /admin/users-detail:
    get:
      x-published: false
      tags:
        - Admin > Users
      summary: Get user's detail
      description: >-
        Retrieves a collection of all users in your Make White Label instance.
        Use the API call query parameters to limit the results to a user name or
        user email.
      security:
        - token:
            - admin:read
            - user:read
      parameters:
        - description: Optional filter parameter.
          name: id
          in: query
          schema:
            type: integer
          example: 1
        - description: Optional filter parameter.
          name: name
          in: query
          schema:
            type: string
        - description: Optional filter parameter.
          name: email
          in: query
          schema:
            type: string
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            filtering:
              value:
                - id
                - name
                - email
        - name: pg[sortBy]
          in: query
          schema:
            type: string
            enum:
              - name
              - id
              - userAdminsRoleId
          description: >-
            Sort the results in the APi call response by the values in the
            specified column.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
                          format: email
                        language:
                          type: string
                        timezoneId:
                          type: integer
                        localeId:
                          type: integer
                        countryId:
                          type: integer
                        features:
                          type: object
                          additionalProperties: {}
                        avatar:
                          type: string
                          format: uri
                        usersAdminsRoleId:
                          type: integer
                        tfaEnabled:
                          type: boolean
                        lastlogin:
                          type: string
                          format: date-time
                        organizations:
                          type: integer
                        scenarios:
                          type: integer
                        activeScenarios:
                          type: integer
                        deleted:
                          type: boolean
                        created:
                          type: string
                          format: data-time
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              examples:
                default:
                  summary: List users
                  description: >-
                    Retrieve all available data about all users in the Make
                    White Label instance.
                  value:
                    users:
                      - id: 15
                        name: Rosario
                        email: dawson@test.net
                        language: en
                        timezoneId: 113
                        localeId: 19
                        countryId: 1
                        features: {}
                        avatar: >-
                          https://secure.gravatar.com/avatar/bca593a1166cfebb7453226d5a55f4a5.jpg?d=mm
                        lastLogin: '2023-01-03T11:24:25.460Z'
                        organizations: 1
                        scenarios: 0
                        activeScenarios: 0
                        deleted: false
                        created: '2023-01-03T11:12:40.644Z'
                        usersAdminsRoleId: null
                        tfaEnabled: false
                      - id: 14
                        name: John Doe
                        email: john@doe.com
                        language: en
                        timezoneId: 113
                        localeId: 19
                        countryId: 202
                        features: {}
                        avatar: >-
                          https://secure.gravatar.com/avatar/049bebcb7ed96e1539a5ed479ae7158b.jpg?d=mm
                        lastLogin: null
                        organizations: 0
                        scenarios: 0
                        activeScenarios: 0
                        deleted: false
                        created: '2022-12-12T14:24:26.895Z'
                        usersAdminsRoleId: null
                        tfaEnabled: false
                    pg:
                      sortBy: id
                      limit: 10
                      sortDir: desc
                      offset: 0
                filtering:
                  summary: Filter results
                  description: Filter API call response for specific data.
                  value:
                    users:
                      - id: 14
                        name: John Doe
                        email: john@doe.com
                    pg:
                      sortBy: id
                      limit: 10
                      sortDir: desc
                      offset: 0
  /admin/users:
    get:
      x-published: false
      tags:
        - Admin > Users
      summary: List users
      description: Gets the list of users in a team or an organization.
      security:
        - token:
            - admin:read
            - user:read
      parameters:
        - name: organizationId
          in: query
          schema:
            type: integer
          description: The ID of the organization.
          examples:
            filtering:
              value: 22
        - name: teamId
          in: query
          schema:
            type: integer
          description: The ID of the team.
          examples:
            filtering:
              value: 11
        - name: name
          in: query
          schema:
            type: string
          description: The name of the user.
          examples:
            filtering:
              value: John Doe
        - name: email
          in: query
          schema:
            type: string
          description: The email of the user.
          examples:
            filtering:
              value: john@doe.com
        - name: teamRoleId
          in: query
          schema:
            type: integer
          description: The ID of the user's role in the team.
          examples:
            filtering:
              value: 3
        - name: organizationRoleId
          in: query
          schema:
            type: integer
          description: The ID of the user's role in the organization.
          examples:
            filtering:
              value: 13
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            filtering:
              value:
                - id
                - name
                - email
                - teamRoleId
                - organizationRoleId
        - name: pg[sortBy]
          in: query
          schema:
            type: string
            enum:
              - name
              - id
              - email
              - userAdminsRoleId
          description: >-
            Sort the results in the APi call response by the values in the
            specified column.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
                          format: email
                        language:
                          type: string
                        timezoneId:
                          type: integer
                        localeId:
                          type: integer
                        countryId:
                          type: integer
                        features:
                          type: object
                          additionalProperties: {}
                        avatar:
                          type: string
                          format: uri
                        usersAdminsRoleId:
                          type: integer
                        lastlogin:
                          type: string
                          format: date-time
                        deleted:
                          type: boolean
                        created:
                          type: string
                          format: data-time
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              examples:
                default:
                  summary: List users
                  description: >-
                    Retrieves a collection of all users for a team or an
                    organization with a given ID.
                  value:
                    users:
                      - id: 15
                        name: Rosario
                        email: dawson@test.net
                        language: en
                        timezoneId: 113
                        localeId: 19
                        countryId: 1
                        features: {}
                        avatar: >-
                          https://secure.gravatar.com/avatar/bca593a1166cfebb7453226d5a55f4a5.jpg?d=mm
                        lastLogin: '2023-01-03T11:24:25.460Z'
                        deleted: false
                        created: '2023-01-03T11:12:40.644Z'
                        usersAdminsRoleId: null
                      - id: 14
                        name: John Doe
                        email: john@doe.com
                        language: en
                        timezoneId: 113
                        localeId: 19
                        countryId: 202
                        features: {}
                        avatar: >-
                          https://secure.gravatar.com/avatar/049bebcb7ed96e1539a5ed479ae7158b.jpg?d=mm
                        lastLogin: null
                        deleted: false
                        created: '2022-12-12T14:24:26.895Z'
                        usersAdminsRoleId: null
                    pg:
                      sortBy: id
                      limit: 10
                      sortDir: desc
                      offset: 0
                filtering:
                  summary: Filter results
                  description: Filter API call response for specific data.
                  value:
                    users:
                      - id: 14
                        name: John Doe
                        email: john@doe.com
                    pg:
                      sortBy: id
                      limit: 10
                      sortDir: desc
                      offset: 0
    post:
      x-published: false
      tags:
        - Admin > Users
      summary: Create a new user
      description: >-
        Creates a new user. Specify the user's `name` and `email` in the request
        body.


        You have to either send an invitation mail to the user with the
        `sendEmail: true` or you have to specify the user password in the
        `password` field in the request body. If you send the invitation mail,
        the mail contains automatically generated password. The user has to
        change their password right after logging in.


        You can also set the user's country, locale and timezone with the
        request body parameters. If you don't specify the user's country, locale
        or timezone Make uses your account's country, locale or timezone.
      security:
        - token:
            - admin:write
            - user:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the user.
                email:
                  type: string
                  description: The user's email.
                password:
                  type: string
                  description: >-
                    The password to the user's account. It has to contain at
                    least 10 characters, including one number, one upper case
                    character and one special character.
                sendEmail:
                  type: boolean
                  description: >-
                    If set to `true`, Make sends an email to the user with their
                    automatically generated password. The user has to change
                    their password right after logging in.
                countryId:
                  type: integer
                  description: >-
                    The ID of user's country. Get the `countryId` values with
                    the API call `GET /enums/countries`.
                timezoneId:
                  type: integer
                  description: >-
                    The ID of user's timezone. Get the list of the timezone IDs
                    with the API call `GET /enums/timezones`.
                localeId:
                  type: integer
                  description: >-
                    The ID of user's locale. Get the list of locale IDs with the
                    API call `GET /enums/locales`.
              required:
                - name
                - email
            examples:
              setAll:
                summary: Create user
                description: >-
                  Creates new user with the specified values, including login
                  password.
                value:
                  name: John Doe
                  email: john@doe.com
                  sendEmail: false
                  timezoneId: 113
                  localeId: 18
                  countryId: 1
                  password: my-Password1?
              sendEmail:
                summary: Send invitation email
                description: >-
                  Make sends the user an invitation mail with an automatically
                  generated password. Right after logging in the user has to
                  change their password.
                value:
                  name: John Doe
                  email: john@doe.com
                  sendEmail: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      language:
                        type: string
                      timezoneId:
                        type: integer
                      localeId:
                        type: integer
                      countryId:
                        type: integer
                      features:
                        type: object
                        properties:
                          allow_apps:
                            type: boolean
                      avatar:
                        type: string
                        format: uri
                      timezone:
                        type: string
                      locale:
                        type: string
                      usersAdminsRoleId:
                        type: integer
                      hasPassword:
                        type: boolean
                      tfaEnabled:
                        type: boolean
                      forceSetPassword:
                        type: boolean
                      userOrganizationRoles:
                        type: array
                        items:
                          type: object
                          properties:
                            usersRoleId:
                              type: integer
                            userId:
                              type: integer
                            organizationId:
                              type: integer
                            invitation:
                              type: string
                      userTeamRoles:
                        type: array
                        items:
                          type: object
                          properties:
                            usersRoleId:
                              type: integer
                            userId:
                              type: integer
                            teamId:
                              type: integer
                            changeable:
                              type: boolean
                      lastlogin:
                        type: string
                        format: date-time
              examples:
                setAll:
                  value:
                    user:
                      id: 5
                      name: John Doe
                      email: john@doe.com
                      language: en
                      timezoneId: 113
                      localeId: 18
                      countryId: 1
                      features: {}
                      avatar: >-
                        https://secure.gravatar.com/avatar/b38336ad1642bc8effb596db864be1f1.jpg?d=mm
                      lastLogin: null
                      organizations: 0
                      scenarios: 0
                      activeScenarios: 0
                      deleted: false
                      created: '2023-01-17T12:41:10.697Z'
                      usersAdminsRoleId: null
                      tfaEnabled: false
                sendEmail:
                  value:
                    user:
                      id: 5
                      name: John Doe
                      email: john@doe.com
                      language: en
                      timezoneId: 53
                      localeId: 16
                      countryId: 12
                      features: {}
                      avatar: >-
                        https://secure.gravatar.com/avatar/b38336ad1642bc8effb596db864be1f1.jpg?d=mm
                      lastLogin: null
                      organizations: 0
                      scenarios: 0
                      activeScenarios: 0
                      deleted: false
                      created: '2023-01-17T12:41:10.697Z'
                      usersAdminsRoleId: null
                      tfaEnabled: false
  /admin/users/{userId}:
    patch:
      x-published: false
      tags:
        - Admin > Users
      summary: Update user information
      description: >-
        Updates user information. Make updates only the specified information. 
         
        In addition, you can set the user admin roles in the
        `usersAdminsRoleId`. Check the available roles with the API call `GET
        /admin/users/admins-roles`. Refer to the [user admin roles
        documentation](https://www.make.com/en/help/white-label/manage-organizations#instance-level-roles-1628394)
        for the full breakdown of the user admin roles permissions.
      security:
        - token:
            - admin:write
            - user:write
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the user.
          example: 22
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the user.
                email:
                  type: string
                  description: The user's email.
                language:
                  type: string
                  description: >-
                    The language of the user's UI. Currently, Make has the full
                    UI in english only (value `en`).
                countryId:
                  type: integer
                  description: >-
                    The ID of user's country. Get the `countryId` values with
                    the API call `GET /enums/countries`.
                timezoneId:
                  type: integer
                  description: >-
                    The ID of user's timezone. Get the list of the timezone IDs
                    with the API call `GET /enums/timezones`.
                localeId:
                  type: integer
                  description: >-
                    The ID of user's locale. Get the list of locale IDs with the
                    API call `GET /enums/locales`.
                usersAdminsRoleId:
                  type: integer
                  description: >-
                    The ID of the admin user's role. Get the list of available
                    user admin roles and their IDs with the API call `GET
                    /admin/users/admins-roles`.


                    Refer to the [user admin roles
                    documentation](https://www.make.com/en/help/white-label/manage-organizations#instance-level-roles-1628394)
                    for the full breakdown of the user admin roles permissions.
            example:
              name: Jane Porter
              email: jane.portern@jungle.com
              usersAdminsRoleId: 4
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      language:
                        type: string
                      timezoneId:
                        type: integer
                      localeId:
                        type: integer
                      countryId:
                        type: integer
                      features:
                        type: object
                        properties:
                          allow_apps:
                            type: boolean
                      avatar:
                        type: string
                        format: uri
                      timezone:
                        type: string
                      locale:
                        type: string
                      usersAdminsRoleId:
                        type: integer
                      hasPassword:
                        type: boolean
                      tfaEnabled:
                        type: boolean
                      forceSetPassword:
                        type: boolean
                      userOrganizationRoles:
                        type: array
                        items:
                          type: object
                          properties:
                            usersRoleId:
                              type: integer
                            userId:
                              type: integer
                            organizationId:
                              type: integer
                            invitation:
                              type: string
                      userTeamRoles:
                        type: array
                        items:
                          type: object
                          properties:
                            usersRoleId:
                              type: integer
                            userId:
                              type: integer
                            teamId:
                              type: integer
                            changeable:
                              type: boolean
                      lastlogin:
                        type: string
                        format: date-time
              example:
                user:
                  id: 6
                  name: Jane Porter
                  email: jane.portern@jungle.com
                  language: en
                  timezoneId: 113
                  localeId: 18
                  countryId: 1
                  features: {}
                  avatar: >-
                    https://secure.gravatar.com/avatar/b38336ad1642bc8effb596db864be1f1.jpg?d=mm
                  lastLogin: null
                  organizations: 0
                  scenarios: 0
                  activeScenarios: 0
                  deleted: false
                  created: '2023-01-17T12:41:10.697Z'
                  usersAdminsRoleId: 4
                  tfaEnabled: false
    delete:
      x-published: false
      tags:
        - Admin > Users
      summary: Delete a user
      description: >-
        Deletes the user with the specified `userId`. Use the
        `deleteConnections` query parameter to delete the user's connections
        too.
      security:
        - token:
            - admin:write
            - users:write
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the user.
          example: 22
        - name: deleteConnections
          in: query
          schema:
            type: boolean
          description: >-
            Set to `true` to delete also user's connections when removing
            organizations, in which the user has the role "Owner". The default
            value is `false`.
          example: true
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: true
          description: >-
            Set to `true` to delete organizations in which the user has the
            "Owner" role. Use the parameter `deleteConnections` to delete the
            user's connections in the deleted organizations.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: integer
              example:
                user: 22
  /admin/users/{userId}/user-organization-roles/{organizationId}:
    post:
      x-published: false
      tags:
        - Admin > Users
      summary: Set user organization role
      description: >-
        Sets user role in the organization. Specify the user organization role
        ID in the request body. Get all available user role IDs and the
        corresponding user role names with the API call `GET /users/roles`.


        If the user is not a member of the organization, the API call adds the
        user to the organization with the specified role. If you add the user to
        the organization as "Admin" (`usersRoleId = 12`) and the organization
        has teams, Make assigns the user to the organization as the organization
        "Admin" and to all teams in the organization as "Team Admin". Once you
        add a user as "Team Admin" you cannot change their team role. The only
        option to change the "Team Admin" role is to remove the user from the
        team and re-add them with the specified team role.


        If you add the user to the organization with a role other than "Admin"
        Make doesn't add the user to any organization's teams. In the
        Administration interface, the user appears with the role "None" in all
        teams in the organization. The users with the role "None" in a team or
        an organization cannot access the team or organization data in any way.


        You cannot change the organization "Owner" with this endpoint. Use the
        API call to [transfer organization
        ownership](https://www.make.com/en/api-documentation/organizations-organizationId-user-organization-roles-transfer-post)
        instead.


        To remove a user from an organization, send an empty request body. The
        API call removes the user with the specified `userId` from the
        organization, setting the user's organization role to "None".
      security:
        - token:
            - admin:write
            - users:write
      parameters:
        - name: userId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the user
          example: 5
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 22
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            all-cols:
              value:
                - userId
                - organizationId
                - usersRoleId
                - invitation
                - organizationTeamsCount
                - joinedTeamsCount
                - ssoPending
        - name: deleteConnections
          in: query
          schema:
            type: boolean
          examples:
            remove-user:
              value: true
          description: >-
            When removing the user from the organization, set to `true` to
            delete also user's connections. The default value is `false`. To
            confirm deleting the user's connections you have to also set the
            `confirmed` parameter to `true`.
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: true
          description: >-
            Set to `true` to confirm deleting the user's connections in
            combination with the `deleteConnections` parameter. Otherwise, the
            API call fails with error requiring confirmation.
          examples:
            remove-user:
              value: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usersRoleId:
                  type: integer
                  description: >-
                    The ID of the user role. Check the `GET /users/roles` API
                    call for the available `usersRoleId` values.
            examples:
              set-user-role:
                summary: Set user role
                description: >-
                  Set the user role in the organization. Get all user role IDs
                  with the API call `GET /users/roles`.
                value:
                  usersRoleId: 13
              all-cols:
                summary: Set user data all cols
                description: >-
                  Set user role in the organization. The response returns all
                  available columns for the user role in the organization.
                value:
                  usersRoleId: 13
              remove-user:
                summary: Remove user from organization
                description: >-
                  To remove a user from the organization send an empty request
                  body.
                value: ''
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userOrganizationRole:
                    type: object
                    properties:
                      userId:
                        type: integer
                      organizationId:
                        type: integer
                      usersRoleId:
                        type: integer
                      invitation:
                        type: string
              examples:
                set-user-role:
                  value:
                    userOrganizationRole:
                      userId: 5
                      organizationId: 22
                      usersRoleId: 13
                      invitation: null
                      ssoPending: false
                all-cols:
                  value:
                    userOrganizationRole:
                      userId: 5
                      organizationId: 22
                      usersRoleId: 13
                      invitation: null
                      ssoPending: false
                      organizationTeamsCount: 2
                      joinedTeamsCount: 2
                remove-user:
                  value:
                    userOrganizationRole:
                      userId: 5
                      organizationId: 22
                      usersRoleId: null
                      invitation: null
                      ssoPending: null
  /admin/users/{userId}/user-organization-roles/{organizationId}/transfer:
    post:
      x-published: false
      tags:
        - Admin > Users
      summary: Transfer organization ownership
      description: Transfer organization ownership to the user with the specified `userId`.
      security:
        - token:
            - admin:write
            - user:write
      parameters:
        - name: userId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the user.
          example: 22
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userOrganizationRoles:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: integer
                        organizationId:
                          type: integer
                        usersRoleId:
                          type: integer
                        invitation:
                          type: boolean
              example:
                userOrganizationRoles:
                  - userId: 22
                    organizationId: 11
                    usersRoleId: 11
                    invitation: null
                  - userId: 1
                    organizationId: 11
                    usersRoleId: 12
                    invitation: null
  /admin/users/{userId}/user-team-roles/{teamId}:
    post:
      x-published: false
      tags:
        - Admin > Users
      summary: Set user team role
      description: >-
        Sets the user role in the team. Specify the user team role ID in the
        request body. The user has to be already a member of the team's
        organization.


        Get all available user role IDs and the corresponding user role names
        with the API call `GET /users/roles`.


        If the user is not a member of the team, the API call adds the user to
        the team with the specified role.

        If you send an empty request body, the API call removes the user with
        the specified `userId` from the team, setting the user's team role to
        "None".
      security:
        - token:
            - admin:write
            - users:write
      parameters:
        - name: confirmed
          in: query
          schema:
            type: boolean
          examples:
            remove-user:
              value: true
          description: >-
            Use this parameter when you are removing a user from a team. Set
            this parameter to `true` is you want to delete the user's
            connections from the team with the parameter `deleteConnections`.
        - name: deleteConnections
          in: query
          schema:
            type: boolean
          examples:
            remove-user:
              value: true
          description: >-
            Set this parameter to `true` if you are removing a user from a team
            to delete also the user's connections. If you set this parameter to
            `false`, the API call won't delete the user's connections.
        - name: userId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the user.
          example: 111
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usersRoleId:
                  type: integer
                  description: >-
                    The ID of the user role. Check the `GET /users/roles` API
                    call for the available `usersRoleId` values.
            examples:
              set-role:
                summary: Set user team role
                description: Sets the team role of the specified user.
                value:
                  usersRoleId: 3
              remove-user:
                summary: Remove user
                description: >-
                  Removes user from the team. In the admin interface, Make still
                  lists the user in the team with the user team role "None".
                value: ''
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userTeamRole:
                    type: object
                    properties:
                      usersRoleId:
                        type: integer
                      userId:
                        type: integer
                      teamId:
                        type: integer
                      changeable:
                        type: boolean
                      ssoPending:
                        type: boolean
              examples:
                set-role:
                  value:
                    userTeamRole:
                      usersRoleId: 3
                      userId: 111
                      teamId: 22
                      changeable: true
                      ssoPending: false
                remove-user:
                  value:
                    userTeamRole:
                      usersRoleId: null
                      userId: 111
                      teamId: 22
                      changeable: true
                      ssoPending: false
  /admin/system-settings/default-license:
    get:
      x-published: false
      tags:
        - Admin > Platform settings
      summary: Get default license
      description: >-
        Gets the default organization license for your Make White Label
        instance. Make uses the default organization license when you create a
        new organization without specifying the organization's license.
      security:
        - token:
            - admin:read
            - system:read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  defaultLicense:
                    type: object
                    additionalProperties: {}
              example:
                defaultLicense:
                  dslimit: 40
                  fslimit: 2147483648
                  iolimit: 10000
                  apiLimit: 2000
                  dsslimit: 524288000
                  fulltext: true
                  interval: 1
                  transfer: 1099511627776
                  operations: 80000000
                  scenarioIO: true
                  gracePeriod: 0
                  executionTime: 45
                  restartPeriod: 1 month
                  customVariables: true
                  creatingTemplates: true
                  installPublicApps: true
                  productManagement: salesforce
                  onDemandScheduling: true
  /admin/system-settings/custom-theme:
    post:
      x-published: false
      tags:
        - Admin > Platform settings
      security:
        - token:
            - admin:read
            - system:read
      summary: Create custom theme
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name of theme
                parentSystemTheme:
                  type: string
                  enum:
                    - blue
                    - orange
                    - green
                    - black
                    - red
                    - silver
                    - violet
                activeConfiguration:
                  type: object
              required:
                - name
                - color
                - parentSystemTheme
                - activeConfiguration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  customTheme:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name of theme
                      id:
                        type: number
                        description: id of theme
                      color:
                        type: string
                        description: hex color of theme
                      isActive:
                        type: boolean
                      type:
                        type: string
                        enum:
                          - CUSTOM
                      parentSystemTheme:
                        type: string
                        enum:
                          - blue
                          - orange
                          - green
                          - black
                          - red
                          - silver
                          - violet
                      activeConfiguration:
                        type: object
                      draftConfiguration:
                        type: object
  /admin/system-settings/custom-themes:
    get:
      x-published: false
      tags:
        - Admin > Platform settings
      summary: Get themes list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  themes:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: name of theme
                        id:
                          oneOf:
                            - type: string
                            - type: number
                          description: id of theme, in case of system it is name
                        color:
                          type: string
                          description: hex color of theme
                        isActive:
                          type: boolean
                        type:
                          type: string
                          enum:
                            - SYSTEM
                            - CUSTOM
                        parentSystemTheme:
                          type: string
  /admin/system-settings/custom-theme/{id}:
    delete:
      x-published: false
      tags:
        - Admin > Platform settings
      security:
        - token:
            - admin:write
      summary: Delete custom theme
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the custom-theme
      responses:
        '204':
          description: ok
        '405':
          description: cannot delete when active theme
    patch:
      x-published: false
      tags:
        - Admin > Platform settings
      security:
        - token:
            - admin:write
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the custom-theme
      summary: Update custom theme
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name of theme
                parentSystemTheme:
                  type: string
                  enum:
                    - blue
                    - orange
                    - green
                    - black
                    - red
                    - silver
                    - violet
                activeConfiguration:
                  type: object
                draftConfiguration:
                  type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  customTheme:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name of theme
                      id:
                        type: number
                        description: id of theme
                      color:
                        type: string
                        description: hex color of theme
                      type:
                        type: string
                        enum:
                          - CUSTOM
                      isActive:
                        type: boolean
                      parentSystemTheme:
                        type: string
                      activeConfiguration:
                        type: object
                      draftConfiguration:
                        type: object
  /admin/system-settings/theme/{id}/activate:
    put:
      x-published: false
      tags:
        - Admin > Platform settings
      security:
        - token:
            - admin:write
      summary: Activate theme
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: Numeric ID of the custom-theme or system theme name
      responses:
        '204':
          description: ok
  /agents:
    get:
      tags:
        - Agents
      summary: List agents
      description: Retrieves a collection of agents for a company with a given ID
      security:
        - token:
            - agents:read
      parameters:
        - name: organizationId
          in: query
          schema:
            type: integer
          example: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  agents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        tenantId:
                          type: string
                        name:
                          type: string
                        clientSecret:
                          type: string
                        status:
                          type: string
                          enum:
                            - ACTIVE
                            - STOPPED
                            - NOT_RESPONDING
                            - REGISTERED
                        alerted:
                          type: boolean
                        connected:
                          type: boolean
                        version:
                          type: string
                        createdDate:
                          type: string
                          format: date-time
                        lastConnectionDate:
                          type: string
                          format: date-time
                        systemConnectionsCount:
                          type: integer
                          format: int32
  /agents/{agentId}:
    get:
      tags:
        - Agents
      summary: Get agent details
      description: Retrieves an agents for a agent with given ID
      security:
        - token:
            - agents:read
      parameters:
        - name: organizationId
          in: query
          schema:
            type: integer
          example: 11
        - description: The ID of the agent.
          name: agentId
          in: path
          schema:
            type: string
            format: uuid
          example: 78781d1f-8cc0-4f42-8e77-c02812f78b53
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    type: object
                    properties:
                      id:
                        type: string
                      tenantId:
                        type: string
                      name:
                        type: string
                      clientSecret:
                        type: string
                      status:
                        type: string
                        enum:
                          - ACTIVE
                          - STOPPED
                          - NOT_RESPONDING
                          - REGISTERED
                      alerted:
                        type: boolean
                      connected:
                        type: boolean
                      version:
                        type: string
                      createdDate:
                        type: string
                        format: date-time
                      lastConnectionDate:
                        type: string
                        format: date-time
                      systemConnectionsCount:
                        type: integer
                        format: int32
    post:
      tags:
        - Agents
      summary: Create agent
      description: Creates a new agent
      security:
        - token:
            - agents:write
      parameters:
        - name: organizationId
          in: query
          schema:
            type: integer
          example: 11
        - description: The ID of the agent.
          name: agentId
          in: path
          schema:
            type: string
            format: uuid
          example: 78781d1f-8cc0-4f42-8e77-c02812f78b53
          required: true
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    type: object
                    properties:
                      id:
                        type: string
                      tenantId:
                        type: string
                      name:
                        type: string
                      clientSecret:
                        type: string
                      status:
                        type: string
                        enum:
                          - ACTIVE
                          - STOPPED
                          - NOT_RESPONDING
                          - REGISTERED
                      alerted:
                        type: boolean
                      connected:
                        type: boolean
                      version:
                        type: string
                      createdDate:
                        type: string
                        format: date-time
                      lastConnectionDate:
                        type: string
                        format: date-time
                      systemConnectionsCount:
                        type: integer
                        format: int32
    patch:
      tags:
        - Agents
      summary: Update agent
      description: Updates a new agent with given ID
      security:
        - token:
            - agents:write
      parameters:
        - name: organizationId
          in: query
          schema:
            type: integer
          example: 11
        - description: The ID of the agent.
          name: agentId
          in: path
          schema:
            type: string
            format: uuid
          example: 78781d1f-8cc0-4f42-8e77-c02812f78b53
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    type: object
                    properties:
                      id:
                        type: string
                      tenantId:
                        type: string
                      name:
                        type: string
                      clientSecret:
                        type: string
                      status:
                        type: string
                        enum:
                          - ACTIVE
                          - STOPPED
                          - NOT_RESPONDING
                          - REGISTERED
                      alerted:
                        type: boolean
                      connected:
                        type: boolean
                      version:
                        type: string
                      createdDate:
                        type: string
                        format: date-time
                      lastConnectionDate:
                        type: string
                        format: date-time
                      systemConnectionsCount:
                        type: integer
                        format: int32
    delete:
      tags:
        - Agents
      summary: Delete agent
      description: Removes an agent with a given ID.
      security:
        - token:
            - agents:write
      parameters:
        - name: organizationId
          in: query
          schema:
            type: integer
          example: 11
        - description: The ID of the agent.
          name: agentId
          in: path
          schema:
            type: string
            format: uuid
          example: 78781d1f-8cc0-4f42-8e77-c02812f78b53
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    type: string
                    format: uuid
              example:
                agent: 78781d1f-8cc0-4f42-8e77-c02812f78b53
  /affiliate/partner-register:
    post:
      tags:
        - Affiliate
      summary: Register partner
      description: Registers the user as a partner in the affiliate program.
      security:
        - token:
            - user:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                partnerCode:
                  type: string
                paypalMeLink:
                  type: string
                termsAndConditions:
                  type: boolean
              required:
                - partnerCode
                - paypalMeLink
                - termsAndConditions
            example:
              partnerCode: mypartnercode
              paypalMeLink: paypal.me/mypaypallink69
              termsAndConditions: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /affiliate/stats:
    get:
      tags:
        - Affiliate
      summary: Get commission stats
      description: >-
        Retrieves graph data for commisions in the past year for the current
        user.
      security:
        - token:
            - user:read
      parameters:
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date
          example: '2021-08-01'
        - name: dateTo
          in: query
          schema:
            type: string
            format: date
          example: '2021-11-01'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        visits:
                          type: integer
                        registrations:
                          type: integer
                        commission:
                          type: number
              example:
                stats:
                  - date: '2020-10-11'
                    visits: 12
                    registrations: 4
                    commission: 400
                  - date: '2020-10-12'
                    visits: 3
                    registrations: 0
                    commission: 0
                  - date: '2020-10-13'
                    visits: 0
                    registrations: 0
                    commission: 0
                  - date: '2020-10-14'
                    visits: 1
                    registrations: 0
                    commission: 500
                  - date: '2020-10-15'
                    visits: 6
                    registrations: 5
                    commission: 0
                  - date: '2020-10-16'
                    visits: 7
                    registrations: 3
                    commission: 1000
  /affiliate/commissions:
    get:
      tags:
        - Affiliate
      summary: Get commissions
      description: Retrieves detailed data about individual commisions of the current user.
      security:
        - token:
            - user:read
      parameters:
        - name: statusId
          in: query
          schema:
            type: integer
          example: 1
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date
          example: '2021-08-01'
        - name: dateTo
          in: query
          schema:
            type: string
            format: date
          example: '2021-11-01'
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
          example: id
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  commisions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        organization_id:
                          type: integer
                        created:
                          type: string
                          format: date-time
                        type:
                          type: string
                        status:
                          type: string
                        commission:
                          type: number
                        source:
                          type: string
                        payout_requested:
                          type: string
                          format: date-time
                        payout_approved:
                          type: string
                          format: date-time
                        payout_realized:
                          type: string
                          format: date-time
              example:
                commissions:
                  - id: 1
                    organization_id: 3
                    created: 2021-10-01T12:19:49.227Z
                    type: Registration
                    status: Registration
                    commission: null
                    source: http://foo.bar
                    payout_requested: null
                    payout_approved: null
                    payout_realized: null
                  - id: 2
                    organization_id: 3
                    created: 2021-10-01T12:19:49.227Z
                    type: Payment
                    status: Available
                    commission: 300
                    source: null
                    payout_requested: null
                    payout_approved: null
                    payout_realized: null
                  - id: 3
                    organization_id: 3
                    created: 2021-11-21T12:19:49.227Z
                    type: Payment
                    status: Requested
                    commission: 500
                    source: null
                    payout_requested: 2021-12-21T12:19:49.227Z
                    payout_approved: null
                    payout_realized: null
                  - id: 4
                    organization_id: 4
                    created: 2021-11-21T12:19:49.227Z
                    type: Payment
                    status: Approved
                    commission: 658.5
                    source: null
                    payout_requested: 2021-12-01T12:19:49.227Z
                    payout_approved: 2021-12-03T12:19:49.227Z
                    payout_realized: null
                  - id: 5
                    partner_id: 1
                    organization_id: 4
                    created: 2021-11-21T12:19:49.227Z
                    type: Payment
                    status: Paid
                    commission: 300
                    source: null
                    payout_requested: 2021-02-01T12:19:49.227Z
                    payout_approved: 2021-02-03T12:19:49.227Z
                    payout_realized: 2021-02-04T12:19:49.227Z
  /affiliate/commission-info:
    get:
      tags:
        - Affiliate
      summary: Get commission info
      description: >-
        Retrieves general info about accumulated commissions of the current
        user.
      security:
        - token:
            - user:read
      parameters:
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date
          example: '2021-08-01'
        - name: dateTo
          in: query
          schema:
            type: string
            format: date
          example: '2021-11-01'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  partnerCode:
                    type: string
                  availablePayout:
                    type: number
                  availablePayoutDistinctOrgs:
                    type: integer
                  isPayoutRequested:
                    type: boolean
                  isPayoutAvailable:
                    type: boolean
                  minimumPayout:
                    type: number
                  minimumOrganizations:
                    type: integer
                  earningsRange:
                    type: number
                  earningsTotal:
                    type: number
                  usersBroughtPayingRange:
                    type: integer
                  usersBroughtPayingTotal:
                    type: integer
                  usersBroughtAllRange:
                    type: integer
                  usersBroughtAllTotal:
                    type: integer
                  orgsBroughtPayingRange:
                    type: integer
                  orgsBroughtPayingTotal:
                    type: integer
                  orgsBroughtAllRange:
                    type: integer
                  orgsBroughtAllTotal:
                    type: integer
                  conversionRateUsersPayingRange:
                    type: number
                  conversionRateUsersPayingTotal:
                    type: number
                  conversionRateUsersAllRange:
                    type: number
                  conversionRateUsersAllTotal:
                    type: number
                  conversionRateOrgsPayingRange:
                    type: number
                  conversionRateOrgsPayingTotal:
                    type: number
                  conversionRateOrgsAllRange:
                    type: number
                  conversionRateOrgsAllTotal:
                    type: number
              example:
                partnerCode: mypartnercode
                availablePayout: 300.5
                availablePayoutDistinctOrgs: 3
                isPayoutRequested: false
                isPayoutAvailable: true
                minimumPayout: 100
                minimumOrganizations: 3
                earningsRange: 200.5
                earningsTotal: 3333.45
                usersBroughtPayingRange: 1
                usersBroughtPayingTotal: 2
                usersBroughtAllRange: 5
                usersBroughtAllTotal: 12
                orgsBroughtPayingRange: 2
                orgsBroughtPayingTotal: 3
                orgsBroughtAllRange: 8
                orgsBroughtAllTotal: 16
                conversionRateUsersPayingRange: 0.25
                conversionRateUsersPayingTotal: 0.1875
                conversionRateUsersAllRange: 0.11
                conversionRateUsersAllTotal: 0.05
                conversionRateOrgsPayingRange: 0.25
                conversionRateOrgsPayingTotal: 0.1875
                conversionRateOrgsAllRange: 0.11
                conversionRateOrgsAllTotal: 0.05
  /affiliate/payout-request:
    post:
      tags:
        - Affiliate
      summary: Request payout
      description: Request a payout of available commissions.
      security:
        - token:
            - user:write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /audit-logs/organization/{organizationId}:
    get:
      operationId: getOrganizationAuditLogs
      x-published: true
      tags:
        - Audit logs
      summary: List organization audit logs
      description: >
        Gets a list of all audit log entries for the specified organization.


        The audit log entries in the response are sorted by the `triggeredAt`
        property in descending order by default. You can use pagination to
        navigate through a large number of entries.


        You can get the audit log entries only for organizations in which you
        have the "Admin" or "Owner" roles. Otherwise, you get the 403 error. 
      security:
        - token:
            - auditlogs:read
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
        - name: team
          in: query
          description: >
            The identification of the teams for which you want to get the audit
            log entries. You can use either team IDs or team names.


            The team name can contain any valid UTF8 symbols and spaces.
          schema:
            oneOf:
              - type: string
                example: team 1
              - type: integer
                example: 1
              - type: array
                items:
                  type: string
                example:
                  - team 1
                  - team 2
              - type: array
                items:
                  type: integer
                example:
                  - 1
                  - 2
                  - 3
        - name: dateFrom
          in: query
          description: >-
            Use the `dateFrom` parameter to get audit log entries from the
            specified date or older. Specify the date in the YYYY-MM-DD format.
          schema:
            type: string
            format: date
          example: 2021-09-23T00:00:00.000Z
        - name: dateTo
          in: query
          description: >-
            Use the `dateTo` parameter to get audit log entries until the
            specified date or newer. Specify the date in the YYYY-MM-DD format.
          schema:
            type: string
            format: date
          example: 2021-09-24T00:00:00.000Z
        - description: >
            The list of events for which you want to get audit log entries.


            You can check the list of supported events with the API call `GET
            /audit-logs/organization/{organizationId}/filters` in the `events`
            array in the response.
          name: event
          in: query
          schema:
            oneOf:
              - type: string
                example: webhook_disabled
              - type: array
                items:
                  type: string
                example:
                  - webhook_disabled
                  - webhook_updated
                  - webhook_deleted
        - name: author
          in: query
          description: >
            The identification of the users for whose actions you want to get
            the audit log entries. You can use either user IDs or user names.


            The user name can contain any valid UTF8 symbols and spaces.
          schema:
            oneOf:
              - type: string
                example: author 1
              - type: integer
                example: 1
              - type: array
                items:
                  type: string
                example:
                  - author 1
                  - author 2
              - type: array
                items:
                  type: integer
                example:
                  - 1
                  - 2
                  - 3
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The value of maximum entities to return.
        - name: pg[last]
          in: query
          schema:
            type: integer
          example: 10
          description: >-
            The last seen key. Only newer or older, depending on the sorting
            order, will be returned.
        - schema:
            type: string
            enum:
              - createdAt
              - triggeredAt
              - eventName
              - organization
              - team
              - actor
              - targetId
          description: >-
            Specify the response property values that Make will use to sort the
            audit log entries in the response. The default is `triggeredAt`.
          name: pg[sortBy]
          in: query
        - schema:
            type: string
            enum:
              - asc
              - desc
          name: pg[sortDir]
          in: query
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: '[pg]returnTotalCount'
          in: query
          schema:
            type: boolean
          description: >-
            Set to `true` to get also the total number of audit log entries in
            the response.
          example: true
      responses:
        '200':
          description: Audit log entries for the specified organization.
          content:
            application/json:
              schema:
                type: object
                properties:
                  auditLogs:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        uuid:
                          type: string
                        createdAt:
                          type: string
                        triggeredAt:
                          type: integer
                        organizationId:
                          type: integer
                        organization:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        eventName:
                          type: string
                        team:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        actor:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            email:
                              type: string
                              format: email
                        targetId:
                          type: string
                        version:
                          type: object
                          properties:
                            from:
                              type: string
                            to:
                              type: string
                  pg:
                    allOf:
                      - type: object
                        properties:
                          last:
                            type: string
                            description: Shown only when using the `last` based pagination.
                          showLast:
                            type: boolean
                            description: Shown only when using the `last` based pagination.
                          sortBy:
                            type: string
                          sortDir:
                            type: string
                          limit:
                            type: integer
                          offset:
                            type: integer
                            description: >-
                              Shown only when using the `offset` based
                              pagination.
                      - type: object
                        properties:
                          totalCount:
                            type: integer
                            description: >-
                              The number of audit log entries for the
                              organization.
              example:
                auditLogs:
                  uuid: c37c7292-35cd-4dc4-9113-21b23beaea7d
                  createdAt: '2024-05-24T14:22:16.879Z'
                  triggeredAt: '2024-04-19T12:05:22Z'
                  organizationId: 3
                  organization:
                    id: 3
                    name: John Doe's Organization
                  eventName: webhook_created
                  team:
                    id: 212
                    name: John Doe's Team
                  actor:
                    id: 212
                    name: John Doe
                    email: john.doe@whois.com
                  targetId: '3000'
                  version:
                    from: 1.0.0
                    to: 1.0.1
                pg:
                  sortBy: triggeredAt
                  sortDir: desc
                  offset: 0
                  limit: 100
                  totalCount: 60
  /audit-logs/organization/{organizationId}/filters:
    get:
      operationId: getOrganizationAuditLogsFilters
      x-published: true
      tags:
        - Audit logs
      summary: Get organization audit log filters
      description: >
        Gets available audit logs filters for the organization. 


        You can use the data in the response to filter audit log entries you get
        from the `GET /audit-logs/organization/{organizationId}` endpoint.
      security:
        - token:
            - auditlogs:read
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
      responses:
        '200':
          description: >-
            Successfully retrieve of available audit logs filters for the
            organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
                          format: email
                  teams:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        header:
                          type: string
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              label:
                                type: string
                              value:
                                type: string
              example:
                teams:
                  - id: 1
                    name: John Doe's Team
                users:
                  - id: 1
                    name: John Doe
                    email: john.doe@whois.com
                events:
                  - header: Webhooks
                    items:
                      - label: Webhook created
                        value: webhook_created
                      - label: Webhook updated
                        value: webhook_updated
  /audit-logs/team/{teamId}:
    get:
      operationId: getTeamAuditLogs
      x-published: true
      tags:
        - Audit logs
      summary: List team audit logs
      description: >
        Gets a list of all audit log entries for the specified team. 


        The audit log entries in the response are sorted by the `triggeredAt`
        property in descending order by default. You can use pagination to
        navigate through a large number of entries.


        You can get the audit log entries only for teams in which you have the
        "Team Admin" role. Otherwise, you get the 403 error. 
      security:
        - token:
            - auditlogs:read
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 11
        - name: dateFrom
          in: query
          description: >-
            Use the `dateFrom` parameter to get audit log entries from the
            specified date or older. Specify the date in the YYYY-MM-DD format.
          schema:
            type: string
            format: date
          example: 2021-09-23T00:00:00.000Z
        - name: dateTo
          in: query
          description: >-
            Use the `dateTo` parameter to get audit log entries until the
            specified date or newer. Specify the date in the YYYY-MM-DD format.
          schema:
            type: string
            format: date
          example: 2021-09-24T00:00:00.000Z
        - description: >
            The list of events for which you want to get audit log entries.


            You can check the list of supported events with the API call `GET
            /audit-logs/team/{teamId}/filters` in the `events` array in the
            response.
          name: event
          in: query
          schema:
            oneOf:
              - type: string
                example: webhook_disabled
              - type: array
                items:
                  type: string
                example:
                  - webhook_disabled
                  - webhook_updated
                  - webhook_deleted
        - name: author
          in: query
          description: >
            The identification of the users for whose actions you want to get
            the audit log entries. You can use either user IDs or user names.


            The user name can contain any valid UTF8 symbols and spaces.
          schema:
            oneOf:
              - type: string
                example: author 1
              - type: integer
                example: 1
              - type: array
                items:
                  type: string
                example:
                  - author 1
                  - author 2
              - type: array
                items:
                  type: integer
                example:
                  - 1
                  - 2
                  - 3
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The value of maximum entities to return.
        - name: pg[last]
          in: query
          schema:
            type: integer
          example: 10
          description: >-
            The last seen key. Only newer or older, depending on the sorting
            order, will be returned.
        - schema:
            type: string
            enum:
              - createdAt
              - triggeredAt
              - eventName
              - organization
              - team
              - actor
              - targetId
          description: >-
            Specify the response property values that Make will use to sort the
            audit log entries in the response. The default is `triggeredAt`.
          name: pg[sortBy]
          in: query
        - schema:
            type: string
            enum:
              - asc
              - desc
          name: pg[sortDir]
          in: query
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: '[pg]returnTotalCount'
          in: query
          schema:
            type: boolean
          description: >-
            Set to `true` to get also the total number of audit log entries in
            the response.
          example: true
      responses:
        '200':
          description: Audit log entries for the specified team.
          content:
            application/json:
              schema:
                type: object
                properties:
                  auditLogs:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        uuid:
                          type: string
                        createdAt:
                          type: string
                        triggeredAt:
                          type: integer
                        organizationId:
                          type: integer
                        organization:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        eventName:
                          type: string
                        team:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        actor:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            email:
                              type: string
                              format: email
                        targetId:
                          type: string
                        version:
                          type: object
                          properties:
                            from:
                              type: string
                            to:
                              type: string
                  pg:
                    allOf:
                      - type: object
                        properties:
                          last:
                            type: string
                            description: Shown only when using the `last` based pagination.
                          showLast:
                            type: boolean
                            description: Shown only when using the `last` based pagination.
                          sortBy:
                            type: string
                          sortDir:
                            type: string
                          limit:
                            type: integer
                          offset:
                            type: integer
                            description: >-
                              Shown only when using the `offset` based
                              pagination.
                      - type: object
                        properties:
                          totalCount:
                            type: integer
                            description: >-
                              The number of audit log entries for the
                              organization.
              example:
                auditLogs:
                  uuid: c37c7292-35cd-4dc4-9113-21b23beaea7d
                  createdAt: '2024-05-24T14:22:16.879Z'
                  triggeredAt: '2024-04-19T12:05:22Z'
                  organizationId: 3
                  organization:
                    id: 3
                    name: John Doe's Organization
                  eventName: webhook_created
                  team:
                    id: 212
                    name: John Doe's Team
                  actor:
                    id: 212
                    name: John Doe
                    email: john.doe@whois.com
                  targetId: '3000'
                  version:
                    from: 1.0.0
                    to: 1.0.1
                pg:
                  sortBy: triggeredAt
                  sortDir: desc
                  offset: 0
                  limit: 100
                  totalCount: 60
  /audit-logs/team/{teamId}/filters:
    get:
      operationId: getTeamAuditLogsFilters
      x-published: true
      tags:
        - Audit logs
      summary: Get organization audit log filters
      description: >
        Gets available audit logs filters for the team. 


        You can use the data in the response to filter audit log entries you get
        from the `GET /audit-logs/team/{teamId}` endpoint.
      security:
        - token:
            - auditlogs:read
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 11
      responses:
        '200':
          description: Successfully retried available audit logs filters for the team
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
                          format: email
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        header:
                          type: string
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              label:
                                type: string
                              value:
                                type: string
              example:
                users:
                  - id: 1
                    name: John Doe
                    email: john.doe@whois.com
                events:
                  - header: Webhooks
                    items:
                      - label: Webhook created
                        value: webhook_created
                      - label: Webhook updated
                        value: webhook_updated
  /audit-logs/{uuid}:
    get:
      operationId: getAuditLogDetail
      x-published: true
      tags:
        - Audit logs
      summary: Get audit log detail
      description: |
        Gets details of the audit log entry with the specified UUID.
      security:
        - token:
            - auditlogs:read
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          description: The UUID of the audit log entry.
          required: true
          example: c37c7292-35cd-4dc4-9113-21b23beaea7d
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    additionalProperties: false
                    properties:
                      uuid:
                        type: string
                      createdAt:
                        type: string
                      triggeredAt:
                        type: integer
                      organizationId:
                        type: integer
                      organization:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                      eventName:
                        type: string
                      team:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                      actor:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                            format: email
                      targetId:
                        type: string
                      version:
                        type: object
                        properties:
                          from:
                            type: string
                          to:
                            type: string
                  - type: object
                    properties:
                      details:
                        type: object
                        additionalProperties: true
              example:
                details:
                  webhookName: Webhook from John Doe
                  webhookType: http
                uuid: c37c7292-35cd-4dc4-9113-21b23beaea7d
                createdAt: '2024-05-24T14:22:16.879Z'
                triggeredAt: '2024-04-19T12:05:22Z'
                organizationId: 3
                organization:
                  id: 3
                  name: John Doe's Organization
                eventName: webhook_created
                team:
                  id: 212
                  name: John Doe's Team
                actor:
                  id: 212
                  name: John Doe
                  email: john.doe@whois.com
                targetId: '3000'
                version:
                  from: 1.0.0
                  to: 1.0.1
  /cashier/products:
    get:
      x-private: true
      tags:
        - Cashier
      summary: Get list of cashier products
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum:
              - PLAN
              - EXTRA
          example: PLAN
          required: false
        - name: includeInvisible
          in: query
          schema:
            type: boolean
          example: true
        - name: relatedPriceId
          in: query
          schema:
            type: integer
          example: null
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
              examples:
                all-plans:
                  summary: Return all PLANs
                  description: Returns all products of type PLAN
                  value:
                    products:
                      - id: 1
                        name:
                          cs: Free
                          en: Free
                        description:
                          cs: >-
                            Pro kohokoliv, kdo se chce naučit základy
                            automatizace
                          en: For anyone to learn the basics.
                        descriptionHover:
                          cs: ''
                          en: ''
                        additionalInfo:
                          cs:
                            - Tvůrce pracovních procesů bez kódování
                            - 1000+ standard apps
                            - Neomezený počet uživatelů
                            - 2 aktivní scénáře
                            - Doba běhu scénářů - 5 minut
                            - Velikost souborů - 5 MB
                            - >-
                              Min. interval mezi naplánovanými spuštěními
                              scénářů - 15 minut
                            - Monitorování spuštění v reálném čase
                            - Vlastní aplikace
                          en:
                            - No-code workflow builder
                            - 1000+ standard apps
                            - Unlimited users
                            - 2 active scenarios
                            - 5min scenario execution time
                            - 5 MB file size
                            - >-
                              15min interval between scheduled scenario
                              executions
                            - Real-time execution monitoring
                            - Custom apps
                        priority: 1
                        visible: true
                        config:
                          teams: 1
                          fslimit: 5242880
                          apiLimit: 0
                          fulltext: false
                          interval: 15
                          priority: low
                          retention: 7
                          scenarios: 2
                          gracePeriod: 0
                          executionTime: 5
                          creatingTemplates: false
                          installPublicApps: true
                          productManagement: selfService
                        type: PLAN
                        comparisonId: 1
                        prices:
                          - id: 1
                            price: 0
                            config:
                              dslimit: 1
                              iolimit: 50
                              dsslimit: 1048576
                              transfer: 536870912
                              dlqStorage: 1048576
                              operations: 1000
                              restartPeriod: 1 month
                            period: month
                            default: true
                            visible: true
                            priority: 1
                            currencyCode: USD
  /cashier/prices/{priceId}:
    get:
      x-private: true
      tags:
        - Cashier
      summary: Get price detail
      parameters:
        - name: priceId
          in: path
          required: true
          schema:
            type: number
          example: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  productId:
                    type: number
                  price:
                    type: number
                  currencyCode:
                    type: string
                  period:
                    type: string
                  priority:
                    type: number
                  visible:
                    type: boolean
                  default:
                    type: boolean
                  config:
                    type: object
                    properties:
                      dslimit:
                        type: number
                      iolimit:
                        type: number
                      dsslimit:
                        type: number
                      transfer:
                        type: number
                      dlqStorage:
                        type: number
                      operations:
                        type: number
                      restartPeriod:
                        type: string
              example:
                id: 10
                productId: 4
                price: '86.00'
                currencyCode: USD
                period: month
                priority: 5
                visible: true
                default: false
                config:
                  dslimit: 12
                  iolimit: 2668
                  dsslimit: 41943040
                  transfer: 21474836480
                  dlqStorage: 41943040
                  operations: 40000
                  restartPeriod: 1 month
  /connections:
    get:
      x-published: true
      tags:
        - Connections
      summary: List connections
      description: >-
        Retrieves a collection of all connections for a team with a given ID.
        Returned connections are sorted by name in ascending order.
      security:
        - token:
            - connections:read
      parameters:
        - name: teamId
          in: query
          schema:
            type: integer
          required: true
          description: The unique ID of the team whose connections will be retrieved.
          example: 22
        - name: type[]
          in: query
          schema:
            type: array
            items:
              type: string
          examples:
            id-name:
              value: airtable2
          description: >-
            Specifies the type of the connections to return details for. The
            connection type is defined in the `accountName` property and you can
            get it from the [Get connection
            details](/connections-connectionId-get) endpoint.
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - accountName
                - accountLabel
                - packageName
                - expire
                - metadata
                - teamId
                - theme
                - upgradeable
                - scopesCnt
                - scoped
                - accountType
                - editable
                - uid
                - connectedSystemId
                - organizationId
          description: >-
            Specifies the group of values to return. For example, you may want
            to check which returned connections can be upgraded.
          examples:
            all-columns:
              summary: Return all details
              value:
                - id
                - name
                - accountName
                - accountLabel
                - packageName
                - expire
                - metadata
                - teamId
                - theme
                - upgradeable
                - scopesCnt
                - scoped
                - accountType
                - editable
                - uid
                - connectedSystemId
                - organizationId
            id-name:
              summary: Return connection ID and name
              value:
                - id
                - name
                - accountName
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  connections:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        accountName:
                          type: string
                        accountLabel:
                          type: string
                        packageName:
                          type: string
                        expire:
                          type: string
                          format: date-time
                        metadata:
                          type: object
                          properties:
                            value:
                              type: string
                            type:
                              type: string
                              enum:
                                - string
                                - email
                        teamId:
                          type: integer
                        theme:
                          type: string
                          format: color
                        upgradeable:
                          type: boolean
                        scopesCnt:
                          type: integer
                        scoped:
                          type: boolean
                        accountType:
                          type: string
                        editable:
                          type: boolean
                        uid:
                          type: string
                        connectedSystemId:
                          type: string
                        organizationId:
                          type: integer
              examples:
                all-columns:
                  summary: Return all details
                  description: Return all available information about user connections.
                  value:
                    connections:
                      - id: 2
                        name: My Airtable connection
                        accountName: airtable2
                        accountLabel: Airtable
                        packageName: null
                        expire: null
                        metadata: null
                        teamId: 22
                        theme: '#18bfff'
                        upgradeable: false
                        scopesCnt: 0
                        scoped: true
                        accountType: basic
                        editable: false
                        uid: null
                        connectedSystemId: c5d8e134-d2f8-480d-9838-119a54f65d3e
                        organizationId: 3
                      - id: 15
                        name: My Google connection
                        accountName: google
                        accountLabel: Google
                        packageName: null
                        expire: null
                        metadata:
                          type: email
                          value: test@mydomain.com
                        teamId: 22
                        theme: '#fecd5f'
                        upgradeable: false
                        scopesCnt: 4
                        scoped: true
                        accountType: oauth
                        editable: false
                        uid: 225874569526501080000
                        connectedSystemId: 4244156b-88cc-43cf-a5e9-e94bd0304745
                        organizationId: 2343
                id-name:
                  summary: Return ID, name, connection type
                  description: >-
                    Return ID and name of the user connections with the
                    `airtable2` connection type.
                  value:
                    connections:
                      - id: 2
                        name: My Airtable connection
                        accountName: airtable2
    post:
      x-published: true
      tags:
        - Connections
      summary: Create connection
      description: >-
        Creates a new connection with data passed in the request body. In the
        response, it returns all details of the created connection.
      security:
        - token:
            - connections:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accountName:
                  type: string
                  description: >-
                    The connection name. The name must be at most 128 characters
                    long and does not need to be unique.
                accountType:
                  type: string
                  description: >-
                    The connection type corresponding to the connected app. For
                    some connection types, this property may require providing
                    additional properties in the request body,  such as
                    `clientId` and `clientSecret`, in order to authorize the
                    connection and make it functional.
                scopes:
                  type: array
                  description: >-
                    The connection scope determining the module use. The format
                    and number of available scopes vary depending on the
                    `accountType` parameter.
                  items:
                    type: string
              additionalProperties: {}
            example:
              accountName: Slack Test
              accountType: slack
              clientId: 123456
              clientSecret: secret
              scopes:
                - chat:write
      parameters:
        - name: teamId
          in: query
          schema:
            type: integer
          required: true
          description: The unique ID of the team whose connections will be retrieved.
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  connection:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      accountName:
                        type: string
                      accountLabel:
                        type: string
                      packageName:
                        type: string
                      expire:
                        type: string
                        format: date-time
                      metadata:
                        type: object
                        properties:
                          value:
                            type: string
                          type:
                            type: string
                            enum:
                              - string
                              - email
                      teamId:
                        type: integer
                      theme:
                        type: string
                        format: color
                      upgradeable:
                        type: boolean
                      scopesCnt:
                        type: integer
                      scoped:
                        type: boolean
                      accountType:
                        type: string
                      editable:
                        type: boolean
                      uid:
                        type: string
                      connectedSystemId:
                        type: string
                      organizationId:
                        type: integer
              example:
                connection:
                  id: 90
                  name: Slack test
                  accountName: slack
                  accountLabel: Slack
                  packageName: null
                  expire: null
                  metadata:
                    value: Make User
                    type: string
                  teamId: 2
                  theme: '#4a154b'
                  upgradeable: false
                  scopes: 0
                  scoped: true
                  accountType: oauth
                  editable: false
                  uid: 3243125312
  /connections/{connectionId}:
    get:
      x-published: true
      tags:
        - Connections
      summary: Get connection details
      description: Retrieves details of a connection with a given ID.
      security:
        - token:
            - connections:read
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the connection. It can be retrieved from the [List
            connections](/connections-get) endpoint.
          example: 1
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - accountName
                - accountLabel
                - packageName
                - expire
                - metadata
                - teamId
                - theme
                - upgradeable
                - scopesCnt
                - scoped
                - accountType
                - editable
                - uid
                - scopes
                - connectedSystemId
                - organizationId
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only the name and scope for a given connection.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  connection:
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          accountName:
                            type: string
                          accountLabel:
                            type: string
                          packageName:
                            type: string
                          expire:
                            type: string
                            format: date-time
                          metadata:
                            type: object
                            properties:
                              value:
                                type: string
                              type:
                                type: string
                                enum:
                                  - string
                                  - email
                          teamId:
                            type: integer
                          theme:
                            type: string
                            format: color
                          upgradeable:
                            type: boolean
                          scopesCnt:
                            type: integer
                          scoped:
                            type: boolean
                          accountType:
                            type: string
                          editable:
                            type: boolean
                          uid:
                            type: string
                          connectedSystemId:
                            type: string
                          organizationId:
                            type: integer
                      - type: object
                        properties:
                          scopes:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                                account:
                                  type: string
              example:
                connection:
                  id: 93
                  name: Google
                  accountName: google
                  accountLabel: Google
                  packageName: null
                  expire: null
                  metadata:
                    value: tom@example.com
                    type: email
                  teamId: 4
                  theme: '#fecd5f'
                  upgradeable: false
                  scopesCnt: 5
                  scoped: true
                  accountType: oauth
                  editable: false
                  uid: 123456
                  scopes:
                    - id: https://www.googleapis.com/auth/userinfo.email
                      name: View user's email address
                      account: google
                    - id: https://mail.google.com/
                      name: Access to Gmail.
                      account: google
                    - id: openid
                      account: google
                    - id: https://www.googleapis.com/auth/spreadsheets
                      account: google
                    - id: https://www.googleapis.com/auth/drive
                      name: Access to Google Drive.
                      account: google
                  connectedSystemId: 4244156b-88cc-43cf-a5e9-e94bd0304745
                  organizationId: 3
    patch:
      x-published: true
      tags:
        - Connections
      summary: Update connection
      description: >-
        Updates a connection with a given ID by passing new data in the request
        body. Any property that is not provided will be left unchanged. As the
        response, it returns all details of the updated connection including
        properties that were not changed.
      security:
        - token:
            - connections:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The updated connection name. The name must be at most 128
                    characters long and does not need to be unique.
              additionalProperties: false
            example:
              name: New name
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the connection. It can be retrieved from the [List
            connections](/connections-get) endpoint.
          example: 1
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - accountName
                - accountLabel
                - packageName
                - expire
                - metadata
                - teamId
                - theme
                - upgradeable
                - scopesCnt
                - scoped
                - accountType
                - editable
                - uid
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only the expiration of the updated connection.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  connection:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      accountName:
                        type: string
                      accountLabel:
                        type: string
                      packageName:
                        type: string
                      expire:
                        type: string
                        format: date-time
                      metadata:
                        type: object
                        properties:
                          value:
                            type: string
                          type:
                            type: string
                            enum:
                              - string
                              - email
                      teamId:
                        type: integer
                      theme:
                        type: string
                        format: color
                      upgradeable:
                        type: boolean
                      scopesCnt:
                        type: integer
                      scoped:
                        type: boolean
                      accountType:
                        type: string
                      editable:
                        type: boolean
                      uid:
                        type: string
                      connectedSystemId:
                        type: string
                      organizationId:
                        type: integer
              example:
                connection:
                  id: 93
                  name: New Name
                  accountName: imap
                  accountLabel: Others (IMAP)
                  packageName: null
                  expire: null
                  metadata:
                    value: tom@example.com
                    type: email
                  teamId: 4
                  theme: '#eb5768'
                  upgradeable: false
                  scopesCnt: 0
                  scoped: true
                  accountType: basic
                  editable: true
                  uid: 123456
    delete:
      x-published: true
      tags:
        - Connections
      summary: Delete connection
      description: Deletes a connection with a given ID and returns the ID in the response.
      security:
        - token:
            - connections:write
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the connection. It can be retrieved from the [List
            connections](/connections-get) endpoint.
          example: 1
        - name: confirmed
          in: query
          schema:
            type: boolean
          description: >-
            Confirms the deletion if the connection is included in at least one
            scenario. Confirmation is required because the scenario will stop
            working without the connection. If the parameter is missing or it is
            set to `false` an error code is returned and the resource is not
            deleted.
          example: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  connection:
                    type: integer
              example:
                connection: 1
  /connections/{connectionId}/test:
    post:
      x-published: true
      tags:
        - Connections
      summary: Verify connection
      description: >-
        Verifies the connection status. This endpoint usually communicates with
        the API of the app that includes the given connection and verifies if
        credentials saved in Make are still valid. It returns the confirmation
        if the connection is verified (`true`) or not (`false`).
      security:
        - token:
            - connections:write
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the connection. It can be retrieved from the [List
            connections](/connections-get) endpoint.
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  verified:
                    type: boolean
              example:
                verified: true
  /connections/{connectionId}/scoped:
    post:
      x-published: true
      tags:
        - Connections
      summary: Verify if connection is scoped
      description: >-
        Verifies if a scope for a given connection is set. This endpoint returns
        the information if the connection is scoped (`true`) or not (`false`).
      security:
        - token:
            - connections:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scope:
                  type: array
                  description: >-
                    The array with IDs of the scopes for a given connection. The
                    scope ID of a specific connection can be retrieved from the
                    [Get connection details](/connections-connectionId-get)
                    endpoint.
                  items:
                    type: string
                  required:
                    - items
            example:
              scope:
                - https://www.googleapis.com/auth/userinfo.email
                - https://www.googleapis.com/auth/drive
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the connection. It can be retrieved from the [List
            connections](/connections-get) endpoint.
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  connection:
                    type: object
                    properties:
                      scoped:
                        type: boolean
              example:
                connection:
                  scoped: false
  /connections/{connectionId}/set-data:
    post:
      x-published: true
      tags:
        - Connections
      summary: Set connection data
      description: >-
        Sets data for the specified connection. The required data are different
        for each connection type. Check which connection data can be updated
        with the API call `GET
        /connections/{connectionId}/editable-data-schema`.


        If the connection cannot be updated then the API call returns the error
        message "Cannot edit this connection.". Create a new connection instead.
        Most of the connections to Apps cannot be updated.
      security:
        - token:
            - connections:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: >-
                The set of data is different for each connection type so there
                are no predefined body properties to use. Please see the request
                examples for more details.
              additionalProperties: {}
            examples:
              oauth:
                summary: OAuth connection
                description: Set data for an OAuth connection
                value:
                  accessToken: asdf98FDF9HasdfFDsdafasHBB
                  refreshToken: 8h9dHDJojnldkndDFJIVND
              email:
                summary: Email connection
                description: Set data for an email connection
                value:
                  provider: other
                  imapHost: imap.gmail.com
                  imapPort: 993
                  imapSecureConnection: true
                  imapUsername: test@test.cz
                  imapPassword: test
                  imapRejectUnauthorized: true
                  imapCa: ''
                  imapExplicitTLS: false
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the connection. It can be retrieved from the [List
            connections](/connections-get) endpoint.
          example: 1
        - name: reauthorize
          in: query
          schema:
            type: boolean
          description: >-
            The reauthorization status. If set to `false`, it will show the
            **Reauthorize** button next to the connection in the Make interface.
            Scenarios containing connections that need reauthorization may not
            be fully functional.
          example: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              example:
                changed: true
  /connections/{connectionId}/editable-data-schema:
    get:
      x-published: true
      tags:
        - Connections
      summary: List updatable connection parameters
      description: >-
        Retrieves a list of connection parameters that can be updated. You can
        update a connection with the API call `POST
        /connections/{connectionId}/set-data`.


        If the connection cannot be updated then the API call returns the error
        message "Cannot edit this connection.". Create a new connection instead.
        Most of the connections to Apps cannot be updated.
      security:
        - token:
            - connections:read
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the connection. It can be retrieved from the [List
            connections](/connections-get) endpoint.
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  editableParameters:
                    type: array
                    items: {}
              example:
                editableParameters:
                  - provider
                  - imapHost
                  - imapPort
                  - imapSecureConnection
                  - imapExplicitTLS
                  - imapUsername
                  - imapPassword
                  - imapRejectUnauthorized
                  - imapCa
  /custom-property-structures:
    get:
      x-published: true
      tags:
        - Custom properties
      summary: List custom property structures
      description: Gets a list of custom properties structures in the organization.
      security:
        - token:
            - custom-property-structures:read
      parameters:
        - name: organizationId
          in: query
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 57
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  customPropertyStructures:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        created:
                          type: string
                          format: date-time
                        belongers:
                          type: array
                          items:
                            type: object
                            properties:
                              belongerId:
                                type: integer
                              belongerType:
                                type: string
                              associatedTypes:
                                type: array
                                items:
                                  type: string
              example:
                customPropertyStructures:
                  - id: 2
                    created: '2023-06-27T22:00:00.000Z'
                    belongers:
                      - belongerId: 57
                        belongerType: organization
                        associatedTypes:
                          - scenario
    post:
      x-published: true
      tags:
        - Custom properties
      summary: Create a custom property structure
      description: >-
        Creates a custom properties structure. You can have only one custom
        properties structure for each combination of `associatedType`,
        `belongerType`and `belongerId` values.

        For example, you can create only one custom properties structure for
        scenarios in a specific organization.

        To create a structure for custom scenario properties, fill in the
        request body:

        - `associatedType`: `scenario`
         - `belongerType`: `organization`

        Check out the example API call.

        To define the custom properties structure items, use the API call [to
        create custom properties structure
        item](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-post).  
      security:
        - token:
            - custom-property-structures:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                associatedType:
                  description: >-
                    The type of the entity which uses the custom properties
                    structure. Fill in `scenario` to create custom scenario
                    properties structure.
                  type: string
                belongerType:
                  description: >-
                    The type of the entity that owns the custom properties
                    structure. Fill in `organization` to create custom scenario
                    properties structure.
                  type: string
                belongerId:
                  description: >-
                    The ID of the entity that owns the custom properties
                    structure.
                  type: integer
              required:
                - associatedType
                - belongerType
                - belongerId
            example:
              associatedType: scenario
              belongerType: organization
              belongerId: 57
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  created:
                    type: string
                    format: date-time
                  belongers:
                    type: array
                    items:
                      type: object
                      properties:
                        belongerId:
                          type: integer
                        belongerType:
                          type: string
                        associatedTypes:
                          type: array
                          items:
                            type: string
              example:
                customPropertyStructure:
                  id: 2
                  belongers:
                    - belongerId: 57
                      belongerType: organization
                      associatedTypes:
                        - scenario
                  created: '2023-06-27T22:00:00.000Z'
  /custom-property-structures/{customPropertyStructureId}/custom-property-structure-items:
    get:
      x-published: true
      tags:
        - Custom properties > Structure items
      summary: List custom property structure items
      description: >-
        Gets the list of structure items in the specified custom properties
        structure. 

        Use the API call `GET /custom-property-structures?{organizationId}` to
        get the ID of the custom property structure.
      security:
        - token:
            - custom-property-structures:read
      parameters:
        - name: customPropertyStructureId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the custom property structure.

            Use the API call `GET /custom-property-structures?{organizationId}`
            to get the ID of a custom property structure.
          example: 2
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - label
                - description
                - type
                - options
                - required
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
        - name: pg[sortBy]
          in: query
          schema:
            type: string
            enum:
              - id
              - name
              - label
              - description
              - type
              - required
          description: >-
            Specify the custom property item attribute. The custom property
            items in the response are sorted by the value of the attribute.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  customPropertyStructureItems:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        created:
                          type: string
                          format: date-time
                        belongers:
                          type: array
                          items:
                            type: object
                            properties:
                              belongerId:
                                type: integer
                              belongerType:
                                type: string
                              associatedTypes:
                                type: array
                                items:
                                  type: string
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                customPropertyStructureItems:
                  - id: 54
                    name: highPriority
                    label: High Priority
                    description: Specify whether the scenario is high priority or not.
                    type: boolean
                    options: null
                    required: false
                  - id: 55
                    name: location
                    label: Location
                    description: Location of the team managing the scenario.
                    type: shortText
                    options: null
                    required: false
                  - id: 56
                    name: description
                    label: Description
                    description: Custom description of the scenario.
                    type: longText
                    options: null
                    required: false
                  - id: 57
                    name: customId
                    label: Company ID
                    description: ID managed by our company
                    type: number
                    options: null
                    required: true
                  - id: 134
                    name: performanceCheck
                    label: Performance check due date
                    description: >-
                      The date when we should check whether the scenario remains
                      valid and can be improved.
                    type: string
                    format: date
                    options: null
                    required: true
                  - id: 43
                    name: companyTeam
                    label: Company Team
                    description: The team that manages the scenario
                    type: dropdown
                    options:
                      - value: Marketing
                      - value: Product
                      - label: Engineering
                    required: true
                  - id: 53
                    name: category
                    label: Category
                    description: The category tags of the scenarios
                    type: multiselect
                    options:
                      - value: Eshop
                      - value: Notifications
                      - value: Routing
                      - value: Products
                    required: false
                pg:
                  sortBy: id
                  limit: 10000
                  sortDir: asc
                  offset: 0
    post:
      x-published: true
      tags:
        - Custom properties > Structure items
      summary: Create a custom property structure item
      description: >-
        Creates custom properties structure items.

        After creating a structure item, you cannot change its `name` and
        `type`.

        To add data to the custom properties, use the API call to [fill in
        custom properties
        data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post).
      security:
        - token:
            - custom-property-structures:write
      parameters:
        - name: customPropertyStructureId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the custom property structure.

            Use the API call `GET /custom-property-structures?{organizationId}`
            to get the ID of a custom property structure.
          example: 2
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: >-
                    The ID of the structure item. The `name` has to be unique in
                    the custom properties structure.
                  type: string
                label:
                  description: >-
                    Make displays the item label to users in the scenario table
                    header.
                  type: string
                description:
                  description: >-
                    The description of the custom property structure item. You
                    can review the item description in the **Scenario
                    properties** tab in the Organization dashboard.
                  type: string
                type:
                  description: >-
                    The data type of the custom property structure item. The
                    data types `dropdown` and `multiselect` allow you to specify
                    available options for the item data.
                  type: string
                  enum:
                    - boolean
                    - number
                    - shortText
                    - longText
                    - date
                    - dropdown
                    - multiselect
                options:
                  description: >-
                    The options available to users when filling in the item
                    data. For the data types `dropdown` and `multiselect`, fill
                    in an object like `{"options":[{"value": "Marketing"},
                    {"value": "Sales"}]}`.

                    You can omit the `options` parameter for the rest of the
                    data types. 
                required:
                  description: >-
                    Set to `true` in order to make a structure item required
                    when adding custom property data. Default value is `false`.
                  type: boolean
              required:
                - name
                - label
                - type
            examples:
              basic-example:
                summary: Text item
                description: >-
                  Add a custom properties structure item with the data type
                  `shortText`.
                value:
                  name: teamLocation
                  label: Team location
                  description: Location of the team managing the scenario.
                  type: shortText
                  required: true
              options-example:
                summary: Item with options
                description: >-
                  Add a custom properties structure item with a set of available
                  options. The data `type` has to be `dropdown` or
                  `multiselect`. Use the `options` attribute to specify
                  available options.
                value:
                  name: category
                  label: Category
                  description: The scenario category
                  type: multiselect
                  options:
                    - value: Eshop
                    - value: Notifications
                    - value: Routing
                    - value: Products
                  required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  customPropertyStructureItem:
                    type: object
                    properties:
                      id:
                        type: integer
                      created:
                        type: string
                        format: date-time
                      belongers:
                        type: array
                        items:
                          type: object
                          properties:
                            belongerId:
                              type: integer
                            belongerType:
                              type: string
                            associatedTypes:
                              type: array
                              items:
                                type: string
              examples:
                basic-example:
                  value:
                    customPropertyStructureItem:
                      id: 183
                      structureId: 6
                      name: teamLocation
                      label: Team location
                      description: Location of the team managing the scenario.
                      type: shortText
                      options: null
                      required: false
                options-example:
                  value:
                    customPropertyStructureItem:
                      id: 185
                      structureId: 6
                      name: category
                      label: Category
                      description: The scenario category
                      type: multiselect
                      options:
                        - value: Eshop
                        - value: Notifications
                        - value: Routing
                        - value: Products
                      required: false
  /custom-property-structures/custom-property-structure-items/{customPropertyStructureItemId}:
    patch:
      x-published: true
      tags:
        - Custom properties > Structure items
      summary: Update custom property structure item
      description: >-
        Updates the specified item of a custom property structure. Specify the
        attributes you want to update in the request body.

        You cannot update the item `name` and `type`.

        You can get the item ID with an API call to [list custom property
        structure
        items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-get).

        When you want to update the `options` of a `multiselect` or `dropdown`
        item, specify all the options for the property. The new set of options
        replaces the current options.
      security:
        - token:
            - custom-property-structures:write
      parameters:
        - name: customPropertyStructureItemId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the custom property structure item. Get the item ID with
            the API call to [list custom property structure
            items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-get).
          example: 2
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  description: >-
                    Make displays the item label to users in the scenario table
                    header.
                  type: string
                description:
                  description: >-
                    The description of the custom property structure item. You
                    can review the item description in the **Scenario
                    properties** tab in the Organization dashboard.
                  type: string
                options:
                  description: >-
                    The options available to users when filling in the item
                    data. For the data types `dropdown` and `multiselect`, fill
                    in an object like `{"options":[{"value": "Marketing"},
                    {"value": "Sales"}]}`.

                    You can omit the `options` parameter for the rest of the
                    data types. 
                required:
                  description: >-
                    Set to `true` if you require to fill in data to the
                    structure item when adding custom property data. Default
                    value is `false`.
                  type: boolean
            examples:
              update-label:
                summary: Update custom property
                description: Updates the label of the custom property.
                value:
                  label: Updated categories
              update-options:
                summary: Update item options
                description: >-
                  To update the custom property item options, specify the new
                  set of available options. The new set of options replaces the
                  previous options.
                value:
                  options:
                    - value: Logistics
                    - value: People team
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  customPropertyStructureItem:
                    type: object
                    properties:
                      id:
                        type: integer
                      created:
                        type: string
                        format: date-time
                      belongers:
                        type: array
                        items:
                          type: object
                          properties:
                            belongerId:
                              type: integer
                            belongerType:
                              type: string
                            associatedTypes:
                              type: array
                              items:
                                type: string
              examples:
                update-label:
                  value:
                    customPropertyStructureItem:
                      id: 2
                      structureId: 11
                      name: categories
                      label: Updated categories
                      description: Update label of the categories.
                      type: multiselect
                      options:
                        - value: Accounting
                        - value: Development
                      required: true
                update-options:
                  value:
                    customPropertyStructureItem:
                      id: 2
                      structureId: 11
                      name: categories
                      label: Categories
                      description: Update label of the categories.
                      type: multiselect
                      options:
                        - value: Logistics
                        - value: People team
                      required: true
    delete:
      x-published: true
      tags:
        - Custom properties > Structure items
      summary: Delete custom property structure item
      description: >-
        Deletes the specified custom property structure item. Use the
        `confirmed` parameter to confirm deleting the structure item.

        When you delete a custom property item, Make deletes the data filled in
        the item as well. Deleting custom property item data is irreversible.
      security:
        - token:
            - custom-property-structures:write
      parameters:
        - name: customPropertyStructureItemId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the custom property structure item. Get the item ID with
            the API call to [list custom property structure
            items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-get).
          example: 2
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  customPropertyStructureItem:
                    type: number
              example:
                customPropertyStructureItem: 2
  /data-stores:
    get:
      x-published: true
      tags:
        - Data stores
      summary: List data stores
      description: >-
        Retrieves a collection of all data stores for a team with a given ID.
        Returned data stores are sorted by name in ascending order.
      security:
        - token:
            - datastores:read
      parameters:
        - required: true
          description: The unique ID of the team whose data stores will be retrieved.
          name: teamId
          in: query
          schema:
            type: integer
          example: 1
        - examples:
            all-columns:
              summary: Return all details
              value:
                - id
                - name
                - teamId
                - records
                - size
                - maxSize
                - datastructureId
            id-name:
              summary: Return ID and name
              value:
                - id
                - name
          name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - records
                - size
                - maxSize
                - datastructureId
          description: >-
            Specifies the group of values to return. For example, you can
            retrieve only names and IDs of data stores for a team with a given
            ID.
        - name: pg[sortBy]
          in: query
          schema:
            type: string
            enum:
              - name
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The value of maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStores:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        records:
                          type: integer
                        size:
                          type: string
                        maxSize:
                          type: string
                        teamId:
                          type: integer
                        datastructureId:
                          type: integer
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                        description: Shown only when using the `last` based pagination.
                      showLast:
                        type: boolean
                        description: Shown only when using the `last` based pagination.
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
                        description: Shown only when using the `offset` based pagination.
              examples:
                all-columns:
                  summary: Return all details
                  description: Returns all data stores details
                  value:
                    dataStores:
                      - id: 137
                        name: Customers
                        records: '0'
                        size: '0'
                        maxSize: '1048576'
                        teamId: 212
                        datastructureId: 123
                    pg:
                      sortBy: name
                      sortDir: asc
                      offset: 0
                      limit: 10
                id-name:
                  summary: Return ID and name
                  description: Returns IDs and names of data stores
                  value:
                    dataStores:
                      - id: 137
                        name: Customers
                      - id: 256
                        name: Products
                    pg:
                      sortBy: name
                      sortDir: asc
                      offset: 0
                      limit: 10
    post:
      x-published: true
      tags:
        - Data stores
      summary: Create data store
      description: >-
        Creates a new data store with data passed in the request body. In the
        response, it returns all details of the created data store.
      security:
        - token:
            - datastores:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The data store name. The name must be at most 128 characters
                    long and does not need to be unique.
                teamId:
                  type: integer
                  description: >-
                    The unique ID of the team in which the data store will be
                    created.
                datastructureId:
                  type: integer
                  description: >-
                    The unique ID of the data structure that will be included in
                    the data store. All data structures IDs for a given team can
                    be retrieved from the [List data
                    structures](/data-structures-get) endpoint.
                maxSizeMB:
                  type: integer
                  description: The maximum size of the data store (defined in MB).
              required:
                - name
                - teamId
                - datastructureId
                - maxSizeMB
            example:
              name: Customers
              teamId: 212
              datastructureId: 178
              maxSizeMB: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStore:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      records:
                        type: integer
                      size:
                        type: string
                      maxSize:
                        type: string
                      teamId:
                        type: integer
                      datastructureId:
                        type: integer
              example:
                dataStore:
                  id: 137
                  name: Customers
                  records: '0'
                  size: '0'
                  maxSize: '1048576'
                  teamId: 212
    delete:
      x-published: true
      tags:
        - Data stores
      summary: Delete data stores
      description: >-
        Deletes data stores with given IDs and returns their IDs in the
        response. This endpoint allows deleting one or more data stores at once.
      security:
        - token:
            - datastores:write
      parameters:
        - description: >-
            Confirms the deletion if a data store is included in at least one
            scenario. Confirmation is required because the scenario will stop
            working without the data store. If the parameter is missing or it is
            set to `false` an error code is returned and the resource is not
            deleted.
          name: confirmed
          in: query
          schema:
            type: boolean
          example: true
        - description: The unique ID of the team from which the data store will be deleted.
          name: teamId
          in: query
          schema:
            type: integer
          example: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    ids:
                      type: array
                      description: >-
                        The IDs of data stores to delete. You can either use
                        only this parameter alone or use the `all` parameter, or
                        the `all` parameter together with the `exceptIds`
                        parameter.
                      items:
                        type: integer
                  required:
                    - ids
                - type: object
                  properties:
                    exceptIds:
                      type: array
                      description: >-
                        The IDs of data stores to be excluded from deleting. It
                        can be only used together with the `all` parameter set
                        to `true`.
                      items:
                        type: integer
                    all:
                      type: boolean
                      description: >-
                        If set to `true`, all data stores will be deleted. It
                        can be used alone or together with the `exceptIds`
                        parameter.
                  required:
                    - all
            example:
              ids:
                - 137
                - 1399
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStores:
                    type: array
                    items:
                      type: integer
              example:
                dataStores:
                  - 137
                  - 1399
  /data-stores/{dataStoreId}:
    get:
      x-published: true
      tags:
        - Data stores
      summary: Get data store details
      description: Retrieves details of a data store with a given ID.
      parameters:
        - name: dataStoreId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the data store. Get the `dataStoreId` from the [List data
            stores](/data-stores-get) endpoint.
          example: 137
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - records
                - size
                - maxSize
                - datastructureId
          description: >-
            Specifies the group of values to return. For example, you can
            retrieve only names and IDs of data stores for a team with a given
            ID.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStore:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      records:
                        type: integer
                      size:
                        type: string
                      maxSize:
                        type: string
                      teamId:
                        type: integer
                      datastructureId:
                        type: integer
              example:
                dataStore:
                  id: 137
                  name: Customers
                  records: '0'
                  size: '0'
                  maxSize: '1048576'
                  teamId: 212
    patch:
      x-published: true
      tags:
        - Data stores
      summary: Update data store
      description: >-
        Updates properties of a data store with a given ID in a team with a
        given ID by passing new values in the request body. In the response, it
        returns all details of the updated data store including properties that
        were not changed. Any property that is not provided will be left
        unchanged. This endpoint cannot be used to update data included in the
        data store - for this use the [endpoints for managing data stores
        data](/data-stores-dataStoreId-data-get).
      security:
        - token:
            - datastores:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The data store name. The name must be at most 128 characters
                    long and does not need to be unique.
                datastructureId:
                  type: integer
                  description: >-
                    The unique ID of the data structure included in the data
                    store. All data structures IDs for a given team can be
                    retrieved from the [List data
                    structures](/data-structures-get) endpoint.
                maxSizeMB:
                  type: integer
                  description: The maximum size of the data store (defined in MB).
            example:
              name: Data store 2
              datastructureId: 9
              maxSizeMB: 3
      parameters:
        - name: dataStoreId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the data store. Get the `dataStoreId` from the [List data
            stores](/data-stores-get) endpoint.
          example: 137
        - required: true
          description: The unique ID of the team whose data stores will be retrieved.
          name: teamId
          in: query
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStore:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      records:
                        type: integer
                      size:
                        type: string
                      maxSize:
                        type: string
                      teamId:
                        type: integer
                      datastructureId:
                        type: integer
              example:
                dataStore:
                  id: 137
                  name: Customers
                  records: '0'
                  size: '0'
                  maxSize: '1048576'
                  teamId: 212
  /data-stores/{dataStoreId}/data:
    get:
      x-published: true
      tags:
        - Data stores > Data
      summary: List data store records
      description: >-
        Retrieves a collection of all records from a data store with a given ID.
        Each returned record consists of the `key` (custom or automatically
        generated) and `data`.
      security:
        - token:
            - datastores:read
      parameters:
        - name: dataStoreId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the data store. Get the `dataStoreId` from the [List data
            stores](/data-stores-get) endpoint.
          example: 137
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The value of maximum entities to return.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: >-
                            The unique key of the data store record. If no key
                            is provided, it will be automatically generated.
                        data:
                          type: object
                          description: >-
                            The data of the data store record. The structure
                            strictly depends on the included data structure. If
                            no data is provided, in response the values will be
                            set to null.
                  spec:
                    type: array
                    items:
                      type: object
                  strict:
                    type: boolean
                  count:
                    type: integer
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                        description: Shown only when using the `last` based pagination.
                      showLast:
                        type: boolean
                        description: Shown only when using the `last` based pagination.
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
                        description: Shown only when using the `offset` based pagination.
              example:
                records:
                  - key: 8f7162828bc0
                    data:
                      price: 600
                spec:
                  - name: price
                    label: Price
                    type: number
                    default: null
                    required: true
                strict: false
                count: 2
                pg:
                  limit: 10
                  offset: 0
    post:
      x-published: true
      tags:
        - Data stores > Data
      summary: Create data store record
      description: >-
        Creates a new record in a data store with a given ID and returns all
        record details.
      security:
        - token:
            - datastores:write
      parameters:
        - name: dataStoreId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the data store. Get the `dataStoreId` from the [List data
            stores](/data-stores-get) endpoint.
          example: 137
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: >-
                    The unique key of the data store record. If no key is
                    provided, it will be automatically generated.
                data:
                  type: object
                  description: >-
                    The data of the data store record. The structure strictly
                    depends on the included data structure. If no data is
                    provided, in response the values will be set to null.
            example:
              key: 8f7162828bc0
              data:
                price: 600
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: >-
                      The unique key of the data store record. If no key is
                      provided, it will be automatically generated.
                  data:
                    type: object
                    description: >-
                      The data of the data store record. The structure strictly
                      depends on the included data structure. If no data is
                      provided, in response the values will be set to null.
              example:
                key: 8f7162828bc0
                data:
                  price: 600
    delete:
      x-published: true
      tags:
        - Data stores > Data
      summary: Delete data store records
      description: >-
        Deletes records from the specified data store.


        Specify the `keys` of the records you want to delete in the `keys` array
        in the request body.


        Use the `all` parameter in the request body to delete all records from
        the data store. You have to add the `confirmed` parameter in the API
        call query to confirm deleting the data, otherwise you get an error.


        When you are deleting all records, you can use the `exceptKeys`
        parameter to specify keys of the records which you want to keep.


        The response contains keys of the deleted records.
      security:
        - token:
            - datastores:write
      parameters:
        - name: dataStoreId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the data store. Get the `dataStoreId` from the [List data
            stores](/data-stores-get) endpoint.
          example: 137
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: true
          description: >-
            Set to `true` to confirm deleting of the data store records.
            Otherwise, you get an error and Make won't delete the data store
            records.
          examples:
            delete-all:
              value: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                keys:
                  type: array
                  description: >-
                    The keys of data store records you want to delete. Use the
                    `all` and `confirmed` parameters if you want to delete all
                    records in the data store.
                  items:
                    type: string
                all:
                  type: boolean
                  description: >-
                    Set to `true` to delete all records in the data store. Use
                    the `confirmed` parameter to confirm the deletion. You can
                    also use the `exceptKeys` parameter to specify keys of the
                    records that you want to keep in the data store.
                exceptKeys:
                  type: array
                  description: >-
                    Specify the keys of the data store records you want to keep
                    when deleting all records from the data store.
                  items:
                    type: string
            examples:
              delete-selected:
                summary: Delete records
                description: >-
                  Delete records in the data store. Specify the record keys in
                  the `keys` array in the request body.
                value:
                  keys:
                    - 1abd2defk
                    - 568tyuj45
              delete-all:
                summary: Delete all records
                description: >-
                  Deletes all records in the data store. You have to confirm the
                  deletion with the `confirmed` parameter. You can use the
                  `exceptKeys` parameter to specify keys of the records you want
                  to keep.
                value:
                  all: true
                  exceptKeys:
                    - 568tyuj45
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      type: string
              examples:
                delete-selected:
                  value:
                    keys:
                      - 1abd2defk
                      - 568tyuj45
                delete-all:
                  value:
                    keys:
                      - 1abd2defk
  /data-stores/{dataStoreId}/data/{dataStoreKeyRecord}:
    put:
      x-published: true
      tags:
        - Data stores > Data
      summary: Update entire data store record
      description: >-
        Updates a data store record with a given key by passing new data in the
        request body. It replaces the entire resource with the new values. In
        the response, this endpoint returns all details of the updated data.
      security:
        - token:
            - datastores:write
      parameters:
        - name: dataStoreId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the data store. Get the `dataStoreId` from the [List data
            stores](/data-stores-get) endpoint.
          example: 137
        - name: dataStoreKeyRecord
          in: path
          schema:
            type: string
          required: true
          description: >-
            The key of the data store record. It can be retrieved from the [List
            data store records](/data-stores-dataStoreId-data-get) endpoint.
          example: ecc4819b2260
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: >-
                The data is different for each data store so there are no
                predefined body properties to use. Please see the request
                example for more details.
            example:
              price: 600
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: >-
                      The unique key of the data store record. If no key is
                      provided, it will be automatically generated.
                  data:
                    type: object
                    description: >-
                      The data of the data store record. The structure strictly
                      depends on the included data structure. If no data is
                      provided, in response the values will be set to null.
              example:
                key: 8f7162828bc0
                data:
                  price: 600
    patch:
      x-published: true
      tags:
        - Data stores > Data
      summary: Update data store record details
      description: >-
        Updates a data store record with a given key by passing new data in the
        request body. Any property that is not provided will be left unchanged.
        In the response, it returns all details of the updated data including
        properties that were not changed.
      security:
        - token:
            - datastores:write
      parameters:
        - name: dataStoreId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the data store. Get the `dataStoreId` from the [List data
            stores](/data-stores-get) endpoint.
          example: 137
        - name: dataStoreKeyRecord
          in: path
          schema:
            type: string
          required: true
          description: >-
            The key of the data store record. It can be retrieved from the [List
            data store records](/data-stores-dataStoreId-data-get) endpoint.
          example: ecc4819b2260
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: >-
                The data is different for each data store so there are no
                predefined body properties to use. Please see the request
                example for more details.
            example:
              price: 600
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: >-
                      The unique key of the data store record. If no key is
                      provided, it will be automatically generated.
                  data:
                    type: object
                    description: >-
                      The data of the data store record. The structure strictly
                      depends on the included data structure. If no data is
                      provided, in response the values will be set to null.
              example:
                key: 8f7162828bc0
                data:
                  price: 600
  /data-structures:
    get:
      x-published: true
      tags:
        - Data structures
      summary: List data structures
      description: >-
        Retrieves a collection of all data structures for a team with a given
        ID. Returned data structures are sorted by name in ascending order.
      security:
        - token:
            - udts:read
      parameters:
        - name: teamId
          in: query
          schema:
            type: integer
          required: true
          description: The unique ID of the team whose data structures will be retrieved.
          example: 123
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - spec
                - strict
          description: >-
            Specifies the group of values to return. For example, you can
            retrieve only names of data structures for a team with a given ID.
        - name: pg[sortBy]
          in: query
          schema:
            type: string
            enum:
              - name
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStructures:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        teamId:
                          type: integer
                        name:
                          type: string
                          minLength: 1
                          maxLength: 128
                        strict:
                          type: boolean
                        spec:
                          type: array
                          items:
                            oneOf:
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - boolean
                                  name:
                                    type: string
                                  label:
                                    type: string
                                  required:
                                    type: boolean
                                  default:
                                    type: boolean
                                required:
                                  - name
                                  - type
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - text
                                  name:
                                    type: string
                                  label:
                                    type: string
                                  required:
                                    type: boolean
                                  default:
                                    type: string
                                  multiline:
                                    type: boolean
                                required:
                                  - name
                                  - type
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - number
                                  name:
                                    type: string
                                  label:
                                    type: string
                                  required:
                                    type: boolean
                                  default:
                                    type: number
                                required:
                                  - name
                                  - type
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - date
                                  name:
                                    type: string
                                  label:
                                    type: string
                                required:
                                  - name
                                  - type
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - buffer
                                  name:
                                    type: string
                                  label:
                                    type: string
                                  required:
                                    type: boolean
                                  codepage:
                                    type: string
                                    enum:
                                      - binary
                                      - utf8
                                required:
                                  - name
                                  - type
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - collection
                                  name:
                                    type: string
                                  label:
                                    type: string
                                  spec:
                                    type: array
                                    items:
                                      type: object
                                  sequence:
                                    type: boolean
                                required:
                                  - name
                                  - type
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - array
                                  name:
                                    type: string
                                  label:
                                    type: string
                                  spec:
                                    type: object
                                  sequence:
                                    type: boolean
                                required:
                                  - name
                                  - type
                      required:
                        - id
                        - teamId
                        - name
                        - strict
                        - spec
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              examples:
                default:
                  summary: Empty data structure
                  description: Returns data structures with empty specification
                  value:
                    dataStructures:
                      - id: 9
                        name: Data structure 1
                        teamId: 1
                      - id: 1
                        name: Data structure 2
                        teamId: 1
                    pg:
                      sortBy: name
                      sortDir: asc
                      limit: 10000
                      offset: 0
                all:
                  summary: Data structure with spec
                  description: Returns data structure with full specification
                  value:
                    dataStructures:
                      - id: 9
                        name: Data structure 1
                        teamId: 1
                        spec:
                          - type: text
                            name: txt
                            label: Text field
                            default: default string
                            required: true
                          - type: number
                            name: num
                            label: Number field
                            default: 1,
                            required: false
                        strict: true
                      - id: 1
                        name: Data structure 2
                        teamId: 1
                        spec:
                          - type: string
                            format: date
                            name: dt
                            label: Date field
                        strict: false
                    pg:
                      sortBy: name
                      sortDir: asc
                      limit: 10000
                      offset: 0
    post:
      x-published: true
      tags:
        - Data structures
      summary: Create data structure
      description: >-
        Creates a new data structure with data passed in the request body. In
        the response, it returns all details of the created data structure
        including its full specification.
      security:
        - token:
            - udts:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                teamId:
                  type: integer
                  description: >-
                    The unique ID of the team in which the data structure will
                    be created.
                name:
                  type: string
                  description: >-
                    The name of the data structure. The maximum length of the
                    name is 128 characters.
                  minLength: 1
                  maxLength: 128
                strict:
                  type: boolean
                  description: >
                    Set to `true` to enforce strict validation of the data put
                    in the data structure. With the strict validation enabled,
                    the data structure won't store data that don't fit into the
                    structure and the storing module will return an error.


                    The default value of this parameter is `false`. With the
                    default setting, the modules using the data structure will
                    process data that don't conform to the data structure.
                  example: true
                spec:
                  type: array
                  description: Sets the data structure specification.
                  items:
                    oneOf:
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - boolean
                          name:
                            type: string
                          label:
                            type: string
                          required:
                            type: boolean
                          default:
                            type: boolean
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - text
                          name:
                            type: string
                          label:
                            type: string
                          required:
                            type: boolean
                          default:
                            type: string
                          multiline:
                            type: boolean
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - number
                          name:
                            type: string
                          label:
                            type: string
                          required:
                            type: boolean
                          default:
                            type: number
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - date
                          name:
                            type: string
                          label:
                            type: string
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - buffer
                          name:
                            type: string
                          label:
                            type: string
                          required:
                            type: boolean
                          codepage:
                            type: string
                            enum:
                              - binary
                              - utf8
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - collection
                          name:
                            type: string
                          label:
                            type: string
                          spec:
                            type: array
                            items:
                              type: object
                          sequence:
                            type: boolean
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - array
                          name:
                            type: string
                          label:
                            type: string
                          spec:
                            type: object
                          sequence:
                            type: boolean
                        required:
                          - name
                          - type
              required:
                - teamId
                - name
                - strict
                - spec
            example:
              teamId: 1
              name: Data structure 1
              strict: true
              spec:
                - type: text
                  name: txt
                  label: Text field
                  default: default string
                  required: true
                - type: number
                  name: num
                  label: Number field
                  default: 1,
                  required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStructure:
                    type: object
                    properties:
                      id:
                        type: integer
                      teamId:
                        type: integer
                      name:
                        type: string
                        minLength: 1
                        maxLength: 128
                      strict:
                        type: boolean
                      spec:
                        type: array
                        items:
                          oneOf:
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - boolean
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - text
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: string
                                multiline:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - number
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: number
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - date
                                name:
                                  type: string
                                label:
                                  type: string
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - buffer
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                codepage:
                                  type: string
                                  enum:
                                    - binary
                                    - utf8
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - collection
                                name:
                                  type: string
                                label:
                                  type: string
                                spec:
                                  type: array
                                  items:
                                    type: object
                                sequence:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - array
                                name:
                                  type: string
                                label:
                                  type: string
                                spec:
                                  type: object
                                sequence:
                                  type: boolean
                              required:
                                - name
                                - type
                    required:
                      - id
                      - teamId
                      - name
                      - strict
                      - spec
              example:
                dataStructure:
                  id: 9
                  name: Data structure 1
                  teamId: 1
                  spec:
                    - type: text
                      name: txt
                      label: Text field
                      default: default string
                      required: true
                    - type: number
                      name: num
                      label: Number field
                      default: 1,
                      required: false
                  strict: true
  /data-structures/{dataStructureId}:
    get:
      x-published: true
      tags:
        - Data structures
      summary: Get data structure
      description: Retrieves a data structure with a given ID
      security:
        - token:
            - udts:read
      parameters:
        - name: dataStructureId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The data structure ID. Get the `dataStructureId` with the [list data
            structures](/data-structures-get) endpoint.
          example: 1459
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - spec
                - strict
          description: >-
            Specifies the group of values to return. For example, you can
            retrieve only name of a data structure.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStructure:
                    type: object
                    properties:
                      id:
                        type: integer
                      teamId:
                        type: integer
                      name:
                        type: string
                        minLength: 1
                        maxLength: 128
                      strict:
                        type: boolean
                      spec:
                        type: array
                        items:
                          oneOf:
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - boolean
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - text
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: string
                                multiline:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - number
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: number
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - date
                                name:
                                  type: string
                                label:
                                  type: string
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - buffer
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                codepage:
                                  type: string
                                  enum:
                                    - binary
                                    - utf8
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - collection
                                name:
                                  type: string
                                label:
                                  type: string
                                spec:
                                  type: array
                                  items:
                                    type: object
                                sequence:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - array
                                name:
                                  type: string
                                label:
                                  type: string
                                spec:
                                  type: object
                                sequence:
                                  type: boolean
                              required:
                                - name
                                - type
                    required:
                      - id
                      - teamId
                      - name
                      - strict
                      - spec
              example:
                dataStructure:
                  id: 9
                  name: Data structure 1
                  teamId: 1
                  spec:
                    - type: text
                      name: txt
                      label: Text field
                      default: default string
                      required: true
                    - type: number
                      name: num
                      label: Number field
                      default: 2,
                      required: false
                  strict: true
    patch:
      x-published: true
      tags:
        - Data structures
      summary: Update data structure
      description: >-
        Updates the specified data structure. Make updates only parameters you
        send in the request body.

        Note that when you update the data structure specification with the
        `spec` parameter, you have to provide all structure fields you want to
        use. Make replaces the old structure specification with the new one.

        The response contains all details about the updated data structure.
      security:
        - token:
            - udts:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The name of the data structure. The maximum length of the
                    name is 128 characters.
                  minLength: 1
                  maxLength: 128
                strict:
                  type: boolean
                  description: >
                    Set to `true` to enforce strict validation of the data put
                    in the data structure. With the strict validation enabled,
                    the data structure won't store data that don't fit into the
                    structure and the storing module will return an error.


                    The default value of this parameter is `false`. With the
                    default setting, the modules using the data structure will
                    process data that don't conform to the data structure.
                  example: false
                spec:
                  type: array
                  description: >
                    Sets the data structure specification.
                     
                    Note that when you update the data structure specification
                    with the `spec` parameter, you have to provide all structure
                    fields you want to use. Make replaces the old structure
                    specification with the new one."
                  items:
                    oneOf:
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - boolean
                          name:
                            type: string
                          label:
                            type: string
                          required:
                            type: boolean
                          default:
                            type: boolean
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - text
                          name:
                            type: string
                          label:
                            type: string
                          required:
                            type: boolean
                          default:
                            type: string
                          multiline:
                            type: boolean
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - number
                          name:
                            type: string
                          label:
                            type: string
                          required:
                            type: boolean
                          default:
                            type: number
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - date
                          name:
                            type: string
                          label:
                            type: string
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - buffer
                          name:
                            type: string
                          label:
                            type: string
                          required:
                            type: boolean
                          codepage:
                            type: string
                            enum:
                              - binary
                              - utf8
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - collection
                          name:
                            type: string
                          label:
                            type: string
                          spec:
                            type: array
                            items:
                              type: object
                          sequence:
                            type: boolean
                        required:
                          - name
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - array
                          name:
                            type: string
                          label:
                            type: string
                          spec:
                            type: object
                          sequence:
                            type: boolean
                        required:
                          - name
                          - type
            example:
              name: Data structure 1
              spec:
                - type: text
                  name: txt
                  label: Text field
                  default: default string
                  required: true
                - type: number
                  name: num
                  label: Number field
                  default: 2,
                  required: false
      parameters:
        - name: dataStructureId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The data structure ID. Get the `dataStructureId` with the [list data
            structures](/data-structures-get) endpoint.
          example: 1459
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStructure:
                    type: object
                    properties:
                      id:
                        type: integer
                      teamId:
                        type: integer
                      name:
                        type: string
                        minLength: 1
                        maxLength: 128
                      strict:
                        type: boolean
                      spec:
                        type: array
                        items:
                          oneOf:
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - boolean
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - text
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: string
                                multiline:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - number
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: number
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - date
                                name:
                                  type: string
                                label:
                                  type: string
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - buffer
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                codepage:
                                  type: string
                                  enum:
                                    - binary
                                    - utf8
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - collection
                                name:
                                  type: string
                                label:
                                  type: string
                                spec:
                                  type: array
                                  items:
                                    type: object
                                sequence:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - array
                                name:
                                  type: string
                                label:
                                  type: string
                                spec:
                                  type: object
                                sequence:
                                  type: boolean
                              required:
                                - name
                                - type
                    required:
                      - id
                      - teamId
                      - name
                      - strict
                      - spec
              example:
                dataStructure:
                  id: 9
                  name: Data structure 1
                  teamId: 1
                  spec:
                    - type: text
                      name: txt
                      label: Text field
                      default: default string
                      required: true
                    - type: number
                      name: num
                      label: Number field
                      default: 2,
                      required: false
                  strict: true
    delete:
      x-published: true
      tags:
        - Data structures
      summary: Delete data structure
      description: >-
        Deletes a data structure with a given ID and returns the ID in the
        response.
      security:
        - token:
            - udts:write
      parameters:
        - name: dataStructureId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The data structure ID. Get the `dataStructureId` with the [list data
            structures](/data-structures-get) endpoint.
          example: 1459
        - name: confirmed
          in: query
          schema:
            type: boolean
          description: >-
            Confirms the deletion if a data structure is included in at least
            one scenario. Confirmation is required because the scenario will
            stop working without the data structure. If the parameter is missing
            or it is set to `false` an error code is returned and the resource
            is not deleted.
          example: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStructure:
                    type: integer
              example:
                dataStructure: 1
  /data-structures/{dataStructureId}/clone:
    post:
      x-published: true
      tags:
        - Data structures
      summary: Clone data structure
      description: >-
        Clones the specified data structure. Use the `targetTeamId` to clone the
        data structure to the specified team.


        The response contains all details of the data structure clone with data
        structure full specification.
      security:
        - token:
            - udts:write
      parameters:
        - name: dataStructureId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The data structure ID. Get the `dataStructureId` with the [list data
            structures](/data-structures-get) endpoint.
          example: 1459
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The name of the data structure clone. The maximum length of
                    the name is 128 characters.
                  minLength: 1
                  maxLength: 128
                targetTeamId:
                  type: integer
                  description: >-
                    The ID of the team that should use the data structure clone.
                    If you don't specify the `targetTeamId` Make clones the data
                    structure in the original team.
              required:
                - name
            example:
              name: Cloned data structure
              targetTeamId: 22
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStructure:
                    type: object
                    properties:
                      id:
                        type: integer
                      teamId:
                        type: integer
                      name:
                        type: string
                        minLength: 1
                        maxLength: 128
                      strict:
                        type: boolean
                      spec:
                        type: array
                        items:
                          oneOf:
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - boolean
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - text
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: string
                                multiline:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - number
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                default:
                                  type: number
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - date
                                name:
                                  type: string
                                label:
                                  type: string
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - buffer
                                name:
                                  type: string
                                label:
                                  type: string
                                required:
                                  type: boolean
                                codepage:
                                  type: string
                                  enum:
                                    - binary
                                    - utf8
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - collection
                                name:
                                  type: string
                                label:
                                  type: string
                                spec:
                                  type: array
                                  items:
                                    type: object
                                sequence:
                                  type: boolean
                              required:
                                - name
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - array
                                name:
                                  type: string
                                label:
                                  type: string
                                spec:
                                  type: object
                                sequence:
                                  type: boolean
                              required:
                                - name
                                - type
                    required:
                      - id
                      - teamId
                      - name
                      - strict
                      - spec
                  differentTeam:
                    type: boolean
              example:
                dataStructure:
                  id: 2547
                  name: Cloned data structure
                  teamId: 22
                  spec:
                    - type: text
                      name: txt
                      label: Text field
                      default: default string
                      required: true
                    - type: number
                      name: num
                      label: Number field
                      default: 1,
                      required: false
                  strict: true
  /devices:
    get:
      tags:
        - Devices
      summary: List
      description: Get a list of devices of a given team.
      security:
        - token:
            - devices:read
      parameters:
        - name: teamId
          in: query
          schema:
            type: integer
          required: true
          example: '1'
        - name: assigned
          in: query
          schema:
            type: boolean
          description: >-
            true = devices with scenarioId; false = devices without scenarioId -
            this filter only affects the trigger scope
          example: 'true'
        - name: viewForScenarioId
          in: query
          schema:
            type: integer
          description: >-
            Devices assigned to the scenario and not assigned devices. If this
            parameter is set assigned parameter is ignored.
          example: '4'
        - name: scope[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - call
                - scanner
          example: call
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - udid
                - scope
                - info
                - queueCount
                - queueLimit
                - scenarioId
          example: name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        teamId:
                          type: integer
                        udid:
                          type: string
                        scope:
                          type: array
                          items:
                            type: string
                        info:
                          type: object
                        queueCount:
                          type: integer
                        queueLimit:
                          type: integer
                        scenarioId:
                          type: integer
              example:
                devices:
                  - id: 2
                    name: Phone
                    teamId: 2
                    udid: XboVPMTfgtwBNjRr7AGPe9X4AdRZhkaF
                    scope:
                      - call
                      - scaner
                    info: null
                    queueCount: 0
                    queueLimit: 10000
                    scenarioId: null
  /devices/{deviceId}:
    get:
      tags:
        - Devices
      summary: Detail
      description: The ID can be id or udid.
      security:
        - token:
            - devices:read
      parameters:
        - name: deviceId
          in: path
          schema:
            type: integer
          required: true
        - name: inspector
          in: query
          schema:
            type: integer
          example: '1'
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - udid
                - scope
                - info
                - queueCount
                - queueLimit
                - scenarioId
          example: name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  device:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      udid:
                        type: string
                      scope:
                        type: array
                        items:
                          type: string
                      info:
                        type: object
                      queueCount:
                        type: integer
                      queueLimit:
                        type: integer
                      scenarioId:
                        type: integer
              example:
                device:
                  id: 2
                  name: Phone
                  teamId: 2
                  udid: XboVPMTfgtwBNjRr7AGPe9X4AdRZhkaF
                  scope:
                    - call
                    - scaner
                  info: null
                  queueCount: 0
                  queueLimit: 10000
                  scenarioId: null
    patch:
      tags:
        - Devices
      summary: Partial update
      description: Update a device
      security:
        - token:
            - devices:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              name: Android phone
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - udid
                - scope
                - info
                - queueCount
                - queueLimit
                - scenarioId
          example: name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  device:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      udid:
                        type: string
                      scope:
                        type: array
                        items:
                          type: string
                      info:
                        type: object
                      queueCount:
                        type: integer
                      queueLimit:
                        type: integer
                      scenarioId:
                        type: integer
              example:
                device:
                  id: 2
                  name: Android phone
                  teamId: 2
                  udid: XboVPMTfgtwBNjRr7AGPe9X4AdRZhkaF
                  scope:
                    - call
                    - scaner
                  info: null
                  queueCount: 0
                  queueLimit: 10000
                  scenarioId: null
    delete:
      tags:
        - Devices
      summary: Delete
      description: "Errors:<br />\r\nIM004 - Confirmation required (error with metadata) - needs confirmation<br />\r\nIM405 - Device can't be deleted because it contains messages in queue (error with metadata) - needs confirmation<br />\r\nIM005 - Device is locked by a running scenario and thus can't be deleted"
      security:
        - token:
            - devices:write
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          example: 2
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  device:
                    type: integer
              example:
                device: 2
  /devices/request:
    post:
      tags:
        - Devices
      summary: Create request
      description: 'Required scope: devices:write'
      security:
        - token:
            - devices:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                teamId:
                  type: integer
            example:
              name: Phone
              teamId: 1
      parameters:
        - name: inspector
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  createDeviceRequest:
                    type: object
                    properties:
                      udid:
                        type: string
                      inspector:
                        type: boolean
              example:
                createDeviceRequest:
                  udid: k1KqeAVIYA5Rq5vduiU3mUfbGD4vhTfH
                  inspector: true
  /devices/{deviceId}/incomings:
    get:
      tags:
        - Devices > Incomings
      summary: List
      description: 'Required scope: devices:read'
      security:
        - token:
            - devices:read
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
        - name: scope
          in: query
          schema:
            type: string
          example: new_sms
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  incomings:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        scope:
                          type: string
                        size:
                          type: integer
                        created:
                          type: string
                          format: date-time
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                incomings:
                  - id: 27c4879e5fae4d78b0d371f59187fa93
                    scope: new_sms
                    size: 1
                    created: '2021-01-26T06:55:58.803Z'
                pg:
                  sortBy: created
                  limit: 10000
                  sortDir: asc
                  offset: 0
    delete:
      tags:
        - Devices > Incomings
      summary: Delete
      description: "\"ids\" and \"all\" can no be used together<br />\r\n\"ids\" or \"all\" has to be set<br />\r\n\"exceptIds\" is possible to use only with \"all\"<br />\r\nIt could happen, that some incoming messages are deleted and others not. In this case, the API returns a successful status code, and the response additionally contains an error object with a error description."
      security:
        - token:
            - devices:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                exceptIds:
                  type: array
                  items:
                    type: string
                all:
                  type: boolean
            example:
              ids: []
              exceptIds: []
              all: true
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  incomings:
                    type: array
                    items:
                      type: string
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              examples:
                delete:
                  summary: Delete
                  value:
                    incomings:
                      - 4ff11b6d24e24fa9add17d11a8143578
                      - 167193ab06d34b879346c69aebc8f5c1
                      - d1efa5318a034d36ad7cbeac543573cf
                      - 29d9a7410dff494ab739036f6c332335
                delete-with-error:
                  summary: Delete with error
                  value:
                    incomings:
                      - 02731358e5ab4022aff040015a1f1a57
                      - dcf18b685e5c4095b9ee24cea09146d3
                    error:
                      name: APIError
                      message: >-
                        Some of the incoming messages could not be deleted
                        because they are being processed right now.
  /devices/{deviceId}/incomings/{incomingId}:
    get:
      tags:
        - Devices > Incomings
      summary: Detail
      description: 'Required scope: devices:read'
      security:
        - token:
            - devices:read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  scope:
                    type: string
                  size:
                    type: integer
                  created:
                    type: string
                    format: date-time
                  data:
                    type: string
              examples:
                detail:
                  value:
                    id: 5
                    scope: text
                    size: 5
                    created: 2004-10-19T08:23:54.000Z
                    data: text
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
        - name: incomingId
          in: path
          schema:
            type: string
          required: true
  /devices/{deviceId}/incomings/stats:
    get:
      tags:
        - Devices > Incomings
      summary: Stats
      description: 'Required scope: devices:read'
      security:
        - token:
            - devices:read
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
        - name: scope
          in: query
          schema:
            type: string
          example: new_sms
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  incomingStat:
                    type: object
                    properties:
                      queue:
                        type: integer
                      limit:
                        type: integer
                      enabled:
                        type: boolean
              example:
                incomingStat:
                  queue: 1
                  limit: 10000
                  enabled: true
  /devices/{deviceId}/outgoings:
    get:
      tags:
        - Devices > Outgoing
      summary: List
      description: 'Required scope: devices:read'
      security:
        - token:
            - devices:read
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
        - name: scope
          in: query
          schema:
            type: string
          example: new_sms
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  outgoings:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        scope:
                          type: string
                        size:
                          type: integer
                        created:
                          type: string
                          format: date-time
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                outgoings:
                  - id: ce2ab2eca9874a8b874f5deb6e22d475
                    scope: new_sms
                    size: 1
                    created: '2021-01-12T15:08:36.732Z'
                pg:
                  sortBy: created
                  limit: 10000
                  sortDir: asc
                  offset: 0
    delete:
      tags:
        - Devices > Outgoing
      summary: Delete
      description: "\"ids\" and \"all\" can no be used together<br />\r\n\"ids\" or \"all\" has to be set<br />\r\n\"exceptIds\" is possible to use only with \"all\"<br />\r\nIt could happen, that some incoming messages are deleted and others not. In this case, the API returns a successful status code, and the response additionally contains an error object with a error description."
      security:
        - token:
            - devices:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                exceptIds:
                  type: array
                  items:
                    type: string
                all:
                  type: boolean
            example:
              ids: []
              exceptIds: []
              all: true
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  outgoings:
                    type: array
                    items:
                      type: string
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              examples:
                delete:
                  summary: Delete
                  value:
                    outgoings:
                      - 4ff11b6d24e24fa9add17d11a8143578
                      - 167193ab06d34b879346c69aebc8f5c1
                      - d1efa5318a034d36ad7cbeac543573cf
                      - 29d9a7410dff494ab739036f6c332335
                delete-with-error:
                  summary: Delete with error
                  value:
                    outgoings:
                      - 02731358e5ab4022aff040015a1f1a57
                      - dcf18b685e5c4095b9ee24cea09146d3
                    error:
                      name: APIError
                      message: >-
                        Some of the outgoings messages could not be deleted
                        because they are being processed right now.
  /devices/{deviceId}/outgoings/{outgoingId}:
    get:
      tags:
        - Devices > Outgoing
      summary: Detail
      description: 'Required scope: devices:read'
      security:
        - token:
            - devices:read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  scope:
                    type: string
                  size:
                    type: integer
                  created:
                    type: string
                    format: date-time
                  data:
                    type: string
              examples:
                detail:
                  value:
                    id: 5
                    scope: text
                    size: 5
                    created: 2004-10-19T08:23:54.000Z
                    data: text
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
        - name: outgoingId
          in: path
          schema:
            type: string
          required: true
  /dlqs:
    get:
      x-published: true
      tags:
        - Incomplete executions
      summary: List scenario incomplete executions
      description: Retrieves the list of incomplete executions of the specified scenario.
      security:
        - token:
            - dlqs:read
      parameters:
        - name: scenarioId
          in: query
          schema:
            type: integer
          required: true
          example: 4
          description: >-
            The ID value of the scenario. Use the API call `GET /scenarios` to
            get the ID of the scenario. If your scenario is placed in a folder,
            use the API call `GET /scenarios-folders?teamId={teamId}` first.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dlqs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        reason:
                          type: string
                        created:
                          type: string
                          format: date-time
                        size:
                          type: integer
                        resolved:
                          type: boolean
                        retry:
                          type: boolean
                        attempts:
                          type: integer
              example:
                dlqs:
                  - id: ada87173334b44d1907270064edbd7dd
                    reason: IP address is not valid.
                    created: '2019-11-04T10:52:57.260Z'
                    size: 5
                    resolved: false
                    retry: true
                    attempts: 1
                  - id: c29c4bf027c74bfc848e1803bf764447
                    reason: IP address is not valid.
                    created: '2019-11-04T10:52:12.276Z'
                    size: 5
                    resolved: false
                    retry: true
                    attempts: 0
    delete:
      x-published: true
      tags:
        - Incomplete executions
      summary: Delete scenario incomplete executions
      description: >-
        Deletes incomplete executions of the specified scenario. Specify the
        incomplete execution ID values in the `ids` array in the request body to
        delete the specified incomplete executions.


        You can set the `"all": true` pair to delete all incomplete executions
        of the specified scenario. If you use the `"all": true` parameter, you
        have to specify the `confirmed=true` query parameter to confirm the
        deletion. Otherwise, the API call returns the error IM004 (406).
         
        Add the `exceptIds` array to the request body to specify items you don't
        want to delete.


        You get an error if you try to delete incomplete executions which are
        being processed. The rest of the specified items is still deleted.
      security:
        - token:
            - dlqs:write
      parameters:
        - name: scenarioId
          in: query
          schema:
            type: integer
          example: 4
          required: true
          description: >-
            The ID value of the scenario. Use the API call `GET /scenarios` to
            get the ID of the scenario. If your scenario is placed in a folder,
            use the API call `GET /scenarios-folders?teamId={teamId}` first.
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: 'true'
          description: >-
            Set to `true` to confirm deleting the incomplete executions.
            Otherwise the API call fails with the error IM004 (406).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  description: >-
                    The ID values of the scenario incomplete executions that you
                    want to delete. Use the API call `GET
                    /dlqs/?scenarioId={scenarioId}` to get the ID values of the
                    webhook processing queue items.
                exceptIds:
                  type: array
                  items:
                    type: string
                  description: >-
                    If you are deleting all of the incomplete executions with
                    the `all:true` parameter, you can specify the ID values of
                    the incomplete executions that you want to keep. Use the API
                    call `GET /dlqs/?scenarioId={scenarioId}` to get the ID
                    values of the incomplete executions.
                all:
                  type: boolean
                  description: >-
                    Set to `true` to delete all incomplete executions of the
                    specified scenario.
            examples:
              delete:
                summary: Delete incomplete executions
                description: Delete incomplete executions of the specified scenario.
                value:
                  ids:
                    - 85354fed3c804ec3a137b9ceb9dc9256
                    - 3b8badf2afd7447eb4340c24d1706b83
                  exceptIds: []
                  all: false
              delete-with-error:
                summary: Delete error
                description: >-
                  You get the API error if you try to delete incomplete
                  executions that are being processed at the moment. The items
                  that are not being processed will be deleted.
                value:
                  ids:
                    - 2f2eb8de489a4e059518b212f5388bf3
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dlqs:
                    type: array
                    items:
                      type: string
              examples:
                delete:
                  value:
                    dlqs:
                      - f140d39b5c9c4c72b3bc4f3b7aa467de
                      - 74232267212a431ebab728158575ef65
                delete-with-error:
                  value:
                    dlqs:
                      - 2f2eb8de489a4e059518b212f5388bf3
                    error:
                      name: APIError
                      message: >-
                        Some of the executions could not be deleted because they
                        are being processed right now.
                      stack: >-
                        APIError: Some of the executions could not be deleted
                        because they are being processed right now.
                          at deleteDlqMulti (C:\make-repo\imt-web-api\lib\controllers\dlqs.js:162:16)
                          at processTicksAndRejections (internal/process/task_queues.js:93:5)
  /dlqs/{dlqId}:
    get:
      x-published: true
      tags:
        - Incomplete executions
      summary: Incomplete execution detail
      description: Gets detail of the specified incomplete execution.
      security:
        - token:
            - dlqs:read
      parameters:
        - name: dlqId
          in: path
          schema:
            type: string
          required: true
          example: a07e16f2ad134bf49cf83a00aa95c0a5
          description: >-
            The ID of the incomplete execution. Get the ID values of the
            incomplete executions of a scenario with the API call `GET
            /dlqs?scenarioId={scenarioId}`.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dlq:
                    type: object
                    properties:
                      id:
                        type: string
                      scenarioId:
                        type: integer
                      scenarioName:
                        type: string
                      companyId:
                        type: integer
                      companyName:
                        type: string
                      resolved:
                        type: boolean
                      deleted:
                        type: boolean
                      index:
                        type: integer
                      created:
                        type: string
                        format: date-time
                      executionId:
                        type: string
                      retry:
                        type: boolean
                      attempts:
                        type: integer
                      size:
                        type: integer
              example:
                dlq:
                  id: a07e16f2ad134bf49cf83a00aa95c0a5
                  scenarioId: 3
                  scenarioName: DLQS test
                  companyId: 1
                  companyName: My Lab
                  resolved: false
                  deleted: false
                  index: 49
                  created: '2019-11-26T09:57:10.039Z'
                  executionId: 55602700-e840-45bf-b18c-0aef214dd967
                  retry: false
                  attempts: 2
                  size: 21
    patch:
      x-published: true
      tags:
        - Incomplete executions
      summary: Update incomplete execution
      description: Updates the specified incomplete execution.
      security:
        - token:
            - dlqs:write
      parameters:
        - name: dlqId
          in: path
          schema:
            type: string
          required: true
          description: >-
            The ID of the incomplete execution. Get the ID values of the
            incomplete executions of a scenario with the API call `GET
            /dlqs?scenarioId={scenarioId}`.
          example: a07e16f2ad134bf49cf83a00aa95c0a5
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                blueprint:
                  type: string
                  description: >-
                    The blueprint you want to use to resolve the incomplete
                    execution. If you download the blueprint from a Make
                    scenario as a JSON object, you have to escape the blueprint
                    contents to be able to send it as a string.
                failer:
                  type: integer
                  description: >-
                    The module ID which caused the incomplete execution of the
                    scenario.
            example:
              blueprint: >-
                {"name":"Integration of failing
                scenario","flow":[{"id":1,"module":"http:ActionSendData","version":3,"parameters":{"handleErrors":false},"mapper":{"ca":"","qs":[],"url":"https://local.make.cloud/api/not-existing-page","gzip":true,"method":"get","headers":[],"timeout":"","authPass":"","authUser":"","bodyType":"","shareCookies":false,"parseResponse":false,"followRedirect":true,"useQuerystring":false,"rejectUnauthorized":true},"metadata":{"designer":{"x":0,"y":0},"restore":{"qs":{"mode":"chose","items":[]},"method":{"mode":"chose","label":"GET"},"headers":{"mode":"chose","items":[]},"bodyType":{"label":""}},"parameters":[{"name":"handleErrors","type":"boolean","label":"Evaluate
                all states as errors (except for 2xx and 3xx
                )","required":true}],"expect":[{"name":"url","type":"url","label":"URL","required":true},{"name":"method","type":"select","label":"Method","required":true,"validate":{"enum":["get","head","post","put","patch","delete"]}},{"name":"headers","spec":[{"name":"name","type":"text","label":"Name","required":true},{"name":"value","type":"text","label":"Value"}],"type":"array","label":"Headers","labels":{"add":"Add
                a header","edit":"Edit a
                header"}},{"name":"qs","spec":[{"name":"name","type":"text","label":"Name","required":true},{"name":"value","type":"text","label":"Value"}],"type":"array","label":"Query
                String","labels":{"add":"Add parameter","edit":"Edit
                parameter"}},{"name":"bodyType","type":"select","label":"Body
                type","validate":{"enum":["raw","x_www_form_urlencoded","multipart_form_data"]}},{"name":"parseResponse","type":"boolean","label":"Parse
                response","required":true},{"name":"authUser","type":"text","label":"User
                name"},{"name":"authPass","type":"password","label":"Password"},{"name":"timeout","type":"uinteger","label":"Timeout","validate":{"max":300,"min":1}},{"name":"shareCookies","type":"boolean","label":"Share
                cookies with other HTTP
                modules","required":true},{"name":"ca","type":"cert","label":"Self-signed
                certificate","multiline":true},{"name":"rejectUnauthorized","type":"boolean","label":"Reject
                connections that are using unverified (self-signed)
                certificates","required":true},{"name":"followRedirect","type":"boolean","label":"Follow
                redirect","required":true},{"name":"useQuerystring","type":"boolean","label":"Disable
                serialization of multiple same query string keys as
                arrays","required":true},{"name":"gzip","type":"boolean","label":"Request
                compressed
                content","required":true}]},"onerror":[{"id":2,"module":"builtin:Break","version":1,"parameters":{},"mapper":{"count":"3","retry":true,"interval":"1"},"metadata":{"designer":{"x":300,"y":0},"restore":{"retry":{"mode":"chose"}},"expect":[{"name":"retry","type":"boolean","label":"Automatically
                complete
                execution","required":true},{"name":"count","type":"uinteger","label":"Number
                of
                attempts","required":true},{"name":"interval","type":"uinteger","label":"Interval
                between
                attempts","required":true}]}}]}],"metadata":{"version":1,"scenario":{"autoCommit":true,"autoCommitTriggerLast":true,"roundtrips":1,"maxErrors":3}}}
              failer: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dlq:
                    type: object
                    properties:
                      failer:
                        type: integer
                      blueprint:
                        type: object
                        properties:
                          flow:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                mapper:
                                  type: object
                                  properties:
                                    ca:
                                      type: string
                                    qs:
                                      type: array
                                      items: {}
                                    url:
                                      type: string
                                      format: uri
                                    gzip:
                                      type: boolean
                                    method:
                                      type: string
                                    headers:
                                      type: array
                                      items: {}
                                    timeout:
                                      type: string
                                    authPass:
                                      type: string
                                    authUser:
                                      type: string
                                    bodyType:
                                      type: string
                                    shareCookies:
                                      type: boolean
                                    parseResponse:
                                      type: boolean
                                    followRedirect:
                                      type: boolean
                                    useQuerystring:
                                      type: boolean
                                    rejectUnauthorized:
                                      type: boolean
                                module:
                                  type: string
                                  format: uri
                                onerror:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      mapper:
                                        type: object
                                        properties:
                                          count:
                                            type: string
                                            format: utc-millisec
                                          retry:
                                            type: boolean
                                          interval:
                                            type: string
                                            format: utc-millisec
                                      module:
                                        type: string
                                        format: uri
                                      version:
                                        type: integer
                                      metadata:
                                        type: object
                                        properties:
                                          expect:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                name:
                                                  type: string
                                                type:
                                                  type: string
                                                label:
                                                  type: string
                                                required:
                                                  type: boolean
                                          restore:
                                            type: object
                                            properties:
                                              retry:
                                                type: object
                                                properties:
                                                  mode:
                                                    type: string
                                          designer:
                                            type: object
                                            properties:
                                              x:
                                                type: integer
                                              'y':
                                                type: integer
                                      parameters:
                                        type: object
                                version:
                                  type: integer
                                metadata:
                                  type: object
                                  properties:
                                    expect:
                                      type: array
                                      items:
                                        type: object
                                    restore:
                                      type: object
                                      properties:
                                        qs:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                            items:
                                              type: array
                                              items: {}
                                        method:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                            label:
                                              type: string
                                        headers:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                            items:
                                              type: array
                                              items: {}
                                        bodyType:
                                          type: object
                                          properties:
                                            label:
                                              type: string
                                    designer:
                                      type: object
                                      properties:
                                        x:
                                          type: integer
                                        'y':
                                          type: integer
                                    parameters:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                                          type:
                                            type: string
                                          label:
                                            type: string
                                          required:
                                            type: boolean
                                parameters:
                                  type: object
                                  properties:
                                    handleErrors:
                                      type: boolean
                          name:
                            type: string
                          metadata:
                            type: object
                            properties:
                              version:
                                type: integer
                              scenario:
                                type: object
                                properties:
                                  maxErrors:
                                    type: integer
                                  autoCommit:
                                    type: boolean
                                  roundtrips:
                                    type: integer
              example:
                dlq:
                  failer: 1
                  blueprint:
                    flow:
                      - id: 1
                        mapper:
                          ca: ''
                          qs: []
                          url: https://local.make.cloud/api/not-existing-page
                          gzip: true
                          method: get
                          headers: []
                          timeout: ''
                          authPass: ''
                          authUser: ''
                          bodyType: ''
                          shareCookies: false
                          parseResponse: false
                          followRedirect: true
                          useQuerystring: false
                          rejectUnauthorized: true
                        module: http:ActionSendData
                        onerror:
                          - id: 2
                            mapper:
                              count: '3'
                              retry: true
                              interval: '1'
                            module: builtin:Break
                            version: 1
                            metadata:
                              expect:
                                - name: retry
                                  type: boolean
                                  label: Automatically complete execution
                                  required: true
                                - name: count
                                  type: uinteger
                                  label: Number of attempts
                                  required: true
                                - name: interval
                                  type: uinteger
                                  label: Interval between attempts
                                  required: true
                              restore:
                                retry:
                                  mode: chose
                              designer:
                                x: 300
                                'y': 0
                            parameters: {}
                        version: 3
                        metadata:
                          expect:
                            - name: url
                              type: url
                              label: URL
                              required: true
                            - name: method
                              type: select
                              label: Method
                              required: true
                              validate:
                                enum:
                                  - get
                                  - head
                                  - post
                                  - put
                                  - patch
                                  - delete
                            - name: headers
                              spec:
                                - name: name
                                  type: text
                                  label: Name
                                  required: true
                                - name: value
                                  type: text
                                  label: Value
                              type: array
                              label: Headers
                              labels:
                                add: Add a header
                                edit: Edit a header
                            - name: qs
                              spec:
                                - name: name
                                  type: text
                                  label: Name
                                  required: true
                                - name: value
                                  type: text
                                  label: Value
                              type: array
                              label: Query String
                              labels:
                                add: Add parameter
                                edit: Edit parameter
                            - name: bodyType
                              type: select
                              label: Body type
                              validate:
                                enum:
                                  - raw
                                  - x_www_form_urlencoded
                                  - multipart_form_data
                            - name: parseResponse
                              type: boolean
                              label: Parse response
                              required: true
                            - name: authUser
                              type: text
                              label: User name
                            - name: authPass
                              type: password
                              label: Password
                            - name: timeout
                              type: uinteger
                              label: Timeout
                              validate:
                                max: 300
                                min: 1
                            - name: shareCookies
                              type: boolean
                              label: Share cookies with other HTTP modules
                              required: true
                            - name: ca
                              type: cert
                              label: Self-signed certificate
                              multiline: true
                            - name: rejectUnauthorized
                              type: boolean
                              label: >-
                                Reject connections that are using unverified
                                (self-signed) certificates
                              required: true
                            - name: followRedirect
                              type: boolean
                              label: Follow redirect
                              required: true
                            - name: useQuerystring
                              type: boolean
                              label: >-
                                Disable serialization of multiple same query
                                string keys as arrays
                              required: true
                            - name: gzip
                              type: boolean
                              label: Request compressed content
                              required: true
                          restore:
                            qs:
                              mode: chose
                              items: []
                            method:
                              mode: chose
                              label: GET
                            headers:
                              mode: chose
                              items: []
                            bodyType:
                              label: ''
                          designer:
                            x: 0
                            'y': 0
                          parameters:
                            - name: handleErrors
                              type: boolean
                              label: >-
                                Evaluate all states as errors (except for 2xx
                                and 3xx )
                              required: true
                        parameters:
                          handleErrors: false
                    name: Integration of failing scenario
                    metadata:
                      version: 1
                      scenario:
                        maxErrors: 3
                        autoCommit: true
                        roundtrips: 1
    delete:
      tags:
        - Incomplete executions
      summary: Delete - deprecated
      deprecated: true
      description: 'Required scope: datastores:write'
      security:
        - token:
            - dlqs:write
      parameters:
        - name: dlqId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dlq:
                    type: string
              examples:
                delete:
                  summary: Delete
                  value:
                    dlq: ada87173334b44d1907270064edbd7dd
  /dlqs/{dlqId}/blueprint:
    get:
      x-published: true
      tags:
        - Incomplete executions
      summary: Get failed scenario blueprint
      description: Gets the blueprint of the scenario that caused the incomplete execution.
      security:
        - token:
            - dlqs:read
      parameters:
        - name: dlqId
          in: path
          schema:
            type: string
          required: true
          example: a07e16f2ad134bf49cf83a00aa95c0a5
          description: >-
            The ID of the incomplete execution. Get the ID values of the
            incomplete executions of a scenario with the API call `GET
            /dlqs?scenarioId={scenarioId}`.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  response:
                    type: object
                    properties:
                      blueprint:
                        type: object
                        properties:
                          flow:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                mapper:
                                  type: object
                                  properties:
                                    ca:
                                      type: string
                                    qs:
                                      type: array
                                      items: {}
                                    url:
                                      type: string
                                      format: uri
                                    gzip:
                                      type: boolean
                                    method:
                                      type: string
                                    headers:
                                      type: array
                                      items: {}
                                    timeout:
                                      type: string
                                    authPass:
                                      type: string
                                    authUser:
                                      type: string
                                    bodyType:
                                      type: string
                                    shareCookies:
                                      type: boolean
                                    parseResponse:
                                      type: boolean
                                    followRedirect:
                                      type: boolean
                                    useQuerystring:
                                      type: boolean
                                    rejectUnauthorized:
                                      type: boolean
                                module:
                                  type: string
                                  format: uri
                                onerror:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      mapper:
                                        type: object
                                        properties:
                                          count:
                                            type: string
                                            format: utc-millisec
                                          retry:
                                            type: boolean
                                          interval:
                                            type: string
                                            format: utc-millisec
                                      module:
                                        type: string
                                        format: uri
                                      version:
                                        type: integer
                                      metadata:
                                        type: object
                                        properties:
                                          expect:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                name:
                                                  type: string
                                                type:
                                                  type: string
                                                label:
                                                  type: string
                                                required:
                                                  type: boolean
                                          restore:
                                            type: object
                                            properties:
                                              retry:
                                                type: object
                                                properties:
                                                  mode:
                                                    type: string
                                          designer:
                                            type: object
                                            properties:
                                              x:
                                                type: integer
                                              'y':
                                                type: integer
                                      parameters:
                                        type: object
                                version:
                                  type: integer
                                metadata:
                                  type: object
                                  properties:
                                    expect:
                                      type: array
                                      items:
                                        type: object
                                    restore:
                                      type: object
                                      properties:
                                        qs:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                            items:
                                              type: array
                                              items: {}
                                        method:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                            label:
                                              type: string
                                        headers:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                            items:
                                              type: array
                                              items: {}
                                        bodyType:
                                          type: object
                                          properties:
                                            label:
                                              type: string
                                    designer:
                                      type: object
                                      properties:
                                        x:
                                          type: integer
                                        'y':
                                          type: integer
                                    parameters:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                                          type:
                                            type: string
                                          label:
                                            type: string
                                          required:
                                            type: boolean
                                parameters:
                                  type: object
                                  properties:
                                    handleErrors:
                                      type: boolean
                          name:
                            type: string
                          metadata:
                            type: object
                            properties:
                              version:
                                type: integer
                              scenario:
                                type: object
                                properties:
                                  maxErrors:
                                    type: integer
                                  autoCommit:
                                    type: boolean
                                  roundtrips:
                                    type: integer
                      company:
                        type: integer
                      idSequence:
                        type: integer
                      reason:
                        type: string
              example:
                code: OK
                response:
                  blueprint:
                    flow:
                      - id: 1
                        mapper:
                          ca: ''
                          qs: []
                          url: https://local.make.cloud/api/not-existing-page
                          gzip: true
                          method: get
                          headers: []
                          timeout: ''
                          authPass: ''
                          authUser: ''
                          bodyType: ''
                          shareCookies: false
                          parseResponse: false
                          followRedirect: true
                          useQuerystring: false
                          rejectUnauthorized: true
                        module: http:ActionSendData
                        onerror:
                          - id: 2
                            mapper:
                              count: '3'
                              retry: true
                              interval: '1'
                            module: builtin:Break
                            version: 1
                            metadata:
                              expect:
                                - name: retry
                                  type: boolean
                                  label: Automatically complete execution
                                  required: true
                                - name: count
                                  type: uinteger
                                  label: Number of attempts
                                  required: true
                                - name: interval
                                  type: uinteger
                                  label: Interval between attempts
                                  required: true
                              restore:
                                retry:
                                  mode: chose
                              designer:
                                x: 300
                                'y': 0
                            parameters: {}
                        version: 3
                        metadata:
                          expect:
                            - name: url
                              type: url
                              label: URL
                              required: true
                            - name: method
                              type: select
                              label: Method
                              required: true
                              validate:
                                enum:
                                  - get
                                  - head
                                  - post
                                  - put
                                  - patch
                                  - delete
                            - name: headers
                              spec:
                                - name: name
                                  type: text
                                  label: Name
                                  required: true
                                - name: value
                                  type: text
                                  label: Value
                              type: array
                              label: Headers
                              labels:
                                add: Add a header
                                edit: Edit a header
                            - name: qs
                              spec:
                                - name: name
                                  type: text
                                  label: Name
                                  required: true
                                - name: value
                                  type: text
                                  label: Value
                              type: array
                              label: Query String
                              labels:
                                add: Add parameter
                                edit: Edit parameter
                            - name: bodyType
                              type: select
                              label: Body type
                              validate:
                                enum:
                                  - raw
                                  - x_www_form_urlencoded
                                  - multipart_form_data
                            - name: parseResponse
                              type: boolean
                              label: Parse response
                              required: true
                            - name: authUser
                              type: text
                              label: User name
                            - name: authPass
                              type: password
                              label: Password
                            - name: timeout
                              type: uinteger
                              label: Timeout
                              validate:
                                max: 300
                                min: 1
                            - name: shareCookies
                              type: boolean
                              label: Share cookies with other HTTP modules
                              required: true
                            - name: ca
                              type: cert
                              label: Self-signed certificate
                              multiline: true
                            - name: rejectUnauthorized
                              type: boolean
                              label: >-
                                Reject connections that are using unverified
                                (self-signed) certificates
                              required: true
                            - name: followRedirect
                              type: boolean
                              label: Follow redirect
                              required: true
                            - name: useQuerystring
                              type: boolean
                              label: >-
                                Disable serialization of multiple same query
                                string keys as arrays
                              required: true
                            - name: gzip
                              type: boolean
                              label: Request compressed content
                              required: true
                          restore:
                            qs:
                              mode: chose
                              items: []
                            method:
                              mode: chose
                              label: GET
                            headers:
                              mode: chose
                              items: []
                            bodyType:
                              label: ''
                          designer:
                            x: 0
                            'y': 0
                          parameters:
                            - name: handleErrors
                              type: boolean
                              label: >-
                                Evaluate all states as errors (except for 2xx
                                and 3xx )
                              required: true
                        parameters:
                          handleErrors: false
                    name: Integration of failing scenario
                    metadata:
                      user:
                        id: 1
                      version: 1
                      scenario:
                        maxErrors: 3
                        autoCommit: true
                        roundtrips: 1
                  company: 1
                  idSequence: 3
                  reason: IP address is not valid.
  /dlqs/{dlqId}/bundle:
    get:
      x-published: true
      tags:
        - Incomplete executions
      summary: Get incomplete execution bundles
      description: Gets bundles that caused the incomplete execution.
      security:
        - token:
            - dlqs:read
      parameters:
        - name: dlqId
          in: path
          schema:
            type: string
          required: true
          example: a07e16f2ad134bf49cf83a00aa95c0a5
          description: >-
            The ID of the incomplete execution. Get the ID values of the
            incomplete executions of a scenario with the API call `GET
            /dlqs?scenarioId={scenarioId}`.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  response:
                    type: object
              example:
                code: OK
                response:
                  '1':
                    error:
                      type: InvalidConfigurationError
                      message: IP address is not valid.
                  '3':
                    value: Example error text.
  /dlqs/{dlqId}/logs:
    get:
      x-published: true
      tags:
        - Incomplete executions
      summary: List incomplete executions logs
      description: Gets data about attempts to resolve an incomplete execution.
      security:
        - token:
            - dlqs:read
      parameters:
        - name: dlqId
          in: path
          schema:
            type: string
          required: true
          example: a07e16f2ad134bf49cf83a00aa95c0a5
          description: >-
            The ID of the incomplete execution. Get the ID values of the
            incomplete executions of a scenario with the API call `GET
            /dlqs?scenarioId={scenarioId}`.
        - name: status
          in: query
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
          description: >-
            The status number of the incomplete execution. The status numbers
            correspond to the following statuses:
             
            - 1: success,
             - 2: warning,
             - 3: error.
          example: 3
        - name: from
          in: query
          schema:
            type: integer
            format: timestamp
          example: '1548975600000'
          description: >-
            The moment from which you want to list the incomplete execution
            logs. The timestamp is in the [UNIX
            timestamp](https://en.wikipedia.org/wiki/Unix_time) format.
        - name: to
          in: query
          schema:
            type: integer
            format: timestamp
          example: '1574782119387'
          description: >-
            Limits the returned incomplete execution logs to those that were
            created before the specified moment. The timestamp is in the [UNIX
            timestamp](https://en.wikipedia.org/wiki/Unix_time) format.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dlqLogs:
                    type: array
                    items:
                      type: object
                      properties:
                        imtId:
                          type: string
                        duration:
                          type: integer
                        transfer:
                          type: integer
                        operations:
                          type: integer
                        teamId:
                          type: integer
                        id:
                          type: string
                        type:
                          type: string
                        authorId:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                        status:
                          type: integer
                        instant:
                          type: boolean
                        organizationId:
                          type: integer
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                dlqLogs:
                  - imtId: >-
                      1574777797796_dlq.a07e16f2ad134bf49cf83a00aa95c0a5.manual.f241ee9b0d344964a5ce54356b9ed98e
                    duration: 728
                    transfer: 0
                    operations: 1
                    teamId: 1
                    id: f241ee9b0d344964a5ce54356b9ed98e
                    type: manual
                    authorId: null
                    timestamp: '2019-11-26T14:16:37.796Z'
                    status: 3
                  - imtId: >-
                      1574777795371_dlq.a07e16f2ad134bf49cf83a00aa95c0a5.manual.7f65bad83eb74c899a70c76794d8afc3
                    duration: 795
                    transfer: 0
                    operations: 1
                    teamId: 1
                    id: 7f65bad83eb74c899a70c76794d8afc3
                    type: manual
                    authorId: null
                    timestamp: '2019-11-26T14:16:35.371Z'
                    status: 3
                pg:
                  sortBy: imtId
                  sortDir: desc
                  limit: 50
                  offset: 0
  /dlqs/{dlqId}/logs/{executionDlqId}:
    get:
      x-published: true
      tags:
        - Incomplete executions
      summary: Incomplete execution log detail
      description: Gets detail of the specified incomplete execution log.
      security:
        - token:
            - dlqs:read
      parameters:
        - name: dlqId
          in: path
          schema:
            type: string
          required: true
          example: a07e16f2ad134bf49cf83a00aa95c0a5
          description: >-
            The ID of the incomplete execution. Get the ID values of the
            incomplete executions of a scenario with the API call `GET
            /dlqs?scenarioId={scenarioId}`.
        - name: executionDlqId
          in: path
          schema:
            type: string
          required: true
          description: >-
            The ID of the incomplete execution log. Get the ID values of the
            incomplete execution logs with the API call `GET
            /dlqs/{dlqId}/logs`.
          example: 1356b72d781649a18692a0d4d09cd977
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dlqLog:
                    type: object
                    properties:
                      imtId:
                        type: string
                      duration:
                        type: integer
                      transfer:
                        type: integer
                      operations:
                        type: integer
                      teamId:
                        type: integer
                      id:
                        type: string
                      type:
                        type: string
                      authorId:
                        type: string
                      timestamp:
                        type: string
                        format: date-time
                      status:
                        type: integer
                      instant:
                        type: boolean
                      organizationId:
                        type: integer
              example:
                dlqLog:
                  imtId: >-
                    1594117724361_dlq.00946714d6dd4a4cb091fe5435a8d197.manual.28a4794e85894c80a483777d6958160f
                  duration: 1353
                  operations: 1
                  transfer: 87
                  organizationId: 1
                  teamId: 1
                  id: 28a4794e85894c80a483777d6958160f
                  type: manual
                  authorId: null
                  instant: false
                  timestamp: '2020-07-07T10:28:44.361Z'
                  status: 3
  /enums/module-types:
    get:
      tags:
        - Enums
      summary: List module types
      description: Gets the list of module types.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  moduleTypes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
              example:
                moduleTypes:
                  - id: 2
                    name: transformer
                  - id: 3
                    name: router
                  - id: 5
                    name: listener
                  - id: 6
                    name: feeder
                  - id: 7
                    name: aggregator
                  - id: 8
                    name: directive
                  - id: 1
                    name: trigger
                  - id: 4
                    name: action
                  - id: 9
                    name: search
                  - id: 10
                    name: instant
                  - id: 11
                    name: responder
                  - id: 12
                    name: universal
  /enums/timezones:
    get:
      x-published: true
      tags:
        - Enums
      summary: List timezones
      description: Gets the list of timezones and their `timezoneId` values.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  timezones:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        code:
                          type: string
                        offset:
                          type: string
              example:
                timezones:
                  - id: 226
                    name: (GMT-11:00) Pacific/Niue
                    code: Pacific/Niue
                    offset: '-1100'
                  - id: 27
                    name: (GMT-11:00) Pacific/Pago_Pago
                    code: Pacific/Pago_Pago
                    offset: '-1100'
                  - id: 328
                    name: (GMT-10:00) America/Adak
                    code: America/Adak
                    offset: '-1000'
                  - id: 329
                    name: (GMT-10:00) Pacific/Honolulu
                    code: Pacific/Honolulu
                    offset: '-1000'
                  - id: 101
                    name: (GMT-10:00) Pacific/Rarotonga
                    code: Pacific/Rarotonga
                    offset: '-1000'
                  - id: 231
                    name: (GMT-10:00) Pacific/Tahiti
                    code: Pacific/Tahiti
                    offset: '-1000'
                  - id: 232
                    name: (GMT-09:30) Pacific/Marquesas
                    code: Pacific/Marquesas
                    offset: '-0930'
                  - id: 323
                    name: (GMT-09:00) America/Anchorage
                    code: America/Anchorage
                    offset: '-0900'
                  - id: 324
                    name: (GMT-09:00) America/Juneau
                    code: America/Juneau
                    offset: '-0900'
                  - id: 327
                    name: (GMT-09:00) America/Nome
                    code: America/Nome
                    offset: '-0900'
                  - id: 325
                    name: (GMT-09:00) America/Sitka
                    code: America/Sitka
                    offset: '-0900'
                  - id: 326
                    name: (GMT-09:00) America/Yakutat
                    code: America/Yakutat
                    offset: '-0900'
                  - id: 233
                    name: (GMT-09:00) Pacific/Gambier
                    code: Pacific/Gambier
                    offset: '-0900'
                  - id: 97
                    name: (GMT-08:00) America/Dawson
                    code: America/Dawson
                    offset: '-0800'
                  - id: 321
                    name: (GMT-08:00) America/Los_Angeles
                    code: America/Los_Angeles
                    offset: '-0800'
                  - id: 322
                    name: (GMT-08:00) America/Metlakatla
                    code: America/Metlakatla
                    offset: '-0800'
                  - id: 212
                    name: (GMT-08:00) America/Santa_Isabel
                    code: America/Santa_Isabel
                    offset: '-0800'
                  - id: 211
                    name: (GMT-08:00) America/Tijuana
                    code: America/Tijuana
                    offset: '-0800'
                  - id: 95
                    name: (GMT-08:00) America/Vancouver
                    code: America/Vancouver
                    offset: '-0800'
                  - id: 96
                    name: (GMT-08:00) America/Whitehorse
                    code: America/Whitehorse
                    offset: '-0800'
                  - id: 240
                    name: (GMT-08:00) Pacific/Pitcairn
                    code: Pacific/Pitcairn
                    offset: '-0800'
                  - id: 319
                    name: (GMT-07:00) America/Boise
                    code: America/Boise
                    offset: '-0700'
                  - id: 89
                    name: (GMT-07:00) America/Cambridge_Bay
                    code: America/Cambridge_Bay
                    offset: '-0700'
                  - id: 208
                    name: (GMT-07:00) America/Chihuahua
                    code: America/Chihuahua
                    offset: '-0700'
                  - id: 92
                    name: (GMT-07:00) America/Creston
                    code: America/Creston
                    offset: '-0700'
                  - id: 93
                    name: (GMT-07:00) America/Dawson_Creek
                    code: America/Dawson_Creek
                    offset: '-0700'
                  - id: 318
                    name: (GMT-07:00) America/Denver
                    code: America/Denver
                    offset: '-0700'
                  - id: 88
                    name: (GMT-07:00) America/Edmonton
                    code: America/Edmonton
                    offset: '-0700'
                  - id: 94
                    name: (GMT-07:00) America/Fort_Nelson
                    code: America/Fort_Nelson
                    offset: '-0700'
                  - id: 210
                    name: (GMT-07:00) America/Hermosillo
                    code: America/Hermosillo
                    offset: '-0700'
                  - id: 91
                    name: (GMT-07:00) America/Inuvik
                    code: America/Inuvik
                    offset: '-0700'
                  - id: 207
                    name: (GMT-07:00) America/Mazatlan
                    code: America/Mazatlan
                    offset: '-0700'
                  - id: 209
                    name: (GMT-07:00) America/Ojinaga
                    code: America/Ojinaga
                    offset: '-0700'
                  - id: 320
                    name: (GMT-07:00) America/Phoenix
                    code: America/Phoenix
                    offset: '-0700'
                  - id: 90
                    name: (GMT-07:00) America/Yellowknife
                    code: America/Yellowknife
                    offset: '-0700'
                  - id: 213
                    name: (GMT-06:00) America/Bahia_Banderas
                    code: America/Bahia_Banderas
                    offset: '-0600'
                  - id: 69
                    name: (GMT-06:00) America/Belize
                    code: America/Belize
                    offset: '-0600'
                  - id: 203
                    name: (GMT-06:00) America/Cancun
                    code: America/Cancun
                    offset: '-0600'
                  - id: 311
                    name: (GMT-06:00) America/Chicago
                    code: America/Chicago
                    offset: '-0600'
                  - id: 107
                    name: (GMT-06:00) America/Costa_Rica
                    code: America/Costa_Rica
                    offset: '-0600'
                  - id: 281
                    name: (GMT-06:00) America/El_Salvador
                    code: America/El_Salvador
                    offset: '-0600'
                  - id: 145
                    name: (GMT-06:00) America/Guatemala
                    code: America/Guatemala
                    offset: '-0600'
                  - id: 313
                    name: (GMT-06:00) America/Indiana/Knox
                    code: America/Indiana/Knox
                    offset: '-0600'
                  - id: 312
                    name: (GMT-06:00) America/Indiana/Tell_City
                    code: America/Indiana/Tell_City
                    offset: '-0600'
                  - id: 221
                    name: (GMT-06:00) America/Managua
                    code: America/Managua
                    offset: '-0600'
                  - id: 206
                    name: (GMT-06:00) America/Matamoros
                    code: America/Matamoros
                    offset: '-0600'
                  - id: 314
                    name: (GMT-06:00) America/Menominee
                    code: America/Menominee
                    offset: '-0600'
                  - id: 204
                    name: (GMT-06:00) America/Merida
                    code: America/Merida
                    offset: '-0600'
                  - id: 202
                    name: (GMT-06:00) America/Mexico_City
                    code: America/Mexico_City
                    offset: '-0600'
                  - id: 205
                    name: (GMT-06:00) America/Monterrey
                    code: America/Monterrey
                    offset: '-0600'
                  - id: 317
                    name: (GMT-06:00) America/North_Dakota/Beulah
                    code: America/North_Dakota/Beulah
                    offset: '-0600'
                  - id: 315
                    name: (GMT-06:00) America/North_Dakota/Center
                    code: America/North_Dakota/Center
                    offset: '-0600'
                  - id: 316
                    name: (GMT-06:00) America/North_Dakota/New_Salem
                    code: America/North_Dakota/New_Salem
                    offset: '-0600'
                  - id: 85
                    name: (GMT-06:00) America/Rainy_River
                    code: America/Rainy_River
                    offset: '-0600'
                  - id: 83
                    name: (GMT-06:00) America/Rankin_Inlet
                    code: America/Rankin_Inlet
                    offset: '-0600'
                  - id: 86
                    name: (GMT-06:00) America/Regina
                    code: America/Regina
                    offset: '-0600'
                  - id: 81
                    name: (GMT-06:00) America/Resolute
                    code: America/Resolute
                    offset: '-0600'
                  - id: 87
                    name: (GMT-06:00) America/Swift_Current
                    code: America/Swift_Current
                    offset: '-0600'
                  - id: 150
                    name: (GMT-06:00) America/Tegucigalpa
                    code: America/Tegucigalpa
                    offset: '-0600'
                  - id: 84
                    name: (GMT-06:00) America/Winnipeg
                    code: America/Winnipeg
                    offset: '-0600'
                  - id: 103
                    name: (GMT-06:00) Pacific/Easter
                    code: Pacific/Easter
                    offset: '-0600'
                  - id: 119
                    name: (GMT-06:00) Pacific/Galapagos
                    code: Pacific/Galapagos
                    offset: '-0600'
                  - id: 82
                    name: (GMT-05:00) America/Atikokan
                    code: America/Atikokan
                    offset: '-0500'
                  - id: 106
                    name: (GMT-05:00) America/Bogota
                    code: America/Bogota
                    offset: '-0500'
                  - id: 175
                    name: (GMT-05:00) America/Cayman
                    code: America/Cayman
                    offset: '-0500'
                  - id: 302
                    name: (GMT-05:00) America/Detroit
                    code: America/Detroit
                    offset: '-0500'
                  - id: 64
                    name: (GMT-05:00) America/Eirunepe
                    code: America/Eirunepe
                    offset: '-0500'
                  - id: 283
                    name: (GMT-05:00) America/Grand_Turk
                    code: America/Grand_Turk
                    offset: '-0500'
                  - id: 118
                    name: (GMT-05:00) America/Guayaquil
                    code: America/Guayaquil
                    offset: '-0500'
                  - id: 108
                    name: (GMT-05:00) America/Havana
                    code: America/Havana
                    offset: '-0500'
                  - id: 305
                    name: (GMT-05:00) America/Indiana/Indianapolis
                    code: America/Indiana/Indianapolis
                    offset: '-0500'
                  - id: 308
                    name: (GMT-05:00) America/Indiana/Marengo
                    code: America/Indiana/Marengo
                    offset: '-0500'
                  - id: 309
                    name: (GMT-05:00) America/Indiana/Petersburg
                    code: America/Indiana/Petersburg
                    offset: '-0500'
                  - id: 310
                    name: (GMT-05:00) America/Indiana/Vevay
                    code: America/Indiana/Vevay
                    offset: '-0500'
                  - id: 306
                    name: (GMT-05:00) America/Indiana/Vincennes
                    code: America/Indiana/Vincennes
                    offset: '-0500'
                  - id: 307
                    name: (GMT-05:00) America/Indiana/Winamac
                    code: America/Indiana/Winamac
                    offset: '-0500'
                  - id: 79
                    name: (GMT-05:00) America/Iqaluit
                    code: America/Iqaluit
                    offset: '-0500'
                  - id: 165
                    name: (GMT-05:00) America/Jamaica
                    code: America/Jamaica
                    offset: '-0500'
                  - id: 303
                    name: (GMT-05:00) America/Kentucky/Louisville
                    code: America/Kentucky/Louisville
                    offset: '-0500'
                  - id: 304
                    name: (GMT-05:00) America/Kentucky/Monticello
                    code: America/Kentucky/Monticello
                    offset: '-0500'
                  - id: 230
                    name: (GMT-05:00) America/Lima
                    code: America/Lima
                    offset: '-0500'
                  - id: 66
                    name: (GMT-05:00) America/Nassau
                    code: America/Nassau
                    offset: '-0500'
                  - id: 301
                    name: (GMT-05:00) America/New_York
                    code: America/New_York
                    offset: '-0500'
                  - id: 77
                    name: (GMT-05:00) America/Nipigon
                    code: America/Nipigon
                    offset: '-0500'
                  - id: 229
                    name: (GMT-05:00) America/Panama
                    code: America/Panama
                    offset: '-0500'
                  - id: 80
                    name: (GMT-05:00) America/Pangnirtung
                    code: America/Pangnirtung
                    offset: '-0500'
                  - id: 151
                    name: (GMT-05:00) America/Port-au-Prince
                    code: America/Port-au-Prince
                    offset: '-0500'
                  - id: 65
                    name: (GMT-05:00) America/Rio_Branco
                    code: America/Rio_Branco
                    offset: '-0500'
                  - id: 78
                    name: (GMT-05:00) America/Thunder_Bay
                    code: America/Thunder_Bay
                    offset: '-0500'
                  - id: 76
                    name: (GMT-05:00) America/Toronto
                    code: America/Toronto
                    offset: '-0500'
                  - id: 333
                    name: (GMT-04:30) America/Caracas
                    code: America/Caracas
                    offset: '-0430'
                  - id: 248
                    name: (GMT-04:00) America/Asuncion
                    code: America/Asuncion
                    offset: '-0400'
                  - id: 43
                    name: (GMT-04:00) America/Barbados
                    code: America/Barbados
                    offset: '-0400'
                  - id: 75
                    name: (GMT-04:00) America/Blanc-Sablon
                    code: America/Blanc-Sablon
                    offset: '-0400'
                  - id: 62
                    name: (GMT-04:00) America/Boa_Vista
                    code: America/Boa_Vista
                    offset: '-0400'
                  - id: 58
                    name: (GMT-04:00) America/Campo_Grande
                    code: America/Campo_Grande
                    offset: '-0400'
                  - id: 59
                    name: (GMT-04:00) America/Cuiaba
                    code: America/Cuiaba
                    offset: '-0400'
                  - id: 110
                    name: (GMT-04:00) America/Curacao
                    code: America/Curacao
                    offset: '-0400'
                  - id: 72
                    name: (GMT-04:00) America/Glace_Bay
                    code: America/Glace_Bay
                    offset: '-0400'
                  - id: 74
                    name: (GMT-04:00) America/Goose_Bay
                    code: America/Goose_Bay
                    offset: '-0400'
                  - id: 148
                    name: (GMT-04:00) America/Guyana
                    code: America/Guyana
                    offset: '-0400'
                  - id: 71
                    name: (GMT-04:00) America/Halifax
                    code: America/Halifax
                    offset: '-0400'
                  - id: 49
                    name: (GMT-04:00) America/La_Paz
                    code: America/La_Paz
                    offset: '-0400'
                  - id: 63
                    name: (GMT-04:00) America/Manaus
                    code: America/Manaus
                    offset: '-0400'
                  - id: 198
                    name: (GMT-04:00) America/Martinique
                    code: America/Martinique
                    offset: '-0400'
                  - id: 73
                    name: (GMT-04:00) America/Moncton
                    code: America/Moncton
                    offset: '-0400'
                  - id: 294
                    name: (GMT-04:00) America/Port_of_Spain
                    code: America/Port_of_Spain
                    offset: '-0400'
                  - id: 61
                    name: (GMT-04:00) America/Porto_Velho
                    code: America/Porto_Velho
                    offset: '-0400'
                  - id: 241
                    name: (GMT-04:00) America/Puerto_Rico
                    code: America/Puerto_Rico
                    offset: '-0400'
                  - id: 116
                    name: (GMT-04:00) America/Santo_Domingo
                    code: America/Santo_Domingo
                    offset: '-0400'
                  - id: 142
                    name: (GMT-04:00) America/Thule
                    code: America/Thule
                    offset: '-0400'
                  - id: 7
                    name: (GMT-04:00) Antarctica/Palmer
                    code: Antarctica/Palmer
                    offset: '-0400'
                  - id: 47
                    name: (GMT-04:00) Atlantic/Bermuda
                    code: Atlantic/Bermuda
                    offset: '-0400'
                  - id: 70
                    name: (GMT-03:30) America/St_Johns
                    code: America/St_Johns
                    offset: '-0330'
                  - id: 54
                    name: (GMT-03:00) America/Araguaina
                    code: America/Araguaina
                    offset: '-0300'
                  - id: 15
                    name: (GMT-03:00) America/Argentina/Buenos_Aires
                    code: America/Argentina/Buenos_Aires
                    offset: '-0300'
                  - id: 20
                    name: (GMT-03:00) America/Argentina/Catamarca
                    code: America/Argentina/Catamarca
                    offset: '-0300'
                  - id: 16
                    name: (GMT-03:00) America/Argentina/Cordoba
                    code: America/Argentina/Cordoba
                    offset: '-0300'
                  - id: 18
                    name: (GMT-03:00) America/Argentina/Jujuy
                    code: America/Argentina/Jujuy
                    offset: '-0300'
                  - id: 21
                    name: (GMT-03:00) America/Argentina/La_Rioja
                    code: America/Argentina/La_Rioja
                    offset: '-0300'
                  - id: 23
                    name: (GMT-03:00) America/Argentina/Mendoza
                    code: America/Argentina/Mendoza
                    offset: '-0300'
                  - id: 25
                    name: (GMT-03:00) America/Argentina/Rio_Gallegos
                    code: America/Argentina/Rio_Gallegos
                    offset: '-0300'
                  - id: 17
                    name: (GMT-03:00) America/Argentina/Salta
                    code: America/Argentina/Salta
                    offset: '-0300'
                  - id: 22
                    name: (GMT-03:00) America/Argentina/San_Juan
                    code: America/Argentina/San_Juan
                    offset: '-0300'
                  - id: 24
                    name: (GMT-03:00) America/Argentina/San_Luis
                    code: America/Argentina/San_Luis
                    offset: '-0300'
                  - id: 19
                    name: (GMT-03:00) America/Argentina/Tucuman
                    code: America/Argentina/Tucuman
                    offset: '-0300'
                  - id: 26
                    name: (GMT-03:00) America/Argentina/Ushuaia
                    code: America/Argentina/Ushuaia
                    offset: '-0300'
                  - id: 56
                    name: (GMT-03:00) America/Bahia
                    code: America/Bahia
                    offset: '-0300'
                  - id: 51
                    name: (GMT-03:00) America/Belem
                    code: America/Belem
                    offset: '-0300'
                  - id: 136
                    name: (GMT-03:00) America/Cayenne
                    code: America/Cayenne
                    offset: '-0300'
                  - id: 52
                    name: (GMT-03:00) America/Fortaleza
                    code: America/Fortaleza
                    offset: '-0300'
                  - id: 139
                    name: (GMT-03:00) America/Godthab
                    code: America/Godthab
                    offset: '-0300'
                  - id: 55
                    name: (GMT-03:00) America/Maceio
                    code: America/Maceio
                    offset: '-0300'
                  - id: 239
                    name: (GMT-03:00) America/Miquelon
                    code: America/Miquelon
                    offset: '-0300'
                  - id: 330
                    name: (GMT-03:00) America/Montevideo
                    code: America/Montevideo
                    offset: '-0300'
                  - id: 280
                    name: (GMT-03:00) America/Paramaribo
                    code: America/Paramaribo
                    offset: '-0300'
                  - id: 53
                    name: (GMT-03:00) America/Recife
                    code: America/Recife
                    offset: '-0300'
                  - id: 60
                    name: (GMT-03:00) America/Santarem
                    code: America/Santarem
                    offset: '-0300'
                  - id: 102
                    name: (GMT-03:00) America/Santiago
                    code: America/Santiago
                    offset: '-0300'
                  - id: 57
                    name: (GMT-03:00) America/Sao_Paulo
                    code: America/Sao_Paulo
                    offset: '-0300'
                  - id: 6
                    name: (GMT-03:00) Antarctica/Rothera
                    code: Antarctica/Rothera
                    offset: '-0300'
                  - id: 128
                    name: (GMT-03:00) Atlantic/Stanley
                    code: Atlantic/Stanley
                    offset: '-0300'
                  - id: 50
                    name: (GMT-02:00) America/Noronha
                    code: America/Noronha
                    offset: '-0200'
                  - id: 144
                    name: (GMT-02:00) Atlantic/South_Georgia
                    code: Atlantic/South_Georgia
                    offset: '-0200'
                  - id: 141
                    name: (GMT-01:00) America/Scoresbysund
                    code: America/Scoresbysund
                    offset: '-0100'
                  - id: 246
                    name: (GMT-01:00) Atlantic/Azores
                    code: Atlantic/Azores
                    offset: '-0100'
                  - id: 109
                    name: (GMT-01:00) Atlantic/Cape_Verde
                    code: Atlantic/Cape_Verde
                    offset: '-0100'
                  - id: 100
                    name: (GMT+00:00) Africa/Abidjan
                    code: Africa/Abidjan
                    offset: '+0000'
                  - id: 137
                    name: (GMT+00:00) Africa/Accra
                    code: Africa/Accra
                    offset: '+0000'
                  - id: 147
                    name: (GMT+00:00) Africa/Bissau
                    code: Africa/Bissau
                    offset: '+0000'
                  - id: 188
                    name: (GMT+00:00) Africa/Casablanca
                    code: Africa/Casablanca
                    offset: '+0000'
                  - id: 122
                    name: (GMT+00:00) Africa/El_Aaiun
                    code: Africa/El_Aaiun
                    offset: '+0000'
                  - id: 183
                    name: (GMT+00:00) Africa/Monrovia
                    code: Africa/Monrovia
                    offset: '+0000'
                  - id: 140
                    name: (GMT+00:00) America/Danmarkshavn
                    code: America/Danmarkshavn
                    offset: '+0000'
                  - id: 14
                    name: (GMT+00:00) Antarctica/Troll
                    code: Antarctica/Troll
                    offset: '+0000'
                  - id: 125
                    name: (GMT+00:00) Atlantic/Canary
                    code: Atlantic/Canary
                    offset: '+0000'
                  - id: 132
                    name: (GMT+00:00) Atlantic/Faroe
                    code: Atlantic/Faroe
                    offset: '+0000'
                  - id: 245
                    name: (GMT+00:00) Atlantic/Madeira
                    code: Atlantic/Madeira
                    offset: '+0000'
                  - id: 163
                    name: (GMT+00:00) Atlantic/Reykjavik
                    code: Atlantic/Reykjavik
                    offset: '+0000'
                  - id: 157
                    name: (GMT+00:00) Europe/Dublin
                    code: Europe/Dublin
                    offset: '+0000'
                  - id: 244
                    name: (GMT+00:00) Europe/Lisbon
                    code: Europe/Lisbon
                    offset: '+0000'
                  - id: 134
                    name: (GMT+00:00) Europe/London
                    code: Europe/London
                    offset: '+0000'
                  - id: 117
                    name: (GMT+01:00) Africa/Algiers
                    code: Africa/Algiers
                    offset: '+0100'
                  - id: 124
                    name: (GMT+01:00) Africa/Ceuta
                    code: Africa/Ceuta
                    offset: '+0100'
                  - id: 220
                    name: (GMT+01:00) Africa/Lagos
                    code: Africa/Lagos
                    offset: '+0100'
                  - id: 284
                    name: (GMT+01:00) Africa/Ndjamena
                    code: Africa/Ndjamena
                    offset: '+0100'
                  - id: 291
                    name: (GMT+01:00) Africa/Tunis
                    code: Africa/Tunis
                    offset: '+0100'
                  - id: 217
                    name: (GMT+01:00) Africa/Windhoek
                    code: Africa/Windhoek
                    offset: '+0100'
                  - id: 222
                    name: (GMT+01:00) Europe/Amsterdam
                    code: Europe/Amsterdam
                    offset: '+0100'
                  - id: 1
                    name: (GMT+01:00) Europe/Andorra
                    code: Europe/Andorra
                    offset: '+0100'
                  - id: 252
                    name: (GMT+01:00) Europe/Belgrade
                    code: Europe/Belgrade
                    offset: '+0100'
                  - id: 114
                    name: (GMT+01:00) Europe/Berlin
                    code: Europe/Berlin
                    offset: '+0100'
                  - id: 45
                    name: (GMT+01:00) Europe/Brussels
                    code: Europe/Brussels
                    offset: '+0100'
                  - id: 152
                    name: (GMT+01:00) Europe/Budapest
                    code: Europe/Budapest
                    offset: '+0100'
                  - id: 115
                    name: (GMT+01:00) Europe/Copenhagen
                    code: Europe/Copenhagen
                    offset: '+0100'
                  - id: 138
                    name: (GMT+01:00) Europe/Gibraltar
                    code: Europe/Gibraltar
                    offset: '+0100'
                  - id: 185
                    name: (GMT+01:00) Europe/Luxembourg
                    code: Europe/Luxembourg
                    offset: '+0100'
                  - id: 123
                    name: (GMT+01:00) Europe/Madrid
                    code: Europe/Madrid
                    offset: '+0100'
                  - id: 199
                    name: (GMT+01:00) Europe/Malta
                    code: Europe/Malta
                    offset: '+0100'
                  - id: 189
                    name: (GMT+01:00) Europe/Monaco
                    code: Europe/Monaco
                    offset: '+0100'
                  - id: 223
                    name: (GMT+01:00) Europe/Oslo
                    code: Europe/Oslo
                    offset: '+0100'
                  - id: 133
                    name: (GMT+01:00) Europe/Paris
                    code: Europe/Paris
                    offset: '+0100'
                  - id: 113
                    name: (GMT+01:00) Europe/Prague
                    code: Europe/Prague
                    offset: '+0100'
                  - id: 164
                    name: (GMT+01:00) Europe/Rome
                    code: Europe/Rome
                    offset: '+0100'
                  - id: 278
                    name: (GMT+01:00) Europe/Stockholm
                    code: Europe/Stockholm
                    offset: '+0100'
                  - id: 4
                    name: (GMT+01:00) Europe/Tirane
                    code: Europe/Tirane
                    offset: '+0100'
                  - id: 28
                    name: (GMT+01:00) Europe/Vienna
                    code: Europe/Vienna
                    offset: '+0100'
                  - id: 238
                    name: (GMT+01:00) Europe/Warsaw
                    code: Europe/Warsaw
                    offset: '+0100'
                  - id: 99
                    name: (GMT+01:00) Europe/Zurich
                    code: Europe/Zurich
                    offset: '+0100'
                  - id: 121
                    name: (GMT+02:00) Africa/Cairo
                    code: Africa/Cairo
                    offset: '+0200'
                  - id: 338
                    name: (GMT+02:00) Africa/Johannesburg
                    code: Africa/Johannesburg
                    offset: '+0200'
                  - id: 216
                    name: (GMT+02:00) Africa/Maputo
                    code: Africa/Maputo
                    offset: '+0200'
                  - id: 187
                    name: (GMT+02:00) Africa/Tripoli
                    code: Africa/Tripoli
                    offset: '+0200'
                  - id: 166
                    name: (GMT+02:00) Asia/Amman
                    code: Asia/Amman
                    offset: '+0200'
                  - id: 181
                    name: (GMT+02:00) Asia/Beirut
                    code: Asia/Beirut
                    offset: '+0200'
                  - id: 282
                    name: (GMT+02:00) Asia/Damascus
                    code: Asia/Damascus
                    offset: '+0200'
                  - id: 242
                    name: (GMT+02:00) Asia/Gaza
                    code: Asia/Gaza
                    offset: '+0200'
                  - id: 243
                    name: (GMT+02:00) Asia/Hebron
                    code: Asia/Hebron
                    offset: '+0200'
                  - id: 158
                    name: (GMT+02:00) Asia/Jerusalem
                    code: Asia/Jerusalem
                    offset: '+0200'
                  - id: 112
                    name: (GMT+02:00) Asia/Nicosia
                    code: Asia/Nicosia
                    offset: '+0200'
                  - id: 143
                    name: (GMT+02:00) Europe/Athens
                    code: Europe/Athens
                    offset: '+0200'
                  - id: 251
                    name: (GMT+02:00) Europe/Bucharest
                    code: Europe/Bucharest
                    offset: '+0200'
                  - id: 190
                    name: (GMT+02:00) Europe/Chisinau
                    code: Europe/Chisinau
                    offset: '+0200'
                  - id: 126
                    name: (GMT+02:00) Europe/Helsinki
                    code: Europe/Helsinki
                    offset: '+0200'
                  - id: 293
                    name: (GMT+02:00) Europe/Istanbul
                    code: Europe/Istanbul
                    offset: '+0200'
                  - id: 253
                    name: (GMT+02:00) Europe/Kaliningrad
                    code: Europe/Kaliningrad
                    offset: '+0200'
                  - id: 297
                    name: (GMT+02:00) Europe/Kiev
                    code: Europe/Kiev
                    offset: '+0200'
                  - id: 186
                    name: (GMT+02:00) Europe/Riga
                    code: Europe/Riga
                    offset: '+0200'
                  - id: 46
                    name: (GMT+02:00) Europe/Sofia
                    code: Europe/Sofia
                    offset: '+0200'
                  - id: 120
                    name: (GMT+02:00) Europe/Tallinn
                    code: Europe/Tallinn
                    offset: '+0200'
                  - id: 298
                    name: (GMT+02:00) Europe/Uzhgorod
                    code: Europe/Uzhgorod
                    offset: '+0200'
                  - id: 184
                    name: (GMT+02:00) Europe/Vilnius
                    code: Europe/Vilnius
                    offset: '+0200'
                  - id: 299
                    name: (GMT+02:00) Europe/Zaporozhye
                    code: Europe/Zaporozhye
                    offset: '+0200'
                  - id: 277
                    name: (GMT+03:00) Africa/Khartoum
                    code: Africa/Khartoum
                    offset: '+0300'
                  - id: 168
                    name: (GMT+03:00) Africa/Nairobi
                    code: Africa/Nairobi
                    offset: '+0300'
                  - id: 13
                    name: (GMT+03:00) Antarctica/Syowa
                    code: Antarctica/Syowa
                    offset: '+0300'
                  - id: 161
                    name: (GMT+03:00) Asia/Baghdad
                    code: Asia/Baghdad
                    offset: '+0300'
                  - id: 249
                    name: (GMT+03:00) Asia/Qatar
                    code: Asia/Qatar
                    offset: '+0300'
                  - id: 274
                    name: (GMT+03:00) Asia/Riyadh
                    code: Asia/Riyadh
                    offset: '+0300'
                  - id: 68
                    name: (GMT+03:00) Europe/Minsk
                    code: Europe/Minsk
                    offset: '+0300'
                  - id: 254
                    name: (GMT+03:00) Europe/Moscow
                    code: Europe/Moscow
                    offset: '+0300'
                  - id: 255
                    name: (GMT+03:00) Europe/Simferopol
                    code: Europe/Simferopol
                    offset: '+0300'
                  - id: 256
                    name: (GMT+03:00) Europe/Volgograd
                    code: Europe/Volgograd
                    offset: '+0300'
                  - id: 162
                    name: (GMT+03:30) Asia/Tehran
                    code: Asia/Tehran
                    offset: '+0330'
                  - id: 42
                    name: (GMT+04:00) Asia/Baku
                    code: Asia/Baku
                    offset: '+0400'
                  - id: 2
                    name: (GMT+04:00) Asia/Dubai
                    code: Asia/Dubai
                    offset: '+0400'
                  - id: 135
                    name: (GMT+04:00) Asia/Tbilisi
                    code: Asia/Tbilisi
                    offset: '+0400'
                  - id: 5
                    name: (GMT+04:00) Asia/Yerevan
                    code: Asia/Yerevan
                    offset: '+0400'
                  - id: 257
                    name: (GMT+04:00) Europe/Samara
                    code: Europe/Samara
                    offset: '+0400'
                  - id: 276
                    name: (GMT+04:00) Indian/Mahe
                    code: Indian/Mahe
                    offset: '+0400'
                  - id: 200
                    name: (GMT+04:00) Indian/Mauritius
                    code: Indian/Mauritius
                    offset: '+0400'
                  - id: 250
                    name: (GMT+04:00) Indian/Reunion
                    code: Indian/Reunion
                    offset: '+0400'
                  - id: 3
                    name: (GMT+04:30) Asia/Kabul
                    code: Asia/Kabul
                    offset: '+0430'
                  - id: 9
                    name: (GMT+05:00) Antarctica/Davis
                    code: Antarctica/Davis
                    offset: '+0500'
                  - id: 8
                    name: (GMT+05:00) Antarctica/Mawson
                    code: Antarctica/Mawson
                    offset: '+0500'
                  - id: 179
                    name: (GMT+05:00) Asia/Aqtau
                    code: Asia/Aqtau
                    offset: '+0500'
                  - id: 178
                    name: (GMT+05:00) Asia/Aqtobe
                    code: Asia/Aqtobe
                    offset: '+0500'
                  - id: 290
                    name: (GMT+05:00) Asia/Ashgabat
                    code: Asia/Ashgabat
                    offset: '+0500'
                  - id: 287
                    name: (GMT+05:00) Asia/Dushanbe
                    code: Asia/Dushanbe
                    offset: '+0500'
                  - id: 237
                    name: (GMT+05:00) Asia/Karachi
                    code: Asia/Karachi
                    offset: '+0500'
                  - id: 180
                    name: (GMT+05:00) Asia/Oral
                    code: Asia/Oral
                    offset: '+0500'
                  - id: 331
                    name: (GMT+05:00) Asia/Samarkand
                    code: Asia/Samarkand
                    offset: '+0500'
                  - id: 332
                    name: (GMT+05:00) Asia/Tashkent
                    code: Asia/Tashkent
                    offset: '+0500'
                  - id: 258
                    name: (GMT+05:00) Asia/Yekaterinburg
                    code: Asia/Yekaterinburg
                    offset: '+0500'
                  - id: 285
                    name: (GMT+05:00) Indian/Kerguelen
                    code: Indian/Kerguelen
                    offset: '+0500'
                  - id: 201
                    name: (GMT+05:00) Indian/Maldives
                    code: Indian/Maldives
                    offset: '+0500'
                  - id: 182
                    name: (GMT+05:30) Asia/Colombo
                    code: Asia/Colombo
                    offset: '+0530'
                  - id: 159
                    name: (GMT+05:30) Asia/Kolkata
                    code: Asia/Kolkata
                    offset: '+0530'
                  - id: 224
                    name: (GMT+05:45) Asia/Kathmandu
                    code: Asia/Kathmandu
                    offset: '+0545'
                  - id: 11
                    name: (GMT+06:00) Antarctica/Vostok
                    code: Antarctica/Vostok
                    offset: '+0600'
                  - id: 176
                    name: (GMT+06:00) Asia/Almaty
                    code: Asia/Almaty
                    offset: '+0600'
                  - id: 169
                    name: (GMT+06:00) Asia/Bishkek
                    code: Asia/Bishkek
                    offset: '+0600'
                  - id: 44
                    name: (GMT+06:00) Asia/Dhaka
                    code: Asia/Dhaka
                    offset: '+0600'
                  - id: 260
                    name: (GMT+06:00) Asia/Novosibirsk
                    code: Asia/Novosibirsk
                    offset: '+0600'
                  - id: 259
                    name: (GMT+06:00) Asia/Omsk
                    code: Asia/Omsk
                    offset: '+0600'
                  - id: 177
                    name: (GMT+06:00) Asia/Qyzylorda
                    code: Asia/Qyzylorda
                    offset: '+0600'
                  - id: 67
                    name: (GMT+06:00) Asia/Thimphu
                    code: Asia/Thimphu
                    offset: '+0600'
                  - id: 160
                    name: (GMT+06:00) Indian/Chagos
                    code: Indian/Chagos
                    offset: '+0600'
                  - id: 193
                    name: (GMT+06:30) Asia/Rangoon
                    code: Asia/Rangoon
                    offset: '+0630'
                  - id: 98
                    name: (GMT+06:30) Indian/Cocos
                    code: Indian/Cocos
                    offset: '+0630'
                  - id: 286
                    name: (GMT+07:00) Asia/Bangkok
                    code: Asia/Bangkok
                    offset: '+0700'
                  - id: 334
                    name: (GMT+07:00) Asia/Ho_Chi_Minh
                    code: Asia/Ho_Chi_Minh
                    offset: '+0700'
                  - id: 195
                    name: (GMT+07:00) Asia/Hovd
                    code: Asia/Hovd
                    offset: '+0700'
                  - id: 153
                    name: (GMT+07:00) Asia/Jakarta
                    code: Asia/Jakarta
                    offset: '+0700'
                  - id: 262
                    name: (GMT+07:00) Asia/Krasnoyarsk
                    code: Asia/Krasnoyarsk
                    offset: '+0700'
                  - id: 261
                    name: (GMT+07:00) Asia/Novokuznetsk
                    code: Asia/Novokuznetsk
                    offset: '+0700'
                  - id: 154
                    name: (GMT+07:00) Asia/Pontianak
                    code: Asia/Pontianak
                    offset: '+0700'
                  - id: 111
                    name: (GMT+07:00) Indian/Christmas
                    code: Indian/Christmas
                    offset: '+0700'
                  - id: 48
                    name: (GMT+08:00) Asia/Brunei
                    code: Asia/Brunei
                    offset: 800
                  - id: 264
                    name: (GMT+08:00) Asia/Chita
                    code: Asia/Chita
                    offset: 800
                  - id: 196
                    name: (GMT+08:00) Asia/Choibalsan
                    code: Asia/Choibalsan
                    offset: 800
                  - id: 149
                    name: (GMT+08:00) Asia/Hong_Kong
                    code: Asia/Hong_Kong
                    offset: 800
                  - id: 263
                    name: (GMT+08:00) Asia/Irkutsk
                    code: Asia/Irkutsk
                    offset: 800
                  - id: 214
                    name: (GMT+08:00) Asia/Kuala_Lumpur
                    code: Asia/Kuala_Lumpur
                    offset: 800
                  - id: 215
                    name: (GMT+08:00) Asia/Kuching
                    code: Asia/Kuching
                    offset: 800
                  - id: 197
                    name: (GMT+08:00) Asia/Macau
                    code: Asia/Macau
                    offset: 800
                  - id: 155
                    name: (GMT+08:00) Asia/Makassar
                    code: Asia/Makassar
                    offset: 800
                  - id: 236
                    name: (GMT+08:00) Asia/Manila
                    code: Asia/Manila
                    offset: 800
                  - id: 104
                    name: (GMT+08:00) Asia/Shanghai
                    code: Asia/Shanghai
                    offset: 800
                  - id: 279
                    name: (GMT+08:00) Asia/Singapore
                    code: Asia/Singapore
                    offset: 800
                  - id: 296
                    name: (GMT+08:00) Asia/Taipei
                    code: Asia/Taipei
                    offset: 800
                  - id: 194
                    name: (GMT+08:00) Asia/Ulaanbaatar
                    code: Asia/Ulaanbaatar
                    offset: 800
                  - id: 105
                    name: (GMT+08:00) Asia/Urumqi
                    code: Asia/Urumqi
                    offset: 800
                  - id: 40
                    name: (GMT+08:00) Australia/Perth
                    code: Australia/Perth
                    offset: 800
                  - id: 173
                    name: (GMT+08:30) Asia/Pyongyang
                    code: Asia/Pyongyang
                    offset: 830
                  - id: 41
                    name: (GMT+08:45) Australia/Eucla
                    code: Australia/Eucla
                    offset: 845
                  - id: 289
                    name: (GMT+09:00) Asia/Dili
                    code: Asia/Dili
                    offset: 900
                  - id: 156
                    name: (GMT+09:00) Asia/Jayapura
                    code: Asia/Jayapura
                    offset: 900
                  - id: 266
                    name: (GMT+09:00) Asia/Khandyga
                    code: Asia/Khandyga
                    offset: 900
                  - id: 174
                    name: (GMT+09:00) Asia/Seoul
                    code: Asia/Seoul
                    offset: 900
                  - id: 167
                    name: (GMT+09:00) Asia/Tokyo
                    code: Asia/Tokyo
                    offset: 900
                  - id: 265
                    name: (GMT+09:00) Asia/Yakutsk
                    code: Asia/Yakutsk
                    offset: 900
                  - id: 247
                    name: (GMT+09:00) Pacific/Palau
                    code: Pacific/Palau
                    offset: 900
                  - id: 38
                    name: (GMT+09:30) Australia/Adelaide
                    code: Australia/Adelaide
                    offset: 930
                  - id: 35
                    name: (GMT+09:30) Australia/Broken_Hill
                    code: Australia/Broken_Hill
                    offset: 930
                  - id: 39
                    name: (GMT+09:30) Australia/Darwin
                    code: Australia/Darwin
                    offset: 930
                  - id: 12
                    name: (GMT+10:00) Antarctica/DumontDUrville
                    code: Antarctica/DumontDUrville
                    offset: '+1000'
                  - id: 270
                    name: (GMT+10:00) Asia/Magadan
                    code: Asia/Magadan
                    offset: '+1000'
                  - id: 269
                    name: (GMT+10:00) Asia/Ust-Nera
                    code: Asia/Ust-Nera
                    offset: '+1000'
                  - id: 267
                    name: (GMT+10:00) Asia/Vladivostok
                    code: Asia/Vladivostok
                    offset: '+1000'
                  - id: 36
                    name: (GMT+10:00) Australia/Brisbane
                    code: Australia/Brisbane
                    offset: '+1000'
                  - id: 32
                    name: (GMT+10:00) Australia/Currie
                    code: Australia/Currie
                    offset: '+1000'
                  - id: 31
                    name: (GMT+10:00) Australia/Hobart
                    code: Australia/Hobart
                    offset: '+1000'
                  - id: 37
                    name: (GMT+10:00) Australia/Lindeman
                    code: Australia/Lindeman
                    offset: '+1000'
                  - id: 33
                    name: (GMT+10:00) Australia/Melbourne
                    code: Australia/Melbourne
                    offset: '+1000'
                  - id: 34
                    name: (GMT+10:00) Australia/Sydney
                    code: Australia/Sydney
                    offset: '+1000'
                  - id: 129
                    name: (GMT+10:00) Pacific/Chuuk
                    code: Pacific/Chuuk
                    offset: '+1000'
                  - id: 146
                    name: (GMT+10:00) Pacific/Guam
                    code: Pacific/Guam
                    offset: '+1000'
                  - id: 234
                    name: (GMT+10:00) Pacific/Port_Moresby
                    code: Pacific/Port_Moresby
                    offset: '+1000'
                  - id: 29
                    name: (GMT+10:30) Australia/Lord_Howe
                    code: Australia/Lord_Howe
                    offset: '+1030'
                  - id: 10
                    name: (GMT+11:00) Antarctica/Casey
                    code: Antarctica/Casey
                    offset: '+1100'
                  - id: 30
                    name: (GMT+11:00) Antarctica/Macquarie
                    code: Antarctica/Macquarie
                    offset: '+1100'
                  - id: 268
                    name: (GMT+11:00) Asia/Sakhalin
                    code: Asia/Sakhalin
                    offset: '+1100'
                  - id: 271
                    name: (GMT+11:00) Asia/Srednekolymsk
                    code: Asia/Srednekolymsk
                    offset: '+1100'
                  - id: 235
                    name: (GMT+11:00) Pacific/Bougainville
                    code: Pacific/Bougainville
                    offset: '+1100'
                  - id: 335
                    name: (GMT+11:00) Pacific/Efate
                    code: Pacific/Efate
                    offset: '+1100'
                  - id: 275
                    name: (GMT+11:00) Pacific/Guadalcanal
                    code: Pacific/Guadalcanal
                    offset: '+1100'
                  - id: 131
                    name: (GMT+11:00) Pacific/Kosrae
                    code: Pacific/Kosrae
                    offset: '+1100'
                  - id: 218
                    name: (GMT+11:00) Pacific/Noumea
                    code: Pacific/Noumea
                    offset: '+1100'
                  - id: 130
                    name: (GMT+11:00) Pacific/Pohnpei
                    code: Pacific/Pohnpei
                    offset: '+1100'
                  - id: 219
                    name: (GMT+11:30) Pacific/Norfolk
                    code: Pacific/Norfolk
                    offset: '+1130'
                  - id: 273
                    name: (GMT+12:00) Asia/Anadyr
                    code: Asia/Anadyr
                    offset: '+1200'
                  - id: 272
                    name: (GMT+12:00) Asia/Kamchatka
                    code: Asia/Kamchatka
                    offset: '+1200'
                  - id: 227
                    name: (GMT+12:00) Pacific/Auckland
                    code: Pacific/Auckland
                    offset: '+1200'
                  - id: 127
                    name: (GMT+12:00) Pacific/Fiji
                    code: Pacific/Fiji
                    offset: '+1200'
                  - id: 295
                    name: (GMT+12:00) Pacific/Funafuti
                    code: Pacific/Funafuti
                    offset: '+1200'
                  - id: 192
                    name: (GMT+12:00) Pacific/Kwajalein
                    code: Pacific/Kwajalein
                    offset: '+1200'
                  - id: 191
                    name: (GMT+12:00) Pacific/Majuro
                    code: Pacific/Majuro
                    offset: '+1200'
                  - id: 225
                    name: (GMT+12:00) Pacific/Nauru
                    code: Pacific/Nauru
                    offset: '+1200'
                  - id: 170
                    name: (GMT+12:00) Pacific/Tarawa
                    code: Pacific/Tarawa
                    offset: '+1200'
                  - id: 300
                    name: (GMT+12:00) Pacific/Wake
                    code: Pacific/Wake
                    offset: '+1200'
                  - id: 336
                    name: (GMT+12:00) Pacific/Wallis
                    code: Pacific/Wallis
                    offset: '+1200'
                  - id: 228
                    name: (GMT+12:45) Pacific/Chatham
                    code: Pacific/Chatham
                    offset: '+1245'
                  - id: 337
                    name: (GMT+13:00) Pacific/Apia
                    code: Pacific/Apia
                    offset: '+1300'
                  - id: 171
                    name: (GMT+13:00) Pacific/Enderbury
                    code: Pacific/Enderbury
                    offset: '+1300'
                  - id: 288
                    name: (GMT+13:00) Pacific/Fakaofo
                    code: Pacific/Fakaofo
                    offset: '+1300'
                  - id: 292
                    name: (GMT+13:00) Pacific/Tongatapu
                    code: Pacific/Tongatapu
                    offset: '+1300'
                  - id: 172
                    name: (GMT+14:00) Pacific/Kiritimati
                    code: Pacific/Kiritimati
                    offset: '+1400'
  /enums/countries:
    get:
      x-published: true
      tags:
        - Enums
      summary: List countries
      description: >-
        Gets the list of countries and their `countryId` values in the `id`
        column. The `countryId` is a required parameter when you create a new
        organization with the API call `POST /organizations`.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  countries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
              example:
                countries:
                  - id: 4
                    name: Afghanistan
                    code1: AFG
                    code2: af
                  - id: 5
                    name: Åland Islands
                    code1: ALA
                    code2: ax
                  - id: 6
                    name: Albania
                    code1: ALB
                    code2: al
  /enums/locales:
    get:
      x-published: true
      tags:
        - Enums
      summary: List locales
      description: Gets the list of locales and their `localeId` values and locale codes.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  locales:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        code:
                          type: string
                        angularCode:
                          type: string
              example:
                locales:
                  - id: 1
                    name: Afrikaans
                    code: af
                    angularCode: af
                  - id: 96
                    name: Albanian
                    code: sq
                    angularCode: sq
                  - id: 8
                    name: Arabic
                    code: ar
                    angularCode: ar
                  - id: 2
                    name: Arabic (Algeria)
                    code: ar-dz
                    angularCode: ar-DZ
                  - id: 3
                    name: Arabic (Kuwait)
                    code: ar-kw
                    angularCode: ar-KW
                  - id: 4
                    name: Arabic (Libya)
                    code: ar-ly
                    angularCode: ar-LY
                  - id: 5
                    name: Arabic (Morocco)
                    code: ar-ma
                    angularCode: ar-MA
                  - id: 6
                    name: Arabic (Saudi Arabia)
                    code: ar-sa
                    angularCode: ar-SA
                  - id: 7
                    name: Arabic (Tunisia)
                    code: ar-tn
                    angularCode: ar-TN
                  - id: 54
                    name: Armenian (Armenia)
                    code: hy-am
                    angularCode: hy
                  - id: 9
                    name: Azerbaijani
                    code: az
                    angularCode: az
                  - id: 12
                    name: Bambara
                    code: bm
                    angularCode: bm
                  - id: 38
                    name: Basque
                    code: eu
                    angularCode: eu
                  - id: 10
                    name: Belarusian
                    code: be
                    angularCode: be
                  - id: 13
                    name: Bengali
                    code: bn
                    angularCode: bn
                  - id: 16
                    name: Bosnian
                    code: bs
                    angularCode: bs
                  - id: 11
                    name: Bulgarian
                    code: bg
                    angularCode: bg
                  - id: 79
                    name: Burmese
                    code: my
                    angularCode: my
                  - id: 17
                    name: Catalan
                    code: ca
                    angularCode: ca
                  - id: 112
                    name: Central Morocco Tamazight
                    code: tzm
                    angularCode: tzm
                  - id: 111
                    name: Central Morocco Tamazight (Latin)
                    code: tzm-latn
                    angularCode: tzm
                  - id: 121
                    name: Chinese - China
                    code: zh-cn
                    angularCode: zh-Hans
                  - id: 122
                    name: Chinese - Hong Kong SAR
                    code: zh-hk
                    angularCode: zh-Hant-HK
                  - id: 123
                    name: Chinese - Taiwan
                    code: zh-tw
                    angularCode: zh-Hant
                  - id: 52
                    name: Croatian
                    code: hr
                    angularCode: hr
                  - id: 18
                    name: Czech
                    code: cs
                    angularCode: cs
                  - id: 21
                    name: Danish
                    code: da
                    angularCode: da
                  - id: 25
                    name: Divehi
                    code: dv
                    angularCode: en-US
                  - id: 83
                    name: Dutch
                    code: nl
                    angularCode: nl
                  - id: 82
                    name: Dutch (Belgium)
                    code: nl-be
                    angularCode: nl-BE
                  - id: 27
                    name: English (Australia)
                    code: en-au
                    angularCode: en-AU
                  - id: 28
                    name: English (Canada)
                    code: en-ca
                    angularCode: en-CA
                  - id: 30
                    name: English (Ireland)
                    code: en-ie
                    angularCode: en-IE
                  - id: 32
                    name: English (New Zealand)
                    code: en-nz
                    angularCode: en-NZ
                  - id: 29
                    name: English (United Kingdom)
                    code: en-gb
                    angularCode: en-GB
                  - id: 19
                    name: English (United States)
                    code: en-us
                    angularCode: en-US
                  - id: 33
                    name: Esperanto
                    code: eo
                    angularCode: eo
                  - id: 37
                    name: Estonian
                    code: et
                    angularCode: et
                  - id: 41
                    name: Faroese
                    code: fo
                    angularCode: fo
                  - id: 40
                    name: Finnish
                    code: fi
                    angularCode: fi
                  - id: 44
                    name: French
                    code: fr
                    angularCode: fr
                  - id: 42
                    name: French (Canada)
                    code: fr-ca
                    angularCode: fr-CA
                  - id: 43
                    name: French (Switzerland)
                    code: fr-ch
                    angularCode: fr-CH
                  - id: 46
                    name: Gaelic
                    code: gd
                    angularCode: gd
                  - id: 47
                    name: Galician
                    code: gl
                    angularCode: gl
                  - id: 60
                    name: Georgian
                    code: ka
                    angularCode: ka
                  - id: 24
                    name: German
                    code: de
                    angularCode: de
                  - id: 22
                    name: German (Austria)
                    code: de-at
                    angularCode: de-AT
                  - id: 23
                    name: German (Switzerland)
                    code: de-ch
                    angularCode: de-CH
                  - id: 26
                    name: Greek
                    code: el
                    angularCode: el
                  - id: 49
                    name: Gujarati
                    code: gu
                    angularCode: gu
                  - id: 50
                    name: Hebrew
                    code: he
                    angularCode: he
                  - id: 51
                    name: Hindi
                    code: hi
                    angularCode: hi
                  - id: 53
                    name: Hungarian
                    code: hu
                    angularCode: hu
                  - id: 56
                    name: Icelandic
                    code: is
                    angularCode: is
                  - id: 55
                    name: Indonesian
                    code: id
                    angularCode: id
                  - id: 57
                    name: Italian
                    code: it
                    angularCode: it
                  - id: 58
                    name: Japanese
                    code: ja
                    angularCode: ja
                  - id: 63
                    name: Kannada
                    code: kn
                    angularCode: kn
                  - id: 61
                    name: Kazakh
                    code: kk
                    angularCode: kk
                  - id: 62
                    name: Khmer
                    code: km
                    angularCode: km
                  - id: 64
                    name: Korean
                    code: ko
                    angularCode: ko
                  - id: 67
                    name: Lao
                    code: lo
                    angularCode: lo
                  - id: 69
                    name: Latvian
                    code: lv
                    angularCode: lv
                  - id: 68
                    name: Lithuanian
                    code: lt
                    angularCode: lt
                  - id: 72
                    name: Macedonian
                    code: mk
                    angularCode: mk
                  - id: 77
                    name: Malay
                    code: ms
                    angularCode: ms
                  - id: 73
                    name: Malayalam
                    code: ml
                    angularCode: ml
                  - id: 76
                    name: Malay (Malaysia)
                    code: ms-my
                    angularCode: ms
                  - id: 78
                    name: Maltese
                    code: mt
                    angularCode: mt
                  - id: 75
                    name: Marathi
                    code: mr
                    angularCode: mr
                  - id: 71
                    name: Maroi
                    code: mi
                    angularCode: mi
                  - id: 74
                    name: Mongolian
                    code: mn
                    angularCode: mn
                  - id: 81
                    name: Nepali
                    code: ne
                    angularCode: ne
                  - id: 80
                    name: Norwegian Bokmål
                    code: nb
                    angularCode: nb
                  - id: 84
                    name: Norwegian Nynorsk
                    code: nn
                    angularCode: nn
                  - id: 39
                    name: Persian
                    code: fa
                    angularCode: fa
                  - id: 86
                    name: Polish
                    code: pl
                    angularCode: pl
                  - id: 88
                    name: Portuguese
                    code: pt
                    angularCode: pt
                  - id: 87
                    name: Portuguese (Brazil)
                    code: pt-br
                    angularCode: pt
                  - id: 85
                    name: Punjabi
                    code: pa
                    angularCode: pa
                  - id: 89
                    name: Romanian
                    code: ro
                    angularCode: ro
                  - id: 90
                    name: Russian
                    code: ru
                    angularCode: ru
                  - id: 98
                    name: Serbian
                    code: sr
                    angularCode: sr
                  - id: 97
                    name: Serbian (Cyrillic)
                    code: sr-cyrl
                    angularCode: sr-Cyrl
                  - id: 91
                    name: Sindhi
                    code: sd
                    angularCode: sd
                  - id: 93
                    name: Sinhala
                    code: si
                    angularCode: si
                  - id: 94
                    name: Slovak
                    code: sk
                    angularCode: sk
                  - id: 95
                    name: Slovenian
                    code: sl
                    angularCode: sl
                  - id: 36
                    name: Spanish
                    code: es
                    angularCode: es
                  - id: 34
                    name: Spanish (Dominican Republic)
                    code: es-do
                    angularCode: es-DO
                  - id: 35
                    name: Spanish (United States)
                    code: es-us
                    angularCode: es-US
                  - id: 101
                    name: Swahili
                    code: sw
                    angularCode: sw
                  - id: 100
                    name: Swedish
                    code: sv
                    angularCode: sv
                  - id: 105
                    name: Tajik
                    code: tg
                    angularCode: tg
                  - id: 102
                    name: Tamil
                    code: ta
                    angularCode: ta
                  - id: 103
                    name: Telugu
                    code: te
                    angularCode: te
                  - id: 106
                    name: Thai
                    code: th
                    angularCode: th
                  - id: 14
                    name: Tibetan
                    code: bo
                    angularCode: bo
                  - id: 109
                    name: Turkish
                    code: tr
                    angularCode: tr
                  - id: 114
                    name: Ukrainian
                    code: uk
                    angularCode: uk
                  - id: 115
                    name: Urdu
                    code: ur
                    angularCode: ur
                  - id: 117
                    name: Uzbek
                    code: uz
                    angularCode: uz
                  - id: 116
                    name: Uzbek (Latin)
                    code: uz-latn
                    angularCode: uz-Latn
                  - id: 118
                    name: Vietnamese
                    code: vi
                    angularCode: vi
                  - id: 20
                    name: Welsh
                    code: cy
                    angularCode: cy
                  - id: 120
                    name: Yoruba
                    code: yo
                    angularCode: yo
  /enums/languages:
    get:
      x-published: true
      tags:
        - Enums
      summary: List languages
      description: Gets the list of languages and their language codes.
      parameters:
        - name: localized
          in: query
          schema:
            type: boolean
          example: 'true'
          description: >-
            When set to true, the response contains localized language names,
            for example --  German: Deutch or Czech: Čeština. This setting
            limits the number of returned languages to those that have defined
            their localized name. The default value is `false`.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  languages:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        name:
                          type: string
              example:
                languages:
                  - code: ab
                    name: Abkhazian
                  - code: aa
                    name: Afar
                  - code: af
                    name: Afrikaans
                  - code: ak
                    name: Akan
                  - code: sq
                    name: Albanian
                  - code: am
                    name: Amharic
                  - code: ar
                    name: Arabic
                  - code: an
                    name: Aragonese
                  - code: hy
                    name: Armenian
                  - code: as
                    name: Assamese
                  - code: av
                    name: Avaric
                  - code: ae
                    name: Avestan
                  - code: ay
                    name: Aymara
                  - code: az
                    name: Azerbaijani
                  - code: bm
                    name: Bambara
                  - code: ba
                    name: Bashkir
                  - code: eu
                    name: Basque
                  - code: be
                    name: Belarusian
                  - code: bn
                    name: Bengali
                  - code: bh
                    name: Bihari languages
                  - code: bi
                    name: Bislama
                  - code: nb
                    name: Bokmål, Norwegian; Norwegian Bokmål
                  - code: bs
                    name: Bosnian
                  - code: br
                    name: Breton
                  - code: bg
                    name: Bulgarian
                  - code: my
                    name: Burmese
                  - code: ca
                    name: Catalan; Valencian
                  - code: km
                    name: Central Khmer
                  - code: ch
                    name: Chamorro
                  - code: ce
                    name: Chechen
                  - code: ny
                    name: Chichewa; Chewa; Nyanja
                  - code: zh
                    name: Chinese
                  - code: cu
                    name: >-
                      Church Slavic; Old Slavonic; Church Slavonic; Old
                      Bulgarian; Old Church Slavonic
                  - code: cv
                    name: Chuvash
                  - code: kw
                    name: Cornish
                  - code: co
                    name: Corsican
                  - code: cr
                    name: Cree
                  - code: hr
                    name: Croatian
                  - code: cs
                    name: Czech
                  - code: da
                    name: Danish
                  - code: dv
                    name: Divehi; Dhivehi; Maldivian
                  - code: nl
                    name: Dutch; Flemish
                  - code: dz
                    name: Dzongkha
                  - code: en
                    name: English
                  - code: eo
                    name: Esperanto
                  - code: et
                    name: Estonian
                  - code: ee
                    name: Ewe
                  - code: fo
                    name: Faroese
                  - code: fj
                    name: Fijian
                  - code: fi
                    name: Finnish
                  - code: fr
                    name: French
                  - code: ff
                    name: Fulah
                  - code: gd
                    name: Gaelic; Scottish Gaelic
                  - code: gl
                    name: Galician
                  - code: lg
                    name: Ganda
                  - code: ka
                    name: Georgian
                  - code: de
                    name: German
                  - code: el
                    name: Greek, Modern (1453-)
                  - code: gn
                    name: Guarani
                  - code: gu
                    name: Gujarati
                  - code: ht
                    name: Haitian; Haitian Creole
                  - code: ha
                    name: Hausa
                  - code: he
                    name: Hebrew
                  - code: hz
                    name: Herero
                  - code: hi
                    name: Hindi
                  - code: ho
                    name: Hiri Motu
                  - code: hu
                    name: Hungarian
                  - code: is
                    name: Icelandic
                  - code: io
                    name: Ido
                  - code: ig
                    name: Igbo
                  - code: id
                    name: Indonesian
                  - code: ia
                    name: Interlingua (International Auxiliary Language Association)
                  - code: ie
                    name: Interlingue; Occidental
                  - code: iu
                    name: Inuktitut
                  - code: ik
                    name: Inupiaq
                  - code: ga
                    name: Irish
                  - code: it
                    name: Italian
                  - code: ja
                    name: Japanese
                  - code: jv
                    name: Javanese
                  - code: kl
                    name: Kalaallisut; Greenlandic
                  - code: kn
                    name: Kannada
                  - code: kr
                    name: Kanuri
                  - code: ks
                    name: Kashmiri
                  - code: kk
                    name: Kazakh
                  - code: ki
                    name: Kikuyu; Gikuyu
                  - code: rw
                    name: Kinyarwanda
                  - code: ky
                    name: Kirghiz; Kyrgyz
                  - code: kv
                    name: Komi
                  - code: kg
                    name: Kongo
                  - code: ko
                    name: Korean
                  - code: kj
                    name: Kuanyama; Kwanyama
                  - code: ku
                    name: Kurdish
                  - code: lo
                    name: Lao
                  - code: la
                    name: Latin
                  - code: lv
                    name: Latvian
                  - code: li
                    name: Limburgan; Limburger; Limburgish
                  - code: ln
                    name: Lingala
                  - code: lt
                    name: Lithuanian
                  - code: lu
                    name: Luba-Katanga
                  - code: lb
                    name: Luxembourgish; Letzeburgesch
                  - code: mk
                    name: Macedonian
                  - code: mg
                    name: Malagasy
                  - code: ms
                    name: Malay
                  - code: ml
                    name: Malayalam
                  - code: mt
                    name: Maltese
                  - code: gv
                    name: Manx
                  - code: mi
                    name: Maori
                  - code: mr
                    name: Marathi
                  - code: mh
                    name: Marshallese
                  - code: mn
                    name: Mongolian
                  - code: na
                    name: Nauru
                  - code: nv
                    name: Navajo; Navaho
                  - code: nd
                    name: Ndebele, North; North Ndebele
                  - code: nr
                    name: Ndebele, South; South Ndebele
                  - code: ng
                    name: Ndonga
                  - code: ne
                    name: Nepali
                  - code: se
                    name: Northern Sami
                  - code: 'no'
                    name: Norwegian
                  - code: nn
                    name: Norwegian Nynorsk; Nynorsk, Norwegian
                  - code: oc
                    name: Occitan (post 1500); Provençal
                  - code: oj
                    name: Ojibwa
                  - code: or
                    name: Oriya
                  - code: om
                    name: Oromo
                  - code: os
                    name: Ossetian; Ossetic
                  - code: pi
                    name: Pali
                  - code: pa
                    name: Panjabi; Punjabi
                  - code: fa
                    name: Persian
                  - code: pl
                    name: Polish
                  - code: pt
                    name: Portuguese
                  - code: ps
                    name: Pushto; Pashto
                  - code: qu
                    name: Quechua
                  - code: ro
                    name: Romanian; Moldavian; Moldovan
                  - code: rm
                    name: Romansh
                  - code: rn
                    name: Rundi
                  - code: ru
                    name: Russian
                  - code: sm
                    name: Samoan
                  - code: sg
                    name: Sango
                  - code: sa
                    name: Sanskrit
                  - code: sc
                    name: Sardinian
                  - code: sr
                    name: Serbian
                  - code: sn
                    name: Shona
                  - code: ii
                    name: Sichuan Yi; Nuosu
                  - code: sd
                    name: Sindhi
                  - code: si
                    name: Sinhala; Sinhalese
                  - code: sk
                    name: Slovak
                  - code: sl
                    name: Slovenian
                  - code: so
                    name: Somali
                  - code: st
                    name: Sotho, Southern
                  - code: es
                    name: Spanish; Castilian
                  - code: su
                    name: Sundanese
                  - code: sw
                    name: Swahili
                  - code: ss
                    name: Swati
                  - code: sv
                    name: Swedish
                  - code: tl
                    name: Tagalog
                  - code: ty
                    name: Tahitian
                  - code: tg
                    name: Tajik
                  - code: ta
                    name: Tamil
                  - code: tt
                    name: Tatar
                  - code: te
                    name: Telugu
                  - code: th
                    name: Thai
                  - code: bo
                    name: Tibetan
                  - code: ti
                    name: Tigrinya
                  - code: to
                    name: Tonga (Tonga Islands)
                  - code: ts
                    name: Tsonga
                  - code: tn
                    name: Tswana
                  - code: tr
                    name: Turkish
                  - code: tk
                    name: Turkmen
                  - code: tw
                    name: Twi
                  - code: ug
                    name: Uighur; Uyghur
                  - code: uk
                    name: Ukrainian
                  - code: ur
                    name: Urdu
                  - code: uz
                    name: Uzbek
                  - code: ve
                    name: Venda
                  - code: vi
                    name: Vietnamese
                  - code: vo
                    name: Volapük
                  - code: wa
                    name: Walloon
                  - code: cy
                    name: Welsh
                  - code: fy
                    name: Western Frisian
                  - code: wo
                    name: Wolof
                  - code: xh
                    name: Xhosa
                  - code: yi
                    name: Yiddish
                  - code: yo
                    name: Yoruba
                  - code: za
                    name: Zhuang; Chuang
                  - code: zu
                    name: Zulu
  /enums/user-features:
    get:
      tags:
        - Enums
      summary: List user features
      description: Gets the list of all existing user features and their descriptions.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userFeatures:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        name:
                          type: string
              example:
                userFeatures:
                  - title: >-
                      Allow access to internal IP addresses from scenarios (do
                      not turn on if you don't know what you're doing!)
                    name: local_access
                  - title: Can create Apps without ID suffix
                    name: allow_apps
                  - title: Can use custom IML functions in Apps
                    name: allow_apps_js
                  - title: Can commit changes to approved Apps
                    name: allow_apps_commit
                  - title: Can see private modules
                    name: private_modules
                  - title: Can add public templates
                    name: public_templates
  /enums/organization-features:
    get:
      tags:
        - Enums
      summary: List organization features
      description: >-
        Gets the list of all existing organization features and their
        descriptions.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizationFeatures:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        name:
                          type: string
              example:
                organizationFeatures:
                  - title: >-
                      Allow access to internal IP addresses from scenarios (do
                      not turn on if you don't know what you're doing!)
                    name: local_access
                  - title: Allow migration of scenarios with hidden native apps!
                    name: migration_scenarios_hidden_apps
                  - title: Allow migration within the same zone
                    name: migration_same_zone
  /enums/user-email-notifications:
    get:
      x-published: true
      tags:
        - Enums
      summary: List email notification settings
      description: >-
        Gets the list of available email notification settings and their
        `notificationId` values. The language of the notification settings
        descriptions is set according to user language settings by default. You
        can specify a different language for the notification settings
        descriptions with the `language` parameter.
      parameters:
        - name: language
          in: query
          schema:
            type: string
          example: en
          description: >-
            Language code in the ISO 639-1 code standard. Only `en` (English)
            and `cs` (Czech) languages are supported.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userEmailNotifications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
              example:
                userEmailNotifications:
                  - id: 2
                    name: Warning in scenario run
                    description: >-
                      Warnings encountered by your scenarios that need your
                      attention, such as failure to connect with your apps and
                      services.
                  - id: 1
                    name: Errors in scenario run
                    description: >-
                      Notifications about errors encountered by specific modules
                      in your scenarios that keep your workflows from running
                      smoothly.
                  - id: 6
                    name: Scenario deactivation
                    description: >-
                      Get notified when your scenario gets deactivated due to
                      critical issues such as multiple consecutive errors.
  /enums/user-api-token-scopes:
    get:
      x-published: true
      tags:
        - Enums
      summary: List API token scopes
      description: >-
        Gets the list of all of the existing user API token scopes. For more
        information about the user API scopes refer to the [Authentication
        section](https://www.make.com/en/api-documentation/authentication).
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userApiTokenScopes:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
              example:
                userApiTokenScopes:
                  - name: accounts:read
                  - name: accounts:write
                  - name: admin:read
                  - name: admin:write
                  - name: apps:read
                  - name: apps:write
                  - name: imt-forms:read
                  - name: imt-forms:write
                  - name: keys:read
                  - name: keys:write
                  - name: notifications:read
                  - name: notifications:write
                  - name: organizations:read
                  - name: organizations:write
                  - name: packages:read
                  - name: packages:write
                  - name: scenarios:read
                  - name: scenarios:write
                  - name: system:read
                  - name: system:write
                  - name: templates:read
                  - name: templates:write
                  - name: udts:read
                  - name: udts:write
  /enums/imt-regions:
    get:
      x-published: true
      tags:
        - Enums
      summary: List Make regions
      description: >-
        Gets the list of Make regions and their `regionId` values in the `id`
        column. The `regionId` is a required parameter when you create a new
        organization with the API call `POST /organizations`.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  imtRegions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
              example:
                imtRegions:
                  - id: 1
                    name: Local
  /enums/imt-zones:
    get:
      x-published: true
      tags:
        - Enums
      summary: List Make zones
      description: >-
        Gets the list of Make zones and their `zoneId` values in the `id`
        column. The `zoneId` is a required parameter when you create a new
        organization with the API call `POST /organizations`.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  imtZones:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        domain:
                          type: string
                        name:
                          type: string
              example:
                imtZones:
                  - id: 1
                    domain: slave1.make.cloud
                    name: Zone Slave 1
                  - id: 2
                    domain: slave2.make.cloud
                    name: Zone Slave 2
  /enums/apps-review-statuses:
    get:
      tags:
        - Enums
      summary: List apps review status
      description: |-
        Gets the list of statuses that Make assigns to custom apps. 
         - `requestAccepted`: Make has received the request for a custom app review.
         - `inProgress`: The custom app review is in progress.
         - `feedbackSent`: The Make app developers have sent their feedback to the developer of the custom app.
         - `completed`:
         - `waitingForRelease`:
         - `declined`: The custom app publishing has been declined by Make. The reasons for that could be: 
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviewStatuses:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: integer
                        label:
                          type: string
              example:
                reviewStatuses:
                  - value: 0
                    label: '{{!apps.forms.review.status.requestAccepted}}'
                  - value: 1
                    label: '{{!apps.forms.review.status.inProgress}}'
                  - value: 2
                    label: '{{!apps.forms.review.status.feedbackSent}}'
                  - value: 3
                    label: '{{!apps.forms.review.status.completed}}'
                  - value: 4
                    label: '{{!apps.forms.review.status.waitingForRelease}}'
                  - value: 5
                    label: '{{!apps.forms.review.status.declined}}'
  /enums/variable-types:
    get:
      x-published: true
      tags:
        - Enums
      summary: List variable types
      description: >-
        Retrieves the mapping of custom variable types and their `typeId`
        values.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  variableTypes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        teamOnly:
                          type: boolean
              example:
                variableTypes:
                  - id: 1
                    name: number
                    teamOnly: false
                  - id: 2
                    name: string
                    teamOnly: false
                  - id: 3
                    name: boolean
                    teamOnly: false
                  - id: 4
                    name: date
                    teamOnly: false
  /functions:
    get:
      x-published: true
      tags:
        - Custom functions
      summary: List custom functions
      description: >-
        Retrieves a list of custom functions available in the team. The response
        contains `id`, `name`, `description` and a brief updates history of all
        custom functions available in the team.


        Check availability of the custom functions feature with the API call
        `GET /organizations/{organizationId}` for the organization to which the
        team belongs. If the response contains `"customFunctions": true` pair in
        the `license` object then you have access to the custom functions
        feature.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for Make
        pricing plans overview.
      security:
        - token:
            - function:read
      parameters:
        - name: teamId
          in: query
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 11
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  functions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        args:
                          type: string
                        description:
                          type: string
                        updatedAt:
                          type: string
                          format: date-time
                        createdByUser:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            email:
                              type: string
                        createdAt:
                          type: string
                          format: date-time
              example:
                functions:
                  - id: 2
                    name: checkType
                    args: (param)
                    description: Returns the data type of the argument.
                    updatedAt: '2023-02-06T09:10:40.643Z'
                    createdByUser:
                      id: 22
                      name: John Doe
                      email: john@doe.com
                    createdAt: '2023-02-06T09:09:16.063Z'
                  - id: 3
                    name: numberOfWorkingDays
                    args: ()
                    description: >-
                      Calculate how many working days are between the two
                      provided dates.
                    updatedAt: '2023-01-25T12:49:51.601Z'
                    createdByUser:
                      id: 22
                      name: John Doe
                      email: john@doe.com
                    createdAt: '2023-01-25T12:49:51.601Z'
    post:
      x-published: true
      tags:
        - Custom functions
      summary: Create a custom function
      description: >-
        Creates a custom function. Specify function `name`, `description` and
        `code` in the request body.


        You cannot use a JavaScript reserved word for the function `name`. Check
        the [list of JavaScript reserved
        words](https://www.w3schools.com/js/js_reserved.asp).


        Make sure to use the same function name in the `name` field and in the
        function's `code`. Otherwise, you get the IM005 error.


        Make validates the custom function's code first. You get an IM005 error
        if the code validation fails. The validation might fail because of a
        syntax error in the function's code or when the code uses a JavaScript
        feature that Make doesn't support. Check the [custom functions
        limitations](https://www.make.com/en/help/functions/custom-functions#limitations-of-custom-functions)
        in the Make Help center.


        Check availability of the custom functions feature with the API call
        `GET /organizations/{organizationId}` for the organization to which the
        team belongs. If the response contains `"customFunctions": true` pair in
        the `license` object then you have access to the custom functions
        feature.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for Make
        pricing plans overview.
      security:
        - token:
            - functions:write
      parameters:
        - name: teamId
          in: query
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 11
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the custom function.
                description:
                  type: string
                  description: The description of the custom function.
                code:
                  type: string
                  description: The code of the custom function.
              required:
                - name
                - description
            example:
              name: symmetricDifference
              description: >-
                A function which returns an array with items unique across two
                arrays.
              code: >-
                function symmetricDifference(array1, array2){difference =
                array1.filter(x => !array2.includes(x)).concat(array2.filter(x
                => !array1.includes(x))) return difference}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  function:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      code:
                        type: string
                      args:
                        type: string
                      updatedAt:
                        type: string
                        format: date-time
                      createdByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      createdAt:
                        type: string
                        format: date-time
              example:
                function:
                  id: 16
                  name: symmetricDifference
                  description: >-
                    A function which returns an array with items unique across
                    two arrays.
                  code: >-
                    function symmetricDifference(array1, array2){difference =
                    array1.filter(x =>
                    !array2.includes(x)).concat(array2.filter(x =>
                    !array1.includes(x))) return difference}
                  args: (array1, array2)
                  updatedAt: '2023-02-06T14:09:37.834Z'
                  createdAt: '2023-02-06T14:09:37.834Z'
                  createdByUser:
                    id: 22
                    name: John Doe
                    email: john@doe.com
  /functions/eval:
    post:
      x-published: true
      tags:
        - Custom functions
      summary: Check custom function code
      description: >-
        Checks the custom functions code. The response contains information
        whether Make validated the custom functions code successfully or whether
        there was an error.


        The code validation might fail because of an syntax error in the
        function's code or when the code uses a JavaScript feature that Make
        doesn't support. Check the [custom functions
        limitations](https://www.make.com/en/help/functions/custom-functions#limitations-of-custom-functions)
        in the Make Help center.


        Check availability of the custom functions feature with the API call
        `GET /organizations/{organizationId}` for the organization to which the
        team belongs. If the response contains `"customFunctions": true` pair in
        the `license` object then you have access to the custom functions
        feature.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for Make
        pricing plans overview.
      security:
        - token:
            - functions:write
      parameters:
        - name: teamId
          in: query
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 11
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: The code of the custom function.
              required:
                - code
            example:
              code: function checkType(arg) {return (typeof(arg))}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              example:
                success: true
                error: null
  /functions/{functionId}:
    get:
      x-published: true
      tags:
        - Custom functions
      summary: Custom function detail
      description: >-
        Gets detailed information about a custom function. The response contains
        function `name`, `code`,  a list of scenarios which use the custom
        function and the custom function's history of updates.
      security:
        - token:
            - functions:read
      parameters:
        - name: functionId
          in: path
          schema:
            type: integer
          example: 44
          description: The ID of the custom function.
          required: true
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  function:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      code:
                        type: string
                      args:
                        type: string
                      scenarios:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                      updatedAt:
                        type: string
                        format: date-time
                      createdByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      createdAt:
                        type: string
                        format: date-time
              example:
                function:
                  id: 16
                  name: symmetricDifference
                  description: >-
                    A function which returns an array with items unique across
                    two arrays.
                  code: >-
                    function symmetricDifference(array1, array2){difference =
                    array1.filter(x =>
                    !array2.includes(x)).concat(array2.filter(x =>
                    !array1.includes(x))) return difference}
                  args: (array1, array2)
                  scenarios:
                    - id: 1052
                      name: Scenario to compare arrays
                  updatedAt: '2023-02-06T14:09:37.834Z'
                  createdAt: '2023-02-06T14:09:37.834Z'
                  createdByUser:
                    id: 22
                    name: John Doe
                    email: john@doe.com
    patch:
      x-published: true
      tags:
        - Custom functions
      summary: Update a custom function
      description: >
        Updates custom functions `description` or `code`. You cannot change the
        `name` of the custom function.


        Make sure to use the same function name in the function's `code`.
        Otherwise, you get an IM005 error.


        Make validates the custom function's code first. You get an IM005 error
        if the code validation fails. The validation might fail because of a
        syntax error in the function's code or when the code uses a JavaScript
        feature that Make doesn't support. Check the [custom functions
        limitations](https://www.make.com/en/help/functions/custom-functions#limitations-of-custom-functions)
        in the Make Help center.
      security:
        - token:
            - functions:write
      parameters:
        - name: functionId
          in: path
          schema:
            type: integer
          example: 44
          description: The ID of the custom function.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: >-
                    The description of the custom function. You can use maximum
                    of 128 characters.
                code:
                  type: string
                  description: The code of the custom function.
            example:
              description: Greet user instead of greeting the World.
              code: function greeter(name){return concat('Hello ', name)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  function:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                      description:
                        type: string
                      code:
                        type: string
                      args:
                        type: string
                      updatedAt:
                        type: string
                        format: date-time
                      createdByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      createdAt:
                        type: string
                        format: date-time
              example:
                function:
                  id: 48
                  name: greeter
                  description: Greet user instead of greeting the World.
                  code: function greeter(name){return concat('Hello ', name)
                  args: (name)
                  updatedAt: '2023-02-06T14:09:37.834Z'
                  createdAt: '2023-02-06T14:09:37.834Z'
                  createdByUser:
                    id: 22
                    name: John Doe
                    email: john@doe.com
    delete:
      x-published: true
      tags:
        - Custom functions
      summary: Delete custom function
      description: >-
        Deletes the custom function. The response contains information whether
        the custom function is deleted or not.


        If you or any of your team members use the custom function in a scenario
        you have to use the `confirmed` parameter to confirm the custom function
        deletion. Otherwise, you get an error with a list of scenarios that use
        the custom function.
      security:
        - token:
            - functions:write
      parameters:
        - name: functionId
          in: path
          required: true
          schema:
            type: integer
          example: 44
          description: The ID of the custom function.
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: true
          description: >-
            Confirms deleting of the custom function. If you are using the
            custom function in a scenario Make requires the confirmation.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              example:
                success: true
  /functions/{functionId}/history:
    get:
      x-published: true
      tags:
        - Custom functions
      summary: Custom function updates history
      description: >-
        Gets history of updates of the specified custom function. The response
        contains a list of code changes, the change author and date when the
        author made the change.
      security:
        - token:
            - functions:read
      parameters:
        - name: functionId
          in: path
          required: true
          schema:
            type: integer
          example: 44
          description: The ID of the custom function.
        - name: teamId
          in: query
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  functionHistory:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        previousCode:
                          type: string
                        updatedAt:
                          type: string
                          format: date-time
                        updatedBy:
                          type: string
              example:
                functionHistory:
                  - id: 1245
                    previousCode: function checkType(param){return typeof(param)}
                    updatedAt: '2023-02-09T09:13:36.750Z'
                    updatedBy: John Doe
                  - id: 1240
                    previousCode: function checkType(arg){return typeof(arg)}
                    updatedAt: '2023-02-09T09:12:34.288Z'
                    updatedBy: John Doe
  /ping:
    get:
      x-published: false
      tags:
        - General
      summary: Ping
      description: Pings the Make API service. Successful response contains plain text.
      parameters:
        - name: delay
          in: query
          schema:
            type: integer
          example: '2000'
          description: The delay after which Make pings the API service in milliseconds.
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
              example: pong
  /hooks:
    get:
      x-published: true
      tags:
        - Hooks
      summary: List hooks
      description: >-
        Retrieves a collection of all hooks for a team with a given ID. Returned
        hooks are sorted by name in ascending order.
      security:
        - token:
            - hooks:read
      parameters:
        - name: teamId
          in: query
          schema:
            type: string
          required: true
          description: The unique ID of the team whose hooks will be retrieved.
          example: 4
        - name: typeName
          in: query
          schema:
            type: string
          description: >-
            The hook type. Two native Make hook types are `gateway-webhook` and
            `gateway-mailhook`.
          example: gateway-webhook
        - name: assigned
          in: query
          schema:
            type: boolean
          description: >-
            Specifies if the hook is assigned to a scenario. If set to `true`,
            the request will return only the hooks which the `scenarioId` value
            is not set to null.
          example: true
        - name: viewForScenarioId
          in: query
          schema:
            type: integer
          description: >-
            This parameter shows only the hooks that can be used by a scenario
            with a specific ID, which means hooks that are not assigned to
            another scenario yet and the hook that is already assigned to this
            scenario. This can be useful because Make allows assigning any hook
            to only one scenario. If this parameter is set the `assigned`
            parameter is ignored.
          example: 123
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hooks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        teamId:
                          type: integer
                        udid:
                          type: string
                        type:
                          type: string
                        packageName:
                          type: string
                        theme:
                          type: string
                          format: color
                        flags:
                          type: object
                          properties:
                            form:
                              type: boolean
                        editable:
                          type: boolean
                        queueCount:
                          type: integer
                        queueLimit:
                          type: integer
                        enabled:
                          type: boolean
                        gone:
                          type: boolean
                        typeName:
                          type: string
                        data:
                          type: object
                          additionalProperties: true
                          properties:
                            headers:
                              type: boolean
                            method:
                              type: boolean
                            stringify:
                              type: boolean
                            teamId:
                              type: integer
                            ip:
                              type: string
                              format: ipv6
                            udt:
                              type: integer
                        scenarioId:
                          type: integer
                        url:
                          type: string
                          format: uri
              example:
                hooks:
                  - id: 11
                    name: My gateway-webhook webhook 1
                    teamId: 4
                    udid: 1gqnexkk1vwxg2wpj39kg30pzp6uhe7h
                    type: web
                    packageName: null
                    theme: '#c73a63'
                    editable: true
                    queueCount: 0
                    queueLimit: 10000
                    enabled: true
                    gone: false
                    typeName: gateway-webhook
                    data:
                      headers: false
                      method: false
                      stringify: false
                    scenarioId: 1
                    url: >-
                      https://local.make.cloud/wh/1gqnexkk1vwxg2wpj39kg30pzp6uhe7h
                  - id: 58
                    name: Test 1
                    teamId: 4
                    udid: d4ezzfwgyav7qaukv8dbh3l21eru0fld
                    type: web
                    packageName: null
                    theme: '#c73a63'
                    editable: true
                    queueCount: 0
                    queueLimit: 10000
                    enabled: true
                    gone: false
                    typeName: gateway-webhook
                    data:
                      ip: null
                      udt: null
                      headers: false
                      method: false
                      stringify: false
                      teamId: 4
                    scenarioId: 112
                    url: >-
                      https://local.make.cloud/wh/d4ezzfwgyav7qaukv8dbh3l21eru0fld
    post:
      x-published: true
      tags:
        - Hooks
      summary: Create hook
      description: >-
        Creates a new hook with data passed in the request body. In the
        response, it returns all details of the created hook.
      security:
        - token:
            - hooks:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The name of the hook. The name must be at most 128
                    characters long and does not need to be unique.
                teamId:
                  type: string
                  description: The unique ID of the team in which a hook will be created.
                typeName:
                  type: string
                  description: >-
                    The hook type strictly related to the app for which the hook
                    was created.
                method:
                  type: boolean
                  description: >-
                    Set the `method` parameter to `true` to add the HTTP method
                    to the request body.
                header:
                  type: boolean
                  description: >-
                    Set the `header` parameter to `true` to add headers to the
                    request body.
                stringify:
                  type: boolean
                  description: >-
                    Set the `stringify` parameter to `true` to return JSON
                    payloads as strings.
                __IMTCONN__:
                  type: integer
                  description: >-
                    The unique ID of the connection that will be included in the
                    created hook.
                formId:
                  description: >-
                    The unique ID of the form that will be included in the
                    created hook.
                  type: string
              required:
                - name
                - teamId
                - typeName
                - method
                - header
                - stringify
            example:
              name: Jotform hook 1
              teamId: '1'
              typeName: jotform
              method: false
              header: false
              stringify: false
              __IMTCONN__: 96
              formId: '91282545501352'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hook:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      udid:
                        type: string
                      type:
                        type: string
                      packageName:
                        type: string
                      theme:
                        type: string
                        format: color
                      flags:
                        type: object
                        properties:
                          form:
                            type: boolean
                      editable:
                        type: boolean
                      queueCount:
                        type: integer
                      queueLimit:
                        type: integer
                      enabled:
                        type: boolean
                      gone:
                        type: boolean
                      typeName:
                        type: string
                      data:
                        type: object
                        additionalProperties: true
                        properties:
                          headers:
                            type: boolean
                          method:
                            type: boolean
                          stringify:
                            type: boolean
                          teamId:
                            type: integer
                          ip:
                            type: string
                            format: ipv6
                          udt:
                            type: integer
                      scenarioId:
                        type: integer
                      url:
                        type: string
                        format: uri
                  formula:
                    type: object
                    properties:
                      success:
                        type: array
                        items: {}
              example:
                hook:
                  id: 46
                  name: jotform hook 1
                  teamId: 4
                  udid: ukkxypkmrcgufv8xmc9xumbvh8bfh69d
                  type: web
                  packageName: null
                  theme: '#ffa500'
                  editable: false
                  queueCount: 0
                  queueLimit: 10000
                  enabled: true
                  gone: false
                  typeName: jotform
                  data:
                    __IMTCONN__: 96
                    formId: '91282545501352'
                    teamId: 4
                    url: >-
                      https://local.make.cloud/wh/ukkxypkmrcgufv8xmc9xumbvh8bfh69d
                  url: https://local.make.cloud/wh/ukkxypkmrcgufv8xmc9xumbvh8bfh69d
  /hooks/{hookId}:
    get:
      x-published: true
      tags:
        - Hooks
      summary: Get hook details
      description: Retrieves details of a hook with a given ID including hooks data.
      security:
        - token:
            - hooks:read
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hook:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      udid:
                        type: string
                      type:
                        type: string
                      packageName:
                        type: string
                      theme:
                        type: string
                        format: color
                      flags:
                        type: object
                        properties:
                          form:
                            type: boolean
                      editable:
                        type: boolean
                      queueCount:
                        type: integer
                      queueLimit:
                        type: integer
                      enabled:
                        type: boolean
                      gone:
                        type: boolean
                      typeName:
                        type: string
                      data:
                        type: object
                        additionalProperties: true
                        properties:
                          headers:
                            type: boolean
                          method:
                            type: boolean
                          stringify:
                            type: boolean
                          teamId:
                            type: integer
                          ip:
                            type: string
                            format: ipv6
                          udt:
                            type: integer
                      scenarioId:
                        type: integer
                      url:
                        type: string
                        format: uri
              example:
                hook:
                  id: 58
                  name: Test 1
                  teamId: 4
                  udid: d4ezzfwgyav7qaukv8dbh3l21eru0fld
                  type: web
                  packageName: null
                  theme: '#c73a63'
                  editable: true
                  queueCount: 0
                  queueLimit: 10000
                  enabled: true
                  gone: false
                  typeName: gateway-webhook
                  data:
                    ip: null
                    udt: null
                    headers: false
                    method: false
                    stringify: false
                    teamId: 4
                  scenarioId: 112
                  url: https://local.make.cloud/wh/d4ezzfwgyav7qaukv8dbh3l21eru0fld
    delete:
      x-published: true
      tags:
        - Hooks
      summary: Delete hook
      description: Deletes a hook with a given ID and returns the ID in the response.
      security:
        - token:
            - hooks:write
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          example: 12
          description: >-
            The unique ID of the hook. It can be retrieved from the [List
            hooks](/hooks-get) endpoint.
        - name: confirmed
          in: query
          schema:
            type: boolean
          description: >-
            Confirms the deletion if a hook is included in the scenario.
            Confirmation is required because the scenario will stop working
            without the hook. If the parameter is missing or it is set to
            `false` an error code is returned and the resource is not deleted.
          example: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hook:
                    type: integer
              example:
                hook: 12
    patch:
      x-published: true
      tags:
        - Hooks
      summary: Update hook
      description: >-
        Updates a hook with a given ID by passing new values in the request
        body. Any property that is not provided will be left unchanged. In the
        response, it returns all details of the updated hook including
        properties that were not changed.
      security:
        - token:
            - hooks:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The name of the updated hook. The name must be at most 128
                    characters long and does not need to be unique.
            example:
              name: My gateway-webhook webhook 1
      parameters:
        - name: hookId
          in: path
          schema:
            type: string
          required: true
          description: >-
            The unique ID of the hook. It can be retrieved from the [List
            hooks](/hooks-get) endpoint.
          example: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hook:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      udid:
                        type: string
                      type:
                        type: string
                      packageName:
                        type: string
                      theme:
                        type: string
                        format: color
                      flags:
                        type: object
                        properties:
                          form:
                            type: boolean
                      editable:
                        type: boolean
                      queueCount:
                        type: integer
                      queueLimit:
                        type: integer
                      enabled:
                        type: boolean
                      gone:
                        type: boolean
                      typeName:
                        type: string
                      data:
                        type: object
                        additionalProperties: true
                        properties:
                          headers:
                            type: boolean
                          method:
                            type: boolean
                          stringify:
                            type: boolean
                          teamId:
                            type: integer
                          ip:
                            type: string
                            format: ipv6
                          udt:
                            type: integer
                      scenarioId:
                        type: integer
                      url:
                        type: string
                        format: uri
              example:
                hook:
                  id: 11
                  name: My gateway-webhook webhook 1
                  teamId: 4
                  udid: 1gqnexkk1vwxg2wpj39kg30pzp6uhe7h
                  type: web
                  packageName: null
                  theme: '#c73a63'
                  editable: true
                  queueCount: 0
                  queueLimit: 10000
                  enabled: true
                  gone: false
                  typeName: gateway-webhook
                  data:
                    headers: false
                    method: false
                    stringify: false
                  url: https://local.make.cloud/wh/1gqnexkk1vwxg2wpj39kg30pzp6uhe7h
  /hooks/{hookId}/ping:
    get:
      x-published: true
      tags:
        - Hooks
      summary: Ping hook
      description: >-
        Determines if a hook with a given ID is active and retrieves its
        properties that provide you with the address of the hook and inform if
        the hook is attached, what is its learning status, and if it was not
        used for a long time.
      security:
        - token:
            - hooks:read
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    format: uri
                  attached:
                    type: boolean
                  learning:
                    type: boolean
                  gone:
                    type: boolean
              example:
                address: https://local.make.cloud/wh/wmhqi8todng3en3z2tl7ausm15tg33iz
                attached: false
                learning: false
                gone: false
  /hooks/{hookId}/learn-start:
    post:
      x-published: true
      tags:
        - Hooks
      summary: Learn start
      description: >-
        Starts the process of learning the request body structure by a hook with
        a given ID. When you send to the hook address a request with data in its
        body, you can use this endpoint to force the hook to start determining
        the payload data structure which will later be suggested in the scenario
        as the output of the hook. The data structure learning process also
        starts automatically when a new hook is created and stops once the data
        structure is determined. If you want to stop this process, you can use
        the [Learn stop](hooks-hookId-learn-stop-post) endpoint.
      security:
        - token:
            - hooks:write
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              example:
                success: true
  /hooks/{hookId}/learn-stop:
    post:
      x-published: true
      tags:
        - Hooks
      summary: Learn stop
      description: >-
        Stops the process of learning the request body structure by a hook with
        a given ID. When you send to the hook address a request with data in its
        body, you can use the [Learn start](hooks-hookId-learn-start-post)
        endpoint to force the hook to start determining the payload data
        structure which will later be suggested in the scenario as the output of
        the hook. The data structure learning process also starts automatically
        when a new hook is created and stops once the data structure is
        determined. You can use this endpoint to stop the learning process at
        any time.
      security:
        - token:
            - hooks:write
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              example:
                success: true
  /hooks/{hookId}/enable:
    post:
      x-published: true
      tags:
        - Hooks
      summary: Enable hook
      description: >-
        Enables a disabled hook with a given ID. Newly created hooks are enabled
        by default which means they are ready to accept data. In response, this
        endpoint returns the confirmation that the hook was successfully
        enabled.
      security:
        - token:
            - hooks:write
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              example:
                success: true
  /hooks/{hookId}/disable:
    post:
      x-published: true
      tags:
        - Hooks
      summary: Disable hook
      description: >-
        Disables a hook with a given ID. Newly created hooks are enabled by
        default which means they are ready to accept data. The disabled hook
        does not accept any data. This endpoint can be useful when you want to
        debug the scenario functionality. In response, this endpoint returns the
        confirmation that the hook was successfully disabled.
      security:
        - token:
            - hooks:write
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              example:
                success: true
  /hooks/{hookId}/set-data:
    post:
      x-published: true
      tags:
        - Hooks
      summary: Set hook details
      description: >-
        Sets data for a hook with a given ID. Data differ depending on the hook
        type. It returns the confirmation if the hook data was changed (`true`)
        or not (`false`).
      security:
        - token:
            - hooks:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              ip: ''
              udt: ''
              headers: false
              method: false
              stringify: false
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              example:
                changed: true
  /hooks/{hookId}/incomings:
    get:
      x-published: true
      tags:
        - Hooks > Incomings
      summary: Get webhook queue
      description: >-
        Retrieves a list of webhook queue items waiting for processing with the
        specified webhook. The request response contains:


        - the incoming payload hash
         - incoming data scope
         - the size of the data in bytes
         - timestamp of the moment when the data were placed in the processing queue
      security:
        - token:
            - hooks:read
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  incomings:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        scope:
                          type: string
                        size:
                          type: integer
                        created:
                          type: string
                          format: date-time
                        data:
                          type: object
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                incomings:
                  - id: a17c1163d7e04d258fce6bac2c8bd3d6
                    scope: hook
                    size: 1
                    created: '2021-02-03T09:59:36.260Z'
                  - id: 73b56c93f1ff49fe880eeab4fe4c029b
                    scope: hook
                    size: 1
                    created: '2021-02-03T09:59:38.594Z'
                pg:
                  sortBy: created
                  limit: 10000
                  sortDir: asc
                  offset: 0
    delete:
      x-published: true
      tags:
        - Hooks > Incomings
      summary: Delete items from webhook queue
      description: >-
        Deletes items from the processing queue of the specified webhook.
        Specify the payload ID values that you want to delete in the request
        body in the `ids` array.


        You can set the `"all": true` pair to delete all items from the webhook
        processing queue. If you use the `"all": true` parameter, you have to
        specify the `confirmed=true` query parameter to confirm the deletion.
        Otherwise the API call returns the error IM004 (406).
         
        Add the `exceptIds` array to the request body to specify items you don't
        want to delete.


        The API call response will contain an error message if some of the
        specified queue items cannot be deleted. The rest of the specified items
        will be deleted. Deleting a webhook queue item is not allowed when the
        item is already being processed by the webhook.
      security:
        - token:
            - hooks:write
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: true
          description: >-
            Set to `true` to confirm deleting the webhook queue items. Otherwise
            the API call fails with the error IM004 (406).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  description: >-
                    The ID values of the webhook processing queue items that you
                    want to delete. Use the API call `GET
                    /hooks/{hookId}/incomings` to get the ID values of the
                    webhook processing queue items.
                exceptIds:
                  type: array
                  items:
                    type: string
                  description: >-
                    If you are deleting all of the incomplete executions with
                    the `all:true` parameter, you can specify the ID values of
                    the webhook queue items that you want to keep. Use the API
                    call `GET /hooks/{hookId}/incomings` to get the ID values of
                    the webhook queue items.
                all:
                  type: boolean
                  description: >-
                    Set to `true` to delete all items in the webhook processing
                    queue.
            examples:
              delete:
                summary: Delete queue items
                description: Delete webhook queue items.
                value:
                  ids:
                    - d1efa5318a034d36ad7cbeac543573cf
                    - 29d9a7410dff494ab739036f6c332335
                  exceptIds: []
                  all: false
              delete-with-error:
                summary: Delete error
                description: >-
                  The API call response will contain an error message if you try
                  to delete webhook queue items that Make is processing at the
                  moment. The rest of the incomplete execution items will be
                  deleted.
                value:
                  ids:
                    - 02731358e5ab4022aff040015a1f1a57
                    - dcf18b685e5c4095b9ee24cea09146d3
                  exceptIds: []
                  all: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  incomings:
                    type: array
                    items:
                      type: string
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              examples:
                delete:
                  value:
                    incomings:
                      - d1efa5318a034d36ad7cbeac543573cf
                      - 29d9a7410dff494ab739036f6c332335
                delete-with-error:
                  value:
                    incomings:
                      - 02731358e5ab4022aff040015a1f1a57
                      - dcf18b685e5c4095b9ee24cea09146d3
                    error:
                      name: APIError
                      message: >-
                        Some of the incoming messages could not be deleted
                        because they are being processed right now.
  /hooks/{hookId}/incomings/{incomingId}:
    get:
      x-published: true
      tags:
        - Hooks > Incomings
      summary: Get webhook queue item detail
      description: >-
        Retrieves detail information about the specified webhook queue item. You
        can get the webhook queue item ID value with the API call `GET
        /hooks/{hookId}/incomings`.
      security:
        - token:
            - hooks:read
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
        - name: incomingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            The ID value of the webhook queue item. Get the list of webhook
            queue items with the API call `GET /hooks/{hookId}/incomings`.
          example: 7a567f385d1a4f5ab7bff89162b7605e
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  incoming:
                    type: object
                    properties:
                      id:
                        type: string
                      scope:
                        type: string
                      size:
                        type: integer
                      created:
                        type: string
                        format: date-time
                      data:
                        type: object
              examples:
                detail-2:
                  summary: Binary queue item
                  description: >-
                    Detail of a webhook queue item that contains data in binary
                    format.
                  value:
                    incoming:
                      id: 7a567f385d1a4f5ab7bff89162b7605e
                      scope: hook
                      size: 31
                      created: '2020-03-05T14:48:10.537Z'
                      data:
                        value: >-
                          IMTBuffer(22, binary,
                          d4cf3d1cbf035278e7a1a909e71354d7a0387db9):
                          7b0a20202020226e616d65223a202274657374220a7d
                detail-1:
                  summary: JSON queue item
                  description: >-
                    Detail of a webhook queue item that contains data in the
                    JSON data format.
                  value:
                    incoming:
                      id: 8d88f6f5b0484908890ef11fe7e5bf63
                      scope: hook
                      size: 11
                      created: '2020-03-05T14:52:01.359Z'
                      data:
                        name: test
  /hooks/{hookId}/incomings/stats:
    get:
      x-published: true
      tags:
        - Hooks > Incomings
      summary: Get webhook queue stats
      description: >-
        Gets webhook processing queue stats. The response contains the number of
        items in the webhook queue and the webhook queue limit.
      security:
        - token:
            - hooks:read
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  incomingStat:
                    type: object
                    properties:
                      queue:
                        type: integer
                      limit:
                        type: integer
                      enabled:
                        type: boolean
              example:
                incomingStat:
                  queue: 2
                  limit: 10000
                  enabled: true
  /hooks/{hookId}/logs:
    get:
      x-published: true
      tags:
        - Hooks > Logs
      summary: Get webhook logs
      description: >-
        Retrieves a list of the specified webhook execution logs. Use the `to`
        and `from` parameters to filter the returned logs. The response
        contains:


        - `statusId`: the status of the webhook execution; `1` means successful
        execution, `3` means failed execution
         - `loggedAt`: the moment when Make created the log
         - `id`: the ID of the webhook execution log
      security:
        - token:
            - hooks:read
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
        - name: to
          in: query
          schema:
            type: integer
          example: 1663495749015
          description: >-
            Limits data in the response to entries older than the specified
            timestamp. Use the [UNIX
            timestamp](https://en.wikipedia.org/wiki/Unix_time) format in
            milliseconds.
        - name: from
          in: query
          schema:
            type: integer
          example: 1663495749015
          description: >-
            Limits data in the response to entries newer than the specified
            timestamp. Use the [UNIX
            timestamp](https://en.wikipedia.org/wiki/Unix_time) format in
            milliseconds.
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hookLogs:
                    type: array
                    items:
                      type: object
                      properties:
                        statusId:
                          type: integer
                        parser:
                          type: string
                        replayable:
                          type: boolean
                        sizes:
                          type: object
                          properties:
                            before:
                              type: integer
                            after:
                              type: integer
                        loggedAt:
                          type: string
                          format: date-time
                        udids:
                          type: array
                          items:
                            type: string
                        typeId:
                          type: integer
                        id:
                          type: integer
                        appParser:
                          type: string
                        imtId:
                          type: string
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                hookLogs:
                  - statusId: 1
                    parser: gateway-webhook
                    replayable: true
                    sizes:
                      before: 169
                      after: 169
                    loggedAt: '2022-09-01T13:37:19.344Z'
                    udids:
                      - 1oknbf9q7ctpjwrych332ump3ny4d66s
                    typeId: 3
                    id: 89ea4412db0119b205daf41c84eb2160
                    appParser: null
                    imtId: 1662039439344_N1ZF-YIBperJkDkkOJFc
                  - statusId: 3
                    parser: gateway-webhook
                    replayable: true
                    sizes:
                      before: 589
                      after: 589
                    loggedAt: '2022-09-01T13:36:19.344Z'
                    udids:
                      - 1oknbf9q7ctpjwrych332ump3ny4d66s
                    typeId: 3
                    id: 89ea4412db0119b205daf41c84eb1020
                    appParser: null
                    imtId: 2662039439344_N1ZF-YIBperJkDkkOkUv
                pg:
                  sortBy: loggedAt
                  limit: 25
                  sortDir: desc
                  offset: 0
  /hooks/{hookId}/logs/{logId}:
    get:
      x-published: true
      tags:
        - Hooks > Logs
      summary: Get webhook execution detail
      description: >-
        Retrieves the specified webhook execution log. The response contains:


        - `statusId`: the status of the webhook execution; `1` means successful
        execution, `3` means failed execution
         - `loggedAt`: the moment when Make created the log
         - `id`: the ID of the webhook execution log
         - `data`: information about the request, header, and payload sent to the webhook.

        Some webhooks don't return the `data` object due to their
        implementation. Most common examples include instant triggers for Slack,
        Zoom, Intercom and Facebook lead ads apps.
      security:
        - token:
            - hooks:read
      parameters:
        - name: hookId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the webhook. Use the `GET /hooks` API call to get the ID
            values of your webhooks.
          example: 654
        - name: logId
          in: path
          schema:
            type: string
          required: true
          description: >-
            The ID of the webhook execution log. Use the `GET
            /hooks/{hookId}/logs` API call to get the ID values of your webhook
            execution logs.
          example: 95b1c20c790ff5f9d2f1e805943ce95d
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hookLog:
                    type: object
                    properties:
                      statusId:
                        type: integer
                      parser:
                        type: string
                      replayable:
                        type: boolean
                      data:
                        type: object
                        properties:
                          request:
                            type: object
                            properties:
                              headers:
                                type: object
                                additionalProperties: {}
                              method:
                                type: string
                              query:
                                type: object
                                additionalProperties: {}
                              ip:
                                type: string
                              parsed:
                                type: string
                              body:
                                oneOf:
                                  - type: string
                                  - type: object
                                    additionalProperties: {}
                              url:
                                type: string
                          response:
                            type: object
                            properties:
                              headers:
                                type: array
                                items:
                                  type: string
                              body:
                                type: string
                              status:
                                type: integer
                      sizes:
                        type: object
                        properties:
                          before:
                            type: integer
                          after:
                            type: integer
                      loggedAt:
                        type: string
                        format: date-time
                      udids:
                        type: array
                        items:
                          type: string
                      typeId:
                        type: integer
                      id:
                        type: integer
                      appParser:
                        type: string
                      imtId:
                        type: string
              example:
                hookLog:
                  statusId: 1
                  parser: gateway-webhook
                  replayable: true
                  data:
                    request:
                      headers:
                        x-request-sample-header-item: 95b1c20c790ff5f9d2f1e805943ce95d
                      method: POST
                      query: {}
                      ip: 11.111.111.111
                      parsed: null
                      body:
                        value: Test
                      url: /1oknbf9q7ctpjwrych332ump3ny4d66r
                    response:
                      headers: []
                      body: Accepted
                      status: 200
                sizes:
                  before: 127
                  after: 127
                loggedAt: '2022-09-01T13:36:37.908Z'
                udids:
                  - 1oknbf9q7ctpjwrych332ump3ny4d66r
                typeId: 3
                id: 95b1c20c790ff5f9d2f1e805943ce95e
                appParser: null
                imtId: 1662039397908_DlZE-YIBperJkDkklpFj
  /imt/apps-meta:
    get:
      tags:
        - IMT
      summary: >-
        All verified and custom apps, that are available to current user or
        selected organisation.
      security:
        - token:
            - apps:read
      parameters:
        - name: skipSdkApps
          in: query
          schema:
            type: boolean
          required: false
          description: >
            If set to true, custom apps will be excluded from response. These
            are either apps developed by the requesters organisation

            or installed from a shared link
        - name: organizationId
          in: query
          schema:
            type: integer
          required: false
          description: >
            If set, return custom apps only from given organizationid, still
            returning all verified apps

            Has no effect if skipSdkApps is set to true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  apps:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          description: app name
                          type: string
                        label:
                          description: app label (title)
                          type: string
                        foreign:
                          description: true if the app is installed from an invite link
                          type: boolean
                        theme:
                          description: hex code of color theme for app
                          type: string
                        version:
                          description: app major version [number]
                          type: integer
                        isPrivate:
                          description: >-
                            true when application is developed by the requesters
                            organisation and has not been shared via an invite
                            link
                          type: boolean
                        app:
                          description: >-
                            true for custom apps - either private or installed
                            from an invite link, false for verified apps
                          type: boolean
                        categories:
                          description: >-
                            array of strings ['category1', 'category2'], NOT YET
                            IMPLEMENTED
                          type: array
                          items:
                            type: string
                        keywords:
                          description: string of keywords for the app, separated by ", "
                          type: string
                        premiumTier:
                          description: >-
                            level of premium [0-10], custom apps level defaults
                            to 0
                          type: integer
                        brand:
                          deprecated: true
                        coming_soon:
                          deprecated: true
              examples:
                meta:
                  value:
                    apps:
                      - name: my-custom-app-mn8qq6
                        label: My Custom App
                        foreign: false
                        theme: '#cccccc'
                        version: 1
                        isPrivate: true
                        app: true
                        categories: []
                        keywords: ''
                        premiumTier: 0
                        brand: {}
                        coming_soon: false
                      - name: airtable
                        label: Airtable
                        foreign: false
                        theme: '#18bfff'
                        version: 3
                        isPrivate: false
                        app: false
                        categories: []
                        keywords: ''
                        premiumTier: 0
                        brand: {}
                        coming_soon: false
                      - name: datastore
                        label: Data store
                        foreign: false
                        theme: '#2f8cbb'
                        version: 2
                        isPrivate: false
                        app: false
                        categories: []
                        keywords: 'database, datastore, Make, data, store, storage '
                        premiumTier: 0
                        brand: {}
                        coming_soon: false
  /keys:
    get:
      tags:
        - Keys
      summary: List
      description: ''
      security:
        - token:
            - keys:read
      parameters:
        - name: teamId
          in: query
          schema:
            type: integer
          required: true
          example: 1
        - name: typeName
          in: query
          schema:
            type: string
          example: basicauth
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - typeName
                - teamId
                - packageName
                - theme
          example: name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        typeName:
                          type: string
                        teamId:
                          type: integer
                        packageName:
                          type: string
                        theme:
                          type: string
                          format: color
              examples:
                list:
                  summary: List
                  value:
                    keys:
                      - id: 1
                        name: My HTTP Basic Auth key
                      - id: 2
                        name: My HTTP Basic Auth key
                list-all:
                  summary: List all
                  value:
                    keys:
                      - id: 1
                        name: My HTTP Basic Auth key
                        typeName: basicauth
                        teamId: 4
                        packageName: null
                        theme: '#007ee5'
                      - id: 2
                        name: My HTTP Basic Auth key
                        typeName: basicauth
                        teamId: 4
                        packageName: null
                        theme: '#007ee5'
    post:
      tags:
        - Keys
      summary: Create
      description: ''
      security:
        - token:
            - keys:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                teamId:
                  type: integer
                name:
                  type: string
                typeName:
                  type: string
                parameters:
                  type: object
              required:
                - teamId
                - name
                - typeName
            example:
              teamId: 1
              name: My HTTP Basic Auth key
              typeName: basicauth
              parameters:
                authUser: Martin
                authPass: xxx
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      typeName:
                        type: string
                      teamId:
                        type: integer
                      packageName:
                        type: string
                      theme:
                        type: string
                        format: color
              examples:
                create:
                  summary: Create
                  value:
                    key:
                      id: 17
                      name: My HTTP Basic Auth key
                      typeName: basicauth
                      teamId: 4
                      packageName: null
                      theme: '#007ee5'
  /keys/types:
    get:
      tags:
        - Keys
      summary: Types
      description: ''
      security:
        - token:
            - keys:read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  keysTypes:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        label:
                          type: string
                        parameters:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              label:
                                type: string
                              type:
                                type: string
                        componentType:
                          type: string
                        author:
                          type: string
                        version:
                          type: string
                        theme:
                          type: string
                          format: color
                        icon:
                          type: string
              example:
                keysTypes:
                  - name: basicauth
                    label: HTTP Basic Auth
                    parameters:
                      - name: authUser
                        label: Username
                        type: text
                      - name: authPass
                        label: Password
                        type: password
                    componentType: key
                    author: Petr Malimanek
                    version: 3.25.4
                    theme: '#007ee5'
                    icon: /img/packages/basicauth.png
                  - name: clientcertauth
                    label: HTTPS Client Certificate Auth
                    parameters:
                      - name: cert
                        label: Certificate
                        type: cert
                        validate:
                          pattern: >-
                            ^-----BEGIN CERTIFICATE-----[\s\S]+-----END
                            CERTIFICATE-----\n*$
                      - name: key
                        label: Private key
                        type: pkey
                        validate:
                          pattern: >-
                            ^-----BEGIN PRIVATE KEY-----[\s\S]+-----END PRIVATE
                            KEY-----\n*$
                    componentType: key
                    author: Petr Malimanek
                    version: 3.25.4
                    theme: '#007ee5'
                    icon: /img/packages/clientcertauth.png
                  - name: eet
                    label: EET
                    parameters:
                      - name: privateKey
                        type: pkey
                        label: Private Key
                        required: true
                      - name: certificate
                        type: cert
                        label: Certificate
                        required: true
                    componentType: key
                    author: Jakub Mrozek
                    version: 1.4.2
                    theme: '#ff001d'
                    icon: /img/packages/eet.png
  /keys/{keyId}:
    get:
      tags:
        - Keys
      summary: Get key details
      description: Retrieves details of a Key with the given ID.
      security:
        - token:
            - keys:read
      parameters:
        - name: keyId
          in: path
          schema:
            type: integer
          required: true
          description: The unique ID of the Key.
          example: 1
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - typeName
                - teamId
                - packageName
                - theme
          description: Specifies the group of values to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      typeName:
                        type: string
                      teamId:
                        type: integer
                      packageName:
                        type: string
                      theme:
                        type: string
                        format: color
              example:
                key:
                  id: 1
                  name: My Secret Key
                  typeName: digest-secret
                  teamId: 1
                  packageName: keychain-pro
                  theme: '#010399'
    patch:
      tags:
        - Keys
      summary: Partial update
      description: ''
      security:
        - token:
            - keys:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              name: HTTP Basic Auth key 2
      parameters:
        - name: keyId
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      typeName:
                        type: string
                      teamId:
                        type: integer
                      packageName:
                        type: string
                      theme:
                        type: string
                        format: color
              examples:
                partial-update:
                  summary: Partial update
                  value:
                    key:
                      id: 1
                      name: HTTP Basic Auth key 2
                      typeName: basicauth
                      teamId: 4
                      packageName: null
                      theme: '#007ee5'
    delete:
      tags:
        - Keys
      summary: Delete
      description: ''
      security:
        - token:
            - keys:write
      parameters:
        - name: keyId
          in: path
          schema:
            type: integer
          required: true
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: integer
              example:
                key: 16
  /notifications:
    get:
      x-published: true
      tags:
        - Notifications
      summary: List notifications
      description: >-
        Retrieves a collection of all notifications for the authenticated user.
        Returned notifications are sorted by ID in descending order.
      security:
        - token:
            - notifications:read
      parameters:
        - name: unreadOnly
          in: query
          schema:
            type: boolean
          description: >-
            If set to `true`, this parameter returns only the unread
            notifications.
          example: false
        - name: imtZoneId
          in: query
          schema:
            type: integer
          description: >-
            The unique ID of the Make zone. This parameter is required to
            retrieve notifications from the Make version. For other Make
            platforms, it can be ignored. The IDs of the zones can be obtained
            from the `/enum/imt-zones` endpoint.
          example: 2
        - description: >-
            The value that will be used to sort returned entities by.
            Notifications can be currently sorted only by ID.
          name: pg[sortBy]
          in: query
          schema:
            type: string
            enum:
              - id
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        subject:
                          type: string
                        read:
                          type: string
                          format: date-time
                        created:
                          type: string
                          format: date-time
                        type:
                          type: integer
                  userUnreadNotifications:
                    type: integer
                  userZoneNotifications:
                    type: array
                    items:
                      type: object
                      properties:
                        imtZoneId:
                          type: integer
                        unreadNotifications:
                          type: integer
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                notifications:
                  - id: '3'
                    subject: Encountered error in Integration HTTP scenario
                    read: '2021-05-14T11:35:22.837Z'
                    created: '2021-05-14T11:18:43.340Z'
                    type: 1
                  - id: '2'
                    subject: Encountered error in Integration HTTP scenario
                    read: null
                    created: '2021-05-14T11:17:04.433Z'
                    type: 1
                  - id: '1'
                    subject: Encountered error in Integration HTTP scenario
                    read: null
                    created: '2021-05-14T11:14:08.675Z'
                    type: 1
                userUnreadNotifications: 4
                userZoneNotifications:
                  - imtZoneId: 1
                    unreadNotifications: 4
                pg:
                  sortBy: id
                  limit: 10000
                  sortDir: desc
                  offset: 0
    delete:
      x-published: true
      tags:
        - Notifications
      summary: Delete notifications
      description: >-
        Deletes notifications with given IDs and returns their IDs in the
        response. This endpoint allows deleting one or more notifications at
        once.
      security:
        - token:
            - notifications:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: >-
                    The array with IDs of the notifications to delete. Since the
                    number of notifications can reach a `BigInt` and because of
                    the limitations of the Open API format, the IDs need to be
                    strings.
                  items:
                    type: string
              required:
                - ids
            example:
              ids:
                - '1'
                - '2'
                - '3'
      parameters:
        - name: imtZoneId
          in: query
          schema:
            type: integer
          description: >-
            The unique ID of the Make zone. This parameter is required to
            retrieve notifications from the Make version. For other Make
            platforms, it can be ignored. The IDs of the zones can be obtained
            from the `/enum/imt-zones` endpoint.
          example: 2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
              example:
                notifications:
                  - id: '1'
                  - id: '2'
  /notifications/{notificationId}:
    get:
      x-published: true
      tags:
        - Notifications
      summary: Get notification detail
      description: Retrieves details and full content of a notification with a given ID.
      security:
        - token:
            - notifications:read
      parameters:
        - name: notificationId
          in: path
          schema:
            type: string
          description: >-
            The unique ID of the notification. It can be retrieved from the
            [List notifications](/notifications) endpoint. Since the number of
            notifications can reach a `BigInt` and because of the limitations of
            the Open API format, the IDs need to be strings.
          required: true
          example: '3'
        - name: imtZoneId
          in: query
          schema:
            type: integer
          description: >-
            The unique ID of the Make zone. This parameter is required to
            retrieve notifications from the Make version. For other Make
            platforms, it can be ignored. The IDs of the zones can be obtained
            from the `/enum/imt-zones` endpoint.
          example: 2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification:
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: string
                          subject:
                            type: string
                          read:
                            type: string
                            format: date-time
                          created:
                            type: string
                            format: date-time
                          type:
                            type: integer
                      - type: object
                        properties:
                          body:
                            type: string
              example:
                notification:
                  id: '3'
                  subject: Encountered error in Integration HTTP 3 scenario
                  read: '2020-02-29T21:20:40.093Z'
                  created: '2020-01-22T13:54:29.748Z'
                  type: 1
                  body: >
                    <p>Your scenario <strong>Integration HTTP 3</strong> has
                    encountered an error.</p>

                    <p>The scenario has not been paused and continues to run
                    according to your settings. Nevertheless, you should pay
                    attention to the issue.</p>

                    <ul>

                    <li>Scenario: <a
                    href="https://local.make.cloud/scenario/86/log">Integration
                    HTTP 3</a></li>

                    <li>Organization: <a
                    href="https://local.make.cloud/organization/2">test
                    team</a></li>

                    <li>Team: <a href="https://local.make.cloud/team/1">My
                    Lab</a></li>

                    <li>Execution: <a
                    href="https://local.make.cloud/scenario/86/log/d4f49055d5f44705b2aaf77a09547b77">d4f49055d5f44705b2aaf77a09547b77</a></li>

                    </ul>

                    <p>Details:</p>

                    <ul>

                    <li><code>Validation failed for 1 parameter(s).</code></li>

                    <li><code>Missing value of required parameter
                    &#39;{{!expect.json.label}}&#39;.</code></li>

                    </ul>

                    <p>If you have questions or need help, please contact
                    us.</p>
  /notifications/mark-as-read:
    post:
      x-published: true
      tags:
        - Notifications
      summary: Mark all notifications as read
      description: >-
        Marks all notifications as read and returns the IDs of the updated
        notifications in the response.
      security:
        - token:
            - notifications:write
      parameters:
        - name: ids
          in: query
          schema:
            type: string
          description: >-
            Forces the request to mark all notifications as read. This parameter
            can only have the `all` value.
        - name: imtZoneId
          in: query
          schema:
            type: integer
          description: >-
            The unique ID of the Make zone. This parameter is required to
            retrieve notifications from the Make version. For other Make
            platforms, it can be ignored. The IDs of the zones can be obtained
            from the `/enum/imt-zones` endpoint.
          example: 2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
              example:
                notifications:
                  - id: '1'
                  - id: '2'
                  - id: '3'
                  - id: '4'
                  - id: '5'
  /oauth/auth/{connectionId}:
    post:
      tags:
        - Oauth
      summary: Authorize (deprecated)
      x-private: true
      deprecated: true
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
        - name: scope
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
              examples:
                authorize:
                  summary: Authorize
                  value:
                    url: https://www.some-sass-url.com/
    get:
      tags:
        - Oauth
      summary: Authorize
      x-private: true
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
        - name: scope
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '302':
          description: Redirect to connection's authorization page
  /oauth/reauth/{connectionId}:
    post:
      tags:
        - Oauth
      summary: Reauthorize (deprecated)
      x-private: true
      deprecated: true
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
        - name: scope
          in: query
          schema:
            oneOf:
              - type: array
                items:
                  type: string
              - type: string
          example: scope=value&scope=another_value
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
              examples:
                reauthorize:
                  summary: Reauthorize
                  value:
                    url: https://www.some-sass-url.com/
    get:
      tags:
        - Oauth
      summary: Reauthorize
      x-private: true
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
        - name: scope
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '302':
          description: Redirect to connection authorization page
  /oauth/extend/{connectionId}:
    post:
      tags:
        - Oauth
      summary: Extend (deprecated)
      x-private: true
      deprecated: true
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
              examples:
                extend:
                  summary: Extend
                  value:
                    url: https://www.some-sass-url.com/
    get:
      tags:
        - Oauth
      summary: Extend
      x-private: true
      parameters:
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
              examples:
                extend:
                  summary: Extend
                  value:
                    url: https://www.some-sass-url.com/
  /oauth/cb/{connectionType}:
    post:
      tags:
        - Oauth
      summary: Oauth Callback (deprecated)
      x-private: true
      deprecated: true
      parameters:
        - name: connectionType
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              examples:
                oauth-callback:
                  summary: Oauth Callback
                  value:
                    ok: 1
    get:
      tags:
        - Oauth
      summary: Oauth Callback
      x-private: true
      parameters:
        - name: connectionType
          in: path
          schema:
            type: string
          required: true
      responses:
        '302':
          description: Redirect to connection authorization page
  /oauth/cb/{connectionType}/{connectionId}:
    post:
      tags:
        - Oauth
      summary: Oauth Callback Id (deprecated)
      x-private: true
      deprecated: true
      parameters:
        - name: connectionType
          in: path
          schema:
            type: string
          required: true
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              examples:
                oauth-callback-id:
                  summary: Oauth Callback Id
                  value:
                    ok: 1
    get:
      tags:
        - Oauth
      summary: Oauth Callback Id
      x-private: true
      parameters:
        - name: connectionType
          in: path
          schema:
            type: string
          required: true
        - name: connectionId
          in: path
          schema:
            type: integer
          required: true
      responses:
        '302':
          description: Redirect to connection authorization page
  /organizations:
    get:
      x-published: true
      tags:
        - Organizations
      summary: List user organizations
      description: >-
        Retrieves a collection of all organizations, in which the user has
        membership. The response contains information about the organization
        `name`, `organizationId` and `timezoneId`. You can get more data about
        the user organizations with specifying the `cols[]` query parameter.


        However, the values for parameters `license`, `serviceName` and
        `isPaused` are returned only for organizations in your current Make
        zone.


        Returned organizations are sorted by the organization name in ascending
        order by default. You can specify sorting order with the query parameter
        `pg[sortBy].`
      security:
        - token:
            - organizations:read
      parameters:
        - name: zone
          in: query
          description: The URL of your Make instance domain.
          schema:
            type: string
          example: eu1.make.com
        - name: externalId
          in: query
          description: >-
            Make White Label product instances use the `externalId` parameter
            for security reasons. This parameter has `null` value in the public
            Make Cloud instance.
          schema:
            type: string
          examples:
            all-cols:
              value: TESTORG003
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            all-cols:
              value:
                - id
                - name
                - countryId
                - timezoneId
                - license
                - zone
                - serviceName
                - teams
                - isPaused
                - externalId
                - productName
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        serviceName:
                          type: string
                        nextReset:
                          type: string
                          format: date-time
                        lastReset:
                          type: string
                          format: date-time
                        isPaused:
                          type: boolean
                        countryId:
                          type: integer
                        timezoneId:
                          type: integer
                        deleted:
                          type: boolean
                        license:
                          type: object
                          additionalProperties: {}
                        zone:
                          type: string
                        teams:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                        productName:
                          type: string
                        scenarios:
                          type: integer
                        activeScenarios:
                          type: integer
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              examples:
                default-cols:
                  summary: Return default columns
                  description: >-
                    Return default set of information about all organizations in
                    which the user has membership.
                  value:
                    organizations:
                      - id: 5
                        name: New organization
                        timezoneId: 113
                      - id: 6
                        name: New organization
                        timezoneId: 113
                    pg:
                      sortBy: name
                      sortDir: asc
                      limit: 10000
                      offset: 0
                all-cols:
                  summary: Return all values
                  description: >-
                    Returns all available information about all organizations in
                    which the user has membership.
                  value:
                    organizations:
                      - name: New organization
                        id: 5
                        countryId: 1
                        timezoneId: 113
                        license:
                          apps: T2
                          users: 50
                          dslimit: 40
                          fslimit: 2147483648
                          iolimit: 10000
                          dsslimit: 524288000
                          fulltext: true
                          interval: 1
                          transfer: 1099511627776
                          operations: 800000000
                        zone: local.make.cloud
                        serviceName: unlimited
                        teams:
                          - id: 5
                            name: My Team
                        isPaused: false
                      - name: New organization
                        id: 6
                        countryId: 1
                        timezoneId: 113
                        license:
                          apps: T2
                          users: 50
                          dslimit: 40
                          fslimit: 2147483648
                          iolimit: 10000
                          dsslimit: 524288000
                          fulltext: true
                          interval: 1
                          transfer: 1099511627776
                          operations: 800000000
                        zone: local.make.cloud
                        serviceName: unlimited
                        teams:
                          - id: 6
                            name: My Team
                        isPaused: false
                    pg:
                      sortBy: name
                      sortDir: asc
                      limit: 10000
                      offset: 0
    post:
      x-published: true
      tags:
        - Organizations
      summary: Create an organization
      description: >-
        Create a new organization using the data sent in the request body.
        Successful response contains all information about the created
        organization.
      security:
        - token:
            - admin:write
            - organizations:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the organization.
                regionId:
                  type: integer
                  description: >-
                    ID of the Make region instance associated with the
                    organization. Get the list of Make regions with the API call
                    `GET /enums/imt-regions`.
                timezoneId:
                  type: integer
                  description: >-
                    The ID of the timezone associated with the organization. Get
                    the list of the timezone IDs with the API call `GET
                    /enums/timezones`.
                countryId:
                  type: integer
                  description: >-
                    The ID of the country associated with the organization. Get
                    the list of the country IDs with the API call `GET
                    /enums/countries`.
              required:
                - name
                - regionId
                - timezoneId
                - countryId
            example:
              name: New organization I
              regionId: 1
              timezoneId: 113
              countryId: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      serviceName:
                        type: string
                      nextReset:
                        type: string
                        format: date-time
                      lastReset:
                        type: string
                        format: date-time
                      isPaused:
                        type: boolean
                      countryId:
                        type: integer
                      timezoneId:
                        type: integer
                      deleted:
                        type: boolean
                      license:
                        type: object
                        additionalProperties: {}
                      zone:
                        type: string
                      teams:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                      productName:
                        type: string
                      scenarios:
                        type: integer
                      activeScenarios:
                        type: integer
              example:
                organization:
                  id: 9
                  name: New organization
                  timezoneId: 113
                  countryId: 1
                  license:
                    apps: []
                    users: 50
                    dslimit: 40
                    fslimit: 2147483648
                    iolimit: 10000
                    advsched: true
                    dsslimit: 524288000
                    fulltext: true
                    interval: 1
                    transfer: 1099511627776
                    operations: 800000000
                  zone: slave1.make.cloud
                  serviceName: default
                  teams:
                    - id: 6
                      name: My Team
                  isPaused: false
                userOrganizationRole:
                  userId: 3
                  organizationId: 9
                  usersRoleId: 11
                  invitation: null
  /organizations/invitation:
    get:
      tags:
        - Organizations
      summary: Invitation detail
      security:
        - token:
            - organizations:read
      parameters:
        - name: hash
          in: query
          schema:
            type: string
          required: true
          example: bf1effe1-bc9d-4ab3-9414-9c3b66175305
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      language:
                        type: string
                      timezoneId:
                        type: integer
                      localeId:
                        type: integer
                      countryId:
                        type: integer
                      features:
                        type: object
                        properties:
                          allow_apps:
                            type: boolean
                      avatar:
                        type: string
                        format: uri
                  userOrganizationRole:
                    type: object
                    properties:
                      userId:
                        type: integer
                      organizationId:
                        type: integer
                      usersRoleId:
                        type: integer
                      invitation:
                        type: string
              examples:
                invitation-detail:
                  summary: Invitation detail
                  value:
                    organization:
                      id: 13
                      name: New organization
                    user:
                      id: 1
                      name: Martin
                      email: admin@make.cloud
                      language: en
                      timezoneId: 113
                      localeId: 18
                      countryId: 1
                      features: {}
                      avatar: >-
                        https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm
                    userOrganizationRole:
                      userId: 1
                      organizationId: 13
                      usersRoleId: 12
                      invitation: pending
  /organizations/accept-invitation:
    post:
      tags:
        - Organizations
      summary: Accept invitation
      security:
        - token:
            - organizations:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hash:
                  type: string
              required:
                - hash
            example:
              hash: bf1effe1-bc9d-4ab3-9414-9c3b66175305
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      language:
                        type: string
                      timezoneId:
                        type: integer
                      localeId:
                        type: integer
                      countryId:
                        type: integer
                      features:
                        type: object
                        properties:
                          allow_apps:
                            type: boolean
                      avatar:
                        type: string
                        format: uri
                  userOrganizationRole:
                    type: object
                    properties:
                      userId:
                        type: integer
                      organizationId:
                        type: integer
                      usersRoleId:
                        type: integer
                      invitation:
                        type: string
              examples:
                accept-invitation:
                  summary: Accept invitation
                  value:
                    user:
                      id: 1
                      name: Martin
                      email: admin@make.cloud
                      language: en
                      timezoneId: 113
                      localeId: 18
                      countryId: 1
                      features: {}
                      avatar: >-
                        https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm
                    userOrganizationRole:
                      userId: 1
                      organizationId: 13
                      usersRoleId: 12
                      invitation: null
  /organizations/{organizationId}:
    get:
      x-published: true
      tags:
        - Organizations
      summary: Get organization details
      description: >-
        Retrieves detail information of the organization with the specified
        `organizationId`.
      security:
        - token:
            - organizations:read
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
        - name: wait
          in: query
          schema:
            type: boolean
          description: >-
            Set this parameter to `true` if you are using the API call `GET
            /organizations/{organizationId}` shortly after creating the
            organization. The API call will first check synchronization of the
            Make backend and your Make zone data. If you don't use this
            argument, the API call might fail with an error due to unfinished
            data synchronization. The default value of this argument is `false`.
          example: 'true'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      serviceName:
                        type: string
                      nextReset:
                        type: string
                        format: date-time
                      lastReset:
                        type: string
                        format: date-time
                      isPaused:
                        type: boolean
                      countryId:
                        type: integer
                      timezoneId:
                        type: integer
                      deleted:
                        type: boolean
                      license:
                        type: object
                        additionalProperties: {}
                      zone:
                        type: string
                      teams:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                      productName:
                        type: string
                      scenarios:
                        type: integer
                      activeScenarios:
                        type: integer
              example:
                organization:
                  id: 10
                  name: Organization 10
                  serviceName: unlimited
                  nextReset: null
                  operations: '0'
                  transfer: '0'
                  operationsExt: '0'
                  transferExt: '0'
                  unusedOperations: '0'
                  unusedTransfer: '0'
                  isPaused: false
                  countryId: 1
                  timezoneId: 113
                  deleted: false
                  license:
                    apps:
                      - T2
                      - T3
                    users: 50
                    dslimit: 40
                    fslimit: 2147483648
                    iolimit: 10000
                    dsslimit: 524288000
                    fulltext: true
                    interval: 1
                    transfer: 1099511627776
                    operations: 800000000
                  features: {}
                  zone: local.make.cloud
                  teams:
                    - id: 16
                      name: My Team
    patch:
      x-published: true
      tags:
        - Organizations
      summary: Update organization information
      description: >-
        Updates the organization data with the values in the request body. If
        you don't use a parameter in the request body, Make won't change its
        value. You can update organization name, timezone, and country with the
        `name`, `timezoneId`, and `countryId` parameters.


        Check the available values for the `timezoneId` and `countryId`
        parameters with the API calls `GET /enums/timezones` and `GET
        /enums/countries`.


        The request response returns all organization data.
      security:
        - token:
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the organization.
                countryId:
                  type: integer
                  description: >-
                    The ID of the country associated with the organization. Get
                    the list of the country IDs with the API call `GET
                    /enums/countries`.
                timezoneId:
                  type: integer
                  description: >-
                    The ID of the timezone associated with the organization. Get
                    the `timezoneId` values with the API call `GET
                    /enums/timezones`.
            example:
              name: Organization 10
              countryId: 1
              timezoneId: 113
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      serviceName:
                        type: string
                      nextReset:
                        type: string
                        format: date-time
                      lastReset:
                        type: string
                        format: date-time
                      isPaused:
                        type: boolean
                      countryId:
                        type: integer
                      timezoneId:
                        type: integer
                      deleted:
                        type: boolean
                      license:
                        type: object
                        additionalProperties: {}
                      zone:
                        type: string
                      teams:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                      productName:
                        type: string
                      scenarios:
                        type: integer
                      activeScenarios:
                        type: integer
              example:
                organization:
                  name: Organization 10
                  countryId: 1
                  timezoneId: 113
                  license:
                    apps: T2
                    users: 50
                    dslimit: 40
                    fslimit: 2147483648
                    iolimit: 10000
                    dsslimit: 524288000
                    fulltext: true
                    interval: 1
                    transfer: 1099511627776
                    operations: 800000000
                  zone: local.make.cloud
                  serviceName: limit1
                  teams:
                    - id: 10
                      name: My Team
                  isPaused: false
                  id: 10
    delete:
      x-published: true
      tags:
        - Organizations
      summary: Delete an organization
      description: >-
        Deletes the organization with the specified `organizationId`. Make also
        deletes all the teams in the organization. 
         You can only delete organizations that are associated with your current Make zone. Your current Make zone is specified in the API call URL. Currently, it is either: 
         - `eu1.make.com` 
         - `us1.make.com`
      security:
        - token:
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: true
          description: >-
            Set to `true` to confirm the organization deletion. Otherwise, if
            the organization has active scenarios, Make won't delete the
            organization and the API call returns an error.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization:
                    type: integer
              example:
                organization: 11
  /organizations/{organizationId}/apps:
    get:
      x-published: true
      tags:
        - Organizations
      summary: Get a list of custom apps
      description: >-
        Get list of custom apps associated with the users in the organization.
        The request response contains information of both published and
        unpublished custom apps. The custom app name is suffixed with a random
        text string.
      security:
        - token:
            - organizations:read
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  installedApps:
                    type: array
                    items:
                      type: object
                      properties:
                        appName:
                          type: string
                        appVersion:
                          type: integer
                        organizationId:
                          type: integer
                        installedAt:
                          type: string
                          format: date-time
                        installedBy:
                          type: integer
              example:
                installedApps:
                  - appName: custom-app-7xpqrg
                    appVersion: 1
                    organizationId: 11
                    installedAt: '2021-02-09T16:36:11.322Z'
                    installedBy: 1
  /organizations/{organizationId}/payments:
    get:
      tags:
        - Organizations
      summary: Get list of past payments
      security:
        - token:
            - organizations:read
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  payments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        invoice_number:
                          type: integer
                        created:
                          type: string
                          format: date-time
                        type_name:
                          type: string
                        status_name:
                          type: string
                        product_name:
                          type: object
                        payment_method:
                          type: object
                          properties:
                            type:
                              type: string
                            card:
                              type: object
                              properties:
                                brand:
                                  type: string
                                last4:
                                  type: string
                                country:
                                  type: string
                                network:
                                  type: string
                                exp_year:
                                  type: integer
                                exp_month:
                                  type: integer
                                fingerprint:
                                  type: string
                        amount_total:
                          type: number
                        currency_code:
                          type: string
                        invoice_url:
                          type: string
                        hosted_invoice_url:
                          type: string
                        period_from:
                          type: string
                          format: date
                        period_to:
                          type: string
                          format: date
              example:
                payments:
                  - id: in_1JqwmsAtYi1J9zZU7sIuH39K
                    invoice_number: 6B52691A-0002
                    created: '2021-10-25T13:42:55.110Z'
                    type_name: Invoice
                    status_name: Pending
                    product_name:
                      cs: FREE
                      en: FREE
                    payment_method:
                      type: card
                      card:
                        brand: visa
                        last4: '4242'
                        country: US
                        network: visa
                        exp_year: 2024
                        exp_month: 4
                        fingerprint: pxynXFWHTejV4FMT
                    amount_total: '666.00'
                    currency_code: usd
                    invoice_url: >-
                      https://stripe-upload-api.s3.us-west-1.amazonaws.com/uploads/file_1JqywUAtYi1J9zZUQpexvZno?response-content-disposition=attachment%3B%20filename%3D%22Invoice-6B52691A-0002.pdf%22%3B%20filename%2A%3DUTF-8%27%27Invoice-6B52691A-0002.pdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQOF7EIWLKRZD6LU3%2F20211101%2Fus-west-1%2Fs3%2Faws4_request&X-Amz-Date=20211101T114448Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEGwaCXVzLXdlc3QtMiJIMEYCIQCxou2KGsKnJG42r1NP3MiRrpQ00SPlcn1xZB6HHx3ppQIhAK%2FEX6XQcjDW0r8e4yKdtf3JaztyTyk6ekIUkYPiaHjcKvoDCBUQABoMMDMwNDY1NjA3MDYyIgwIY6ogrqimSlDlMhEq1wMukQCMF4exUATqXHwmmHC%2BmvZAIEbVes0%2FpMFjrg%2BEGul2ljp6GlR4o%2FBvIooJQ0fc2Z4gMLoHMeoLgO5l5Riy7Rg%2FltszuhaJqH%2Bynv%2Fjn1iuBs3LA3z2P2dyVjoEdLjGGWFoDFU%2BfPBCRPrZdlXPHoZTd%2BTNsE6cul%2F%2Fy6klQs0769cFzh03TyfCI1YzxhpSMNqSHZluWA9Cn45Z6u6Km4YpPEi4JSmuYVpzYT6rykyp1dD5S7YMQCg%2BGAGfnuz3fUy6WPh%2FO3CG5KbvEEI1CoDZ6t9jW4IwiBmRRjrso8E%2BMGo8Nc%2FsgddhRiq6QqzsgdEWsrqcMW5%2BVOTtOB%2F2xHXLm1Cq4REwezaViJcDWQFYB9Uw%2FJxa04JU0MD4iy5mjNu%2Bq5LetnLJOCrElb1GefXdHfDeJoBHPug2Ou9rCUU56xsK7T9r%2FL%2F1l0eUfp4NEoTTi6aRE%2FBURtoKTapY0yTizZiVudtYPYGA3Vi3PQlRWCrlvXFPyEk9fRzhpLMVWJbx24TTCN9BhuGAXSck1MFhSBnCpigp%2FPoZlzPQ2eKdKw6iaVbvSD1yf%2BXskhjVvEvdLtOy7Ov4mZH%2Btqq%2B335SkArhB8pkAIRWpLJHi1Kyx2aTj2kwiqP%2FiwY6pAF0q2OG7omGpklvNTB0UoyR2BijWKOGVjshqyC%2Fy6%2FeI3yuDy1Rrpi7nCGyx1f%2BISbgShoW19X2QxZg7oja6XvPj%2FppvKvNV%2BCAFG6fIolKDecD5SRs9jAO5%2FHqVa0TRfdS2m5R0jYKs5SCAn3UlPqbI02%2FKOuGqqIfcgiFCYXDTyRC8xgoqhcQYbKxxnaO7pkYXX3GcHvv%2FoMBtJJTU39EdlDlOw%3D%3D&X-Amz-Signature=8f16f7afe521ac90fa324304f18e4c7179d632fd7a04a1f051ff4710073c2cd9
                    hosted_invoice_url: >-
                      https://invoice.stripe.com/i/acct_1J0LwfAtYi1J9zZU/test_YWNjdF8xSjBMd2ZBdFlpMUo5elpVLF9LV2tkeG5FMm9tRFRvT29GN1ZlSXlhTFFSY1h4aEVG01000rqJfGhG
                    period_from: '2021-11-01T14:40:07.000Z'
                    period_to: '2021-11-01T14:40:07.000Z'
  /organizations/{organizationId}/single-payment-create:
    post:
      x-private: true
      tags:
        - Organizations
      summary: Create a single payment
      security:
        - token:
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                priceId:
                  type: number
                quantity:
                  type: number
                couponCode:
                  type: string
                doNotCharge:
                  type: boolean
                customer:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    name:
                      type: string
                    isBusiness:
                      type: boolean
                    companyName:
                      type: string
                    taxId:
                      type: string
                    countryId:
                      type: number
                    city:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postalCode:
                      type: string
                    state:
                      type: string
                  required:
                    - email
                    - name
                    - isBusiness
                    - countryId
              required:
                - priceId
                - quantity
            example:
              priceId: 200
              quantity: 1
              couponCode: extraopscoupon
              doNotCharge: false
              customer:
                email: customer@email.com
                name: John Doe
                isBusiness: false
                countryId: 1
                city: Prague
                line1: Some street 1
                line2: Citypart 2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /organizations/{organizationId}/subscription:
    get:
      tags:
        - Organizations
      summary: Get detail of an active subscription
      security:
        - token:
            - organizations:read
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                      nextBill:
                        type: string
                        format: datetime
                      price:
                        type: object
                        properties:
                          id:
                            type: number
                          price:
                            type: number
                          currencyCode:
                            type: string
                          period:
                            type: string
                      coupon:
                        type: object
                        properties:
                          validFrom:
                            type: string
                            format: datetime
                          validTo:
                            type: string
                            format: datetime
                          price:
                            type: number
                          currencyCode:
                            type: string
                          productId:
                            type: number
                          productName:
                            type: string
              example:
                product:
                  id: 1
                  name: FREE
                  nextBill: '2021-11-26T13:31:00.082Z'
                  price:
                    id: 1
                    price: '0.00'
                    currencyCode: USD
                    period: 1 month
                  coupon:
                    validFrom: '2021-12-12T10:47:05.334Z'
                    validTo: '2021-12-19T10:47:17.768Z'
                    price: '3.00'
                    currencyCode: usd
                    productId: 4
                    productName: Teams
    post:
      x-private: true
      tags:
        - Organizations
      summary: Create a new subscription
      security:
        - token:
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                priceId:
                  type: number
                couponCode:
                  type: string
                doNotCharge:
                  type: boolean
                customer:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    name:
                      type: string
                    isBusiness:
                      type: boolean
                    companyName:
                      type: string
                    taxId:
                      type: string
                    countryId:
                      type: number
                    city:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postalCode:
                      type: string
                    state:
                      type: string
                  required:
                    - email
                    - name
                    - isBusiness
                    - countryId
              required:
                - priceId
            example:
              priceId: 3
              couponCode: null
              doNotCharge: false
              customer:
                email: customer@email.com
                name: John Doe
                isBusiness: false
                countryId: 1
                city: Prague
                line1: Some street 1
                line2: Citypart 2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: number
                  url:
                    type: string
                  subscriptionId:
                    type: number
              example:
                sessionId: 123
                url: http://foo.bar
                subscriptionId: 519
    patch:
      x-private: true
      tags:
        - Organizations
      summary: Change subscription
      security:
        - token:
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                priceId:
                  type: number
                customer:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    name:
                      type: string
                    isBusiness:
                      type: boolean
                    companyName:
                      type: string
                    taxId:
                      type: string
                    countryId:
                      type: number
                    city:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postalCode:
                      type: string
                    state:
                      type: string
                  required:
                    - email
                    - name
                    - isBusiness
                    - countryId
              required:
                - priceId
            example:
              priceId: 3
              customer:
                email: customer@email.com
                name: John Doe
                isBusiness: false
                countryId: 1
                city: Prague
                line1: Some street 1
                line2: Citypart 2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
    delete:
      tags:
        - Organizations
      summary: Cancel the active subscription
      security:
        - token:
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /organizations/{organizationId}/subscription-free:
    post:
      x-private: true
      tags:
        - Organizations
      summary: Sets Free plan subscription
      security:
        - token:
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
        - name: confirmed
          in: query
          schema:
            type: boolean
          required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  customerId:
                    type: integer
                  subscriptionId:
                    type: integer
              example:
                customerId: 213
                subscriptionId: 371
  /organizations/{organizationId}/subscription/coupon-apply:
    post:
      x-private: true
      tags:
        - Organizations
      summary: Apply a coupon
      security:
        - token:
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
        - name: couponCode
          in: query
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    name:
                      type: string
                    isBusiness:
                      type: boolean
                    companyName:
                      type: string
                    taxId:
                      type: string
                    countryId:
                      type: number
                    city:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postalCode:
                      type: string
                    state:
                      type: string
                  required:
                    - email
                    - name
                    - isBusiness
                    - countryId
            example:
              customer:
                email: customer@email.com
                name: John Doe
                isBusiness: false
                countryId: 1
                city: Prague
                line1: Some street 1
                line2: Citypart 2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /organizations/{organizationId}/invite:
    post:
      x-published: true
      tags:
        - Organizations
      summary: Invite a user to the organization
      security:
        - token:
            - organizations:write
      description: >-
        Invite a user to the organization. To automatically add the user to
        teams, specify IDs of the teams. The user gets the team role **member**.
        You can change the user team role with the API call `POST
        /users/{userId}/user-team-roles/{teamId}`.
      parameters:
        - name: organizationId
          in: path
          description: The ID of the organization.
          schema:
            type: integer
          required: true
          example: 11
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usersRoleId:
                  type: integer
                  description: >-
                    The ID of the user organization role assigned to the invited
                    user. Get list of user role IDs from the API call `GET
                    /users/roles`.
                email:
                  type: string
                  description: The user registration email.
                  format: email
                name:
                  type: string
                  description: >-
                    The user name visible in the team and organization
                    interface.
                note:
                  type: string
                  description: Note added to the invitation.
                teamsId:
                  type: array
                  description: >-
                    The list of team IDs to which the invited user will be
                    assigned. The invited user will receive the team role
                    **member**.
                  items:
                    type: integer
              required:
                - name
                - email
                - userRoleId
            example:
              usersRoleId: 12
              email: tom@make.cloud
              name: Tom
              note: Hi Tom, please join our organization.
              teamsId:
                - 5
                - 26
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      language:
                        type: string
                      timezoneId:
                        type: integer
                      localeId:
                        type: integer
                      countryId:
                        type: integer
                      features:
                        type: object
                        properties:
                          allow_apps:
                            type: boolean
                      avatar:
                        type: string
                        format: uri
                  userOrganizationRole:
                    type: object
                    properties:
                      userId:
                        type: integer
                      organizationId:
                        type: integer
                      usersRoleId:
                        type: integer
                      invitation:
                        type: string
              example:
                user:
                  id: 31
                  name: Tom
                  email: tom@make.cloud
                  language: en
                  timezoneId: 113
                  localeId: 18
                  countryId: 1
                  features: {}
                  avatar: >-
                    https://secure.gravatar.com/avatar/ada7391afa4ad83584d00afe3986aef2.jpg?d=mm
                userOrganizationRole:
                  userId: 31
                  organizationId: 1
                  usersRoleId: 12
                  invitation: pending
                  organizationTeamsCount: 2
                  joinedTeamsCount: 1
  /organizations/{organizationId}/user-organization-roles:
    get:
      x-published: true
      tags:
        - Organizations > User organization roles
      summary: List user roles
      security:
        - token:
            - organizations:read
      description: >-
        Retrieves information about all users and their roles in the
        organization with the specified `organizationId`.
      parameters:
        - name: organizationId
          in: path
          description: The ID of the organization.
          schema:
            type: integer
          required: true
          example: 11
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            all-cols:
              value:
                - userId
                - organizationId
                - userRoleId
                - invitation
                - organizationTeamsCount
                - joinedTeamsCount
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userOrganizationRoles:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            userId:
                              type: integer
                            organizationId:
                              type: integer
                            usersRoleId:
                              type: integer
                            invitation:
                              type: string
                        - type: object
                          properties:
                            organizationTeamsCount:
                              type: integer
                            joinedTeamsCount:
                              type: integer
              examples:
                list:
                  summary: List user roles
                  description: >-
                    List all users and their roles in the specified
                    organization.
                  value:
                    userOrganizationRoles:
                      - userId: 1
                        organizationId: 11
                        usersRoleId: 11
                        invitation: null
                      - userId: 2
                        organizationId: 11
                        usersRoleId: 13
                        invitation: expired
                all-cols:
                  summary: Get all information
                  description: >-
                    Get all available information about every user role in the
                    specified organization.
                  value:
                    userOrganizationRoles:
                      - userId: 1
                        organizationId: 11
                        usersRoleId: 11
                        invitation: null
                        organizationTeamsCount: 2
                        joinedTeamsCount: 2
                      - userId: 2
                        organizationId: 11
                        usersRoleId: 13
                        invitation: expired
                        organizationTeamsCount: 2
                        joinedTeamsCount: 0
  /organizations/{organizationId}/user-organization-roles/{userId}:
    get:
      x-published: true
      tags:
        - Organizations > User organization roles
      summary: Get user organization role details
      description: >-
        Retrieves information about a user role in an organization with the
        specified `userId` and `organizationId`. Get all user role IDs with the
        API call `GET users/roles`.
      security:
        - token:
            - organizations:read
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
        - name: userId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the user.
          example: 111
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            all-cols:
              value:
                - userId
                - organizationId
                - userRoleId
                - invitation
                - organizationTeamsCount
                - joinedTeamsCount
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userOrganizationRole:
                    allOf:
                      - type: object
                        properties:
                          userId:
                            type: integer
                          organizationId:
                            type: integer
                          usersRoleId:
                            type: integer
                          invitation:
                            type: string
                      - type: object
                        properties:
                          organizationTeamsCount:
                            type: integer
                          joinedTeamsCount:
                            type: integer
              examples:
                detail:
                  summary: Get user role detail
                  description: >-
                    Returns information about the role of the specified user in
                    the organization.
                  value:
                    userOrganizationRole:
                      userId: 111
                      organizationId: 11
                      usersRoleId: 11
                      invitation: null
                all-cols:
                  summary: Get all available information
                  description: >-
                    Returns all available information about the user role in the
                    organization.
                  value:
                    userOrganizationRole:
                      userId: 111
                      organizationId: 11
                      usersRoleId: 11
                      invitation: null
                      organizationTeamsCount: 2
                      joinedTeamsCount: 2
  /organizations/{organizationId}/user-organization-roles/transfer:
    post:
      x-published: true
      tags:
        - Organizations > User organization roles
      summary: Transfer organization ownership
      description: >-
        Transfer organization ownership to the specified user. Only the user
        that has the user role "Owner" in the organization can transfer
        ownership.
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: The ID of the user.
              required:
                - userId
            example:
              userId: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userOrganizationRoles:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: integer
                        organizationId:
                          type: integer
                        usersRoleId:
                          type: integer
                        invitation:
                          type: string
              example:
                userOrganizationRoles:
                  - userId: 12
                    organizationId: 10
                    usersRoleId: 11
                    invitation: null
                  - userId: 1
                    organizationId: 10
                    usersRoleId: 12
                    invitation: null
  /organizations/{organizationId}/sso-certificates:
    get:
      x-published: false
      tags:
        - SSO certificates
      summary: Get SSO certificates
      security:
        - token:
            - organizations:read
      description: Get all SSO certificates.
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
        - name: type
          in: query
          schema:
            type: string
          required: true
          description: Type of SSO certificate.
          example: saml
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
              example:
                ssoCertificates:
                  - id: 4
                    type: saml
                    validFrom: 2024-01-29T22:10:51.903Z
                    validTo: 2026-03-01T22:10:51.903Z
                    certificate: >-
                      QOIHAD4CB0igAWIBAgIQSmIEMVCBvWhuNu5CWs4gQzANBgkqhkiG9w0BAQwFADBDMQswCQYDVQQGEwJDWjEWMBQGA1UEChMNQWxwaXJvIHMuci5vLjEcMBoGA1UEAxMTQWxwaXJvU1NMIFJTQSBEViBDQTAeFw0yMjA0MDUwMDAwMDBaFw0yMzA0MDUyMzU5NTlaMB8xHTAbBgNVBAMTFHVzMS5tYWtlLmNlbG9uaXMuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArgM5r629dzv9i8kYffmLgd5+PRfvMkiBAPPVUd72k5oebCoJRhLFkvi/pmzgmAhS1hWp7G5y6rv0sKInj8x92Dp8JKIn1E0gHeoG6r1boLoJ7MOqAeEQZLESTmeMEzzcbn81OcTU0/wNZMvOEOxeC6slf/6wszy2W6xLgpnyj2z7LZXuV00ICOSH5F9UyH8Za+be4JI22w3DVlK4c9Y/lWsp2psjEv5BZUS3+++YJhniL7I5YfZwEg92KECOicc6fkSfIVFLnABbIoA0/+lYEGUxl9oZ45e1TcBvtvJyPs58sAIKMRqJ8v+u5hQFksF0Qqtc5L9wtb88FS5j8ormAwIDAQABo4IDEjCCAw4wHwYDVR0jBBgwFoAUE5wiOqhkQBcstSaY2gXJNSUrv1swHQYDVR0OBBYEFJEbmZiFaAjBGHKajL/+FkRr0B2sMA4GA1UdDwEB/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBJBgNVHSAEQjBAMDQGCysGAQQBsjEBAgJXMCUwIwYIKwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAgGBmeBDAECATB6BggrBgEFBQcBAQRuMGwwPgYIKwYBBQUHMAKGMmh0dHA6Ly9hbHBpcm8uY3J0LnNlY3RpZ28uY29tL0FscGlyb1NTTFJTQURWQ0EuY3J0MCoGCCsGAQUFBzABhh5odHRwOi8vYWxwaXJvLm9jc3Auc2VjdGlnby5jb20wggF+BgorBgEEAdZ5AgQCBIIBbgSCAWoBaAB1AK33vvp8/xDIi509nB4+GGq0Zyldz7EMJMqFhjTr3IKKAAABf/nur+8AAAQDAEYwRAIgGw3CjbX7xKIzKNN6Ev1YVCa5f+4OrxH9AppgHj6oefECIEtJUMjb2pn27kslObbMKQLmeP6aNufHGyhjxyt4Zi+3AHYAejKMVNi3LbYg6jjgUh7phBZwMhOFTTvSK8E6V6NS61IAAAF/+e6v9wAABAMARzBFAiBVtaS7cTyK1egJWsyhkXZnbNzji0GfPCt90A//L2u8VgIhAI5wDbveymAq8rDV1jCDTpeRCEKOCfhhV66u2in/GhpZAHcA6D7Q2j71BjUy51covIlryQPTy9ERa+zraeF3fW0GvW4AAAF/+e6vzgAABAMASDBGAiEA0+7dcwKmgfY2QzKaXloyMjbDgnXk2nVBStQSY9Q+LSUCIQCu9YAC4fmabUyKPth/pZ/T9vgBGTPCMJo/WOybAaZnOTBGBgNVHREEPzA9ghR1czEubWFrZS5jZWxvbmlzLmNvbYIlZW50ZXJwcmlzZS51czEuaW50ZWdyb21hdC5jZWxvbmlzLmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAkr375yZ1G1GmSWUeYm7aPmfJeqBPrL/SJyQRMFTU2K9K3uJqgmMSQ9RVoi3pM2tKhqTAPYaX1Jnbv1594JPI+GdsSAFX/B8zJppXzkL7sqxWuBj474PFobptJzmtLPJMKIgMypmQ9sbJwIz/LyXGLeJ9yMURyZvw4+g9X1BM8hn8CR83E/ecdnfYcPra2V436lB3HfNSUiw+lFMY6364dCFhPxcrlWfFwhzUGas5dVDl+TR4jpRlLFCk7AQQodyVXInDWZZCNnay1OZha9wtBN0mUos4GLcsNBXYPS/0Wc8LfkFEKDXFlohSb3Wm5wjMPVhdBMixZh7/J2a+H9GNy+bJpWQFf23SgPzHivY1SpFhyeTPwVVarUcbpEDOLKVjQ7DjK3NBf6hIVNwNPk2XAXF5tt7fn1qiPRBJlAwzvm9hzgAIckBg6eS8rG3JYCbp1btVF4HcXO2TFRuqcTbE9BQVuJsafpZ9w8kLPF/zj7IJvSoXiC5iu9VrkbCr4emE+ZnlIkwlfcKqJF7Id+PaSTbpIx9ER8dPSPWqKwjXwi2o15xpOyxYcfUa50bkolkflygezH4+8E4kGcUTk/cmWcLFnBOL5veQF0vZby77+ZtK1rX8P+bb6vw1/QU5nbmp5biuTTuMEVT0Jy1Zq9zdYwrFYc2q+zY8ry/64U1Fmn11
                    status: active
                    deactivationDate: null
                  - id: 3
                    type: saml
                    validFrom: 2023-01-29T22:10:51.903Z
                    validTo: 2025-03-01T22:10:51.903Z
                    certificate: >-
                      AOIHAD4CB0igAWIBAgIQSmIEMVCBvWhuNu5CWs4gQzANBgkqhkiG9w0BAQwFADBDMQswCQYDVQQGEwJDWjEWMBQGA1UEChMNQWxwaXJvIHMuci5vLjEcMBoGA1UEAxMTQWxwaXJvU1NMIFJTQSBEViBDQTAeFw0yMjA0MDUwMDAwMDBaFw0yMzA0MDUyMzU5NTlaMB8xHTAbBgNVBAMTFHVzMS5tYWtlLmNlbG9uaXMuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArgM5r629dzv9i8kYffmLgd5+PRfvMkiBAPPVUd72k5oebCoJRhLFkvi/pmzgmAhS1hWp7G5y6rv0sKInj8x92Dp8JKIn1E0gHeoG6r1boLoJ7MOqAeEQZLESTmeMEzzcbn81OcTU0/wNZMvOEOxeC6slf/6wszy2W6xLgpnyj2z7LZXuV00ICOSH5F9UyH8Za+be4JI22w3DVlK4c9Y/lWsp2psjEv5BZUS3+++YJhniL7I5YfZwEg92KECOicc6fkSfIVFLnABbIoA0/+lYEGUxl9oZ45e1TcBvtvJyPs58sAIKMRqJ8v+u5hQFksF0Qqtc5L9wtb88FS5j8ormAwIDAQABo4IDEjCCAw4wHwYDVR0jBBgwFoAUE5wiOqhkQBcstSaY2gXJNSUrv1swHQYDVR0OBBYEFJEbmZiFaAjBGHKajL/+FkRr0B2sMA4GA1UdDwEB/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBJBgNVHSAEQjBAMDQGCysGAQQBsjEBAgJXMCUwIwYIKwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAgGBmeBDAECATB6BggrBgEFBQcBAQRuMGwwPgYIKwYBBQUHMAKGMmh0dHA6Ly9hbHBpcm8uY3J0LnNlY3RpZ28uY29tL0FscGlyb1NTTFJTQURWQ0EuY3J0MCoGCCsGAQUFBzABhh5odHRwOi8vYWxwaXJvLm9jc3Auc2VjdGlnby5jb20wggF+BgorBgEEAdZ5AgQCBIIBbgSCAWoBaAB1AK33vvp8/xDIi509nB4+GGq0Zyldz7EMJMqFhjTr3IKKAAABf/nur+8AAAQDAEYwRAIgGw3CjbX7xKIzKNN6Ev1YVCa5f+4OrxH9AppgHj6oefECIEtJUMjb2pn27kslObbMKQLmeP6aNufHGyhjxyt4Zi+3AHYAejKMVNi3LbYg6jjgUh7phBZwMhOFTTvSK8E6V6NS61IAAAF/+e6v9wAABAMARzBFAiBVtaS7cTyK1egJWsyhkXZnbNzji0GfPCt90A//L2u8VgIhAI5wDbveymAq8rDV1jCDTpeRCEKOCfhhV66u2in/GhpZAHcA6D7Q2j71BjUy51covIlryQPTy9ERa+zraeF3fW0GvW4AAAF/+e6vzgAABAMASDBGAiEA0+7dcwKmgfY2QzKaXloyMjbDgnXk2nVBStQSY9Q+LSUCIQCu9YAC4fmabUyKPth/pZ/T9vgBGTPCMJo/WOybAaZnOTBGBgNVHREEPzA9ghR1czEubWFrZS5jZWxvbmlzLmNvbYIlZW50ZXJwcmlzZS51czEuaW50ZWdyb21hdC5jZWxvbmlzLmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAkr375yZ1G1GmSWUeYm7aPmfJeqBPrL/SJyQRMFTU2K9K3uJqgmMSQ9RVoi3pM2tKhqTAPYaX1Jnbv1594JPI+GdsSAFX/B8zJppXzkL7sqxWuBj474PFobptJzmtLPJMKIgMypmQ9sbJwIz/LyXGLeJ9yMURyZvw4+g9X1BM8hn8CR83E/ecdnfYcPra2V436lB3HfNSUiw+lFMY6364dCFhPxcrlWfFwhzUGas5dVDl+TR4jpRlLFCk7AQQodyVXInDWZZCNnay1OZha9wtBN0mUos4GLcsNBXYPS/0Wc8LfkFEKDXFlohSb3Wm5wjMPVhdBMixZh7/J2a+H9GNy+bJpWQFf23SgPzHivY1SpFhyeTPwVVarUcbpEDOLKVjQ7DjK3NBf6hIVNwNPk2XAXF5tt7fn1qiPRBJlAwzvm9hzgAIckBg6eS8rG3JYCbp1btVF4HcXO2TFRuqcTbE9BQVuJsafpZ9w8kLPF/zj7IJvSoXiC5iu9VrkbCr4emE+ZnlIkwlfcKqJF7Id+PaSTbpIx9ER8dPSPWqKwjXwi2o15xpOyxYcfUa50bkolkflygezH4+8E4kGcUTk/cmWcLFnBOL5veQF0vZby77+ZtK1rX8P+bb6vw1/QU5nbmp5biuTTuMEVT0Jy1Zq9zdYwrFYc2q+zY8ry/64U1Fmn11
                    status: active
                    deactivationDate: 2025-09-29T22:10:51.903Z
                  - id: 2
                    type: saml
                    validFrom: 2024-02-01T22:10:51.903Z
                    validTo: 2025-08-01T22:10:51.903Z
                    certificate: >-
                      11=UAD4CB0igAWIBAgIQSmIEMVCBvWhuNu5CWs4gQzANBgkqhkiG9w0BAQwFADBDMQswCQYDVQQGEwJDWjEWMBQGA1UEChMNQWxwaXJvIHMuci5vLjEcMBoGA1UEAxMTQWxwaXJvU1NMIFJTQSBEViBDQTAeFw0yMjA0MDUwMDAwMDBaFw0yMzPlMDUyMzU5NTlaMB8xHTAbBgNVBAMTFHVzMS5tYWtlLmNlbG9uaXMuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArgM5r629dzv9i8kYffmLgd5+PRfvMkiBAPPVUd72k5oebCoJRhLFkvi/pmzgmAhS1hWp7G5y6rv0sKInj8x92Dp8JKIn1E0gHeoG6r1boLoJ7MOqAeEQZLESTmeMEzzcbn81OcTU0/wNZMvOEOxeC6slf/6wszy2W6xLgpnyj2z7LZXuV00ICOSH5F9UyH8Za+be4JI22w3DVlK4c9Y/lWsp2psjEv5BZUS3+++YJhniL7I5YfZwEg92KECOicc6fkSfIVFLnABbIoA0/+lYEGUxl9oZ45e1TcBvtvJyPs58sAIKMRqJ8v+u5hQFksF0Qqtc5L9wtb88FS5j8ormAwIDAQABo4IDEjCCAw4wHwYDVR0jBBgwFoAUE5wiOqhkQBcstSaY2gXJNSUrv1swHQYDVR0OBBYEFJEbmZiFaAjBGHKajL/+FkRr0B2sMA4GA1UdDwEB/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBJBgNVHSAEQjBAMDQGCysGAQQBsjEBAgJXMCUwIwYIKwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAgGBmeBDAECATB6BggrBgEFBQcBAQRuMGwwPgYIKwYBBQUHMAKGMmh0dHA6Ly9hbHBpcm8uY3J0LnNlY3RpZ28uY29tL0FscGlyb1NTTFJTQURWQ0EuY3J0MCoGCCsGAQUFBzABhh5odHRwOi8vYWxwaXJvLm9jc3Auc2VjdGlnby5jb20wggF+BgorBgEEAdZ5AgQCBIIBbgSCAWoBaAB1AK33vvp8/xDIi509nB4+GGq0Zyldz7EMJMqFhjTr3IKKAAABf/nur+8AAAQDAEYwRAIgGw3CjbX7xKIzKNN6Ev1YVCa5f+4OrxH9AppgHj6oefECIEtJUMjb2pn27kslObbMKQLmeP6aNufHGyhjxyt4Zi+3AHYAejKMVNi3LbYg6jjgUh7phBZwMhOFTTvSK8E6V6NS61IAAAF/+e6v9wAABAMARzBFAiBVtaS7cTyK1egJWsyhkXZnbNzji0GfPCt90A//L2u8VgIhAI5wDbveymAq8rDV1jCDTpeRCEKOCfhhV66u2in/GhpZAHcA6D7Q2j71BjUy51covIlryQPTy9ERa+zraeF3fW0GvW4AAAF/+e6vzgAABAMASDBGAiEA0+7dcwKmgfY2QzKaXloyMjbDgnXk2nVBStQSY9Q+LSUCIQCu9YAC4fmabUyKPth/pZ/T9vgBGTPCMJo/WOybAaZnOTBGBgNVHREEPzA9ghR1czEubWFrZS5jZWxvbmlzLmNvbYIlZW50ZXJwcmlzZS51czEuaW50ZWdyb21hdC5jZWxvbmlzLmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAkr375yZ1G1GmSWUeYm7aPmfJeqBPrL/SJyQRMFTU2K9K3uJqgmMSQ9RVoi3pM2tKhqTAPYaX1Jnbv1594JPI+GdsSAFX/B8zJppXzkL7sqxWuBj474PFobptJzmtLPJMKIgMypmQ9sbJwIz/LyXGLeJ9yMURyZvw4+g9X1BM8hn8CR83E/ecdnfYcPra2V436lB3HfNSUiw+lFMY6364dCFhPxcrlWfFwhzUhh$5dVDl+UR4jpRlLFCk7AQQodyVXInDWZZCNnay1OZha9wtBN0mUos4GLcsNBXYPS/0Wc8LfkFEKDXFlohSb3Wm5wjMPVhdBMixZh7/J2a+H9GNy+bJpWQFf23SgPzHivY1SpFhyeTPwVVarUcbpEDOLKVjQ7DjK3NBf6hIVNwNPk2XAXF5tt7fn1qiPRBJlAwzvm9hzgAIckBg6eS8rG3JYCbp1btVF4HcXO2TFRuqcTbE9BQVuJsafpZ9w8kLPF/zj7IJvSoXiC5iu9VrkbCr4emE+ZnlIkwlfcKqJF7Id+PaSTbpIx9ER8dPSPWqKwjXwi2o15xpOyxYcfUa50bkolkflygezH4+8E4kGcUTk/cmWcLFnBOL5veQF0vZby77+ZtK1rX8P+bb6vw1/QU5nbmp5biuTTuMEVT0Jy1Zq9zdYwrFYc2q+zY8ry/64U1Fqq9M
                    status: inactive
                    deactivationDate: null
  /organizations/{organizationId}/test-clock:
    get:
      x-private: true
      tags:
        - Organizations
      summary: Retrieve a test clock (TEST ONLY)
      security:
        - token:
            - organizations:read
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  testClock:
                    type: object
                    properties:
                      id:
                        type: string
                      object:
                        type: string
                      created:
                        type: integer
                      deletes_after:
                        type: integer
                      frozen_time:
                        type: integer
                      livemode:
                        type: boolean
                      status:
                        type: string
              example:
                testClock:
                  id: clock_1KrL3oAtYi1J9zZUiK1TLd3g
                  object: test_helpers.test_clock
                  created: 1650628444
                  deletes_after: 1653220444
                  frozen_time: 1650666666
                  livemode: false
                  status: ready
  /organizations/{organizationId}/test-clock/advance:
    post:
      x-private: true
      tags:
        - Organizations
      summary: Advance a test clock (TEST ONLY)
      security:
        - token:
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timestampInSeconds:
                  type: number
              required:
                - timestampInSeconds
            example:
              timestampInSeconds: 1650666666
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /organizations/{organizationId}/test-pause-unpause:
    post:
      x-private: true
      tags:
        - Organizations
      summary: Trigger a pause/unpause task for an specific organization (TEST ONLY)
      security:
        - token:
            - organizations:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /organizations/{organizationId}/variables:
    get:
      x-published: true
      tags:
        - Organizations
      summary: List organization variables
      description: >-
        Retrieves the collection of organization variables. The response
        contains all organization variables if your account has the custom
        variables feature available. Otherwise, the response contains only Make
        system variables.


        Check availability of the custom variables feature with the API call
        `GET /organizations/{organizationId}`. If the response contains
        `"customVariables": true` pair in the `license` object then you have
        access to the custom variables feature.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for Make
        pricing plans overview.
      security:
        - token:
            - organization-variables:read
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizationVariables:
                    type: object
                    properties:
                      typeId:
                        type: integer
                      name:
                        type: string
                      value:
                        oneOf:
                          - type: string
                          - type: boolean
                          - type: number
                          - type: object
                            additionalProperties: {}
                          - type: array
                            items: {}
                      isSystem:
                        type: boolean
              example:
                organizationVariables:
                  name: userId
                  typeId: 1
                  value: 123
                  isSystem: false
    post:
      x-published: true
      tags:
        - Organizations
      summary: Create organization variable
      description: >-
        Creates new organization variable. You can check the availability of the
        custom variables feature with the API call `GET
        /organizations/{organizationId}`. If the response contains
        `"customVariables": true` pair in the `license` object then you have
        access to the custom variables feature.


        A successful response contains all information about the new variable.
        If you don't have the custom variables feature available then the API
        call returns the error 404.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for Make
        pricing plans overview.
      security:
        - token:
            - organization-variables:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                typeId:
                  type: number
                  description: >-
                    Number representing the type of the custom variable. The
                    mapping of `typeId` and variable types is as follows:


                    - 1: `number`,
                     - 2: `string`,
                     - 3: `boolean`,
                     - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`.
                value:
                  oneOf:
                    - type: string
                    - type: boolean
                    - type: number
                    - type: object
                      additionalProperties: {}
                    - type: array
                      items: {}
                  description: Value assigned to the custom variable.
                name:
                  type: string
                  description: >-
                    The name of the variable. You can use letters, digits, `$`
                    and `_` characters in the custom variable name.
            example:
              typeId: 1
              value: 123
              name: userId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizationVariable:
                    type: object
                    properties:
                      typeId:
                        type: integer
                      name:
                        type: string
                      value:
                        oneOf:
                          - type: string
                          - type: boolean
                          - type: number
                          - type: object
                            additionalProperties: {}
                          - type: array
                            items: {}
                      isSystem:
                        type: boolean
              example:
                organizationVariable:
                  name: userId
                  typeId: 1
                  value: 123
                  isSystem: false
  /organizations/{organizationId}/variables/{variableName}:
    patch:
      x-published: true
      tags:
        - Organizations
      summary: Update organization variable
      description: >-
        Updates custom organization variable with the specified variable `name`.
        Only parameters specified in the request body are updated.


        You can check the availability of the custom variables feature with the
        API call `GET /organizations/{organizationId}`. If the response contains
        `"customVariables": true` pair in the `license` object then you have
        access to the custom variables feature.


        A successful response contains all information about the updated
        variable. If you don't have the custom variables feature available then
        the API call returns the error 404.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for the
        Make pricing plans overview.


        Update the variable `typeId` accordingly when you are updating the
        variable `value`. Make checks whether the variable type and value match
        in the request body. There is no check for incorrect variable type when
        you update only variable value and _vice versa_.
      security:
        - token:
            - organization-variables:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
        - name: variableName
          in: path
          schema:
            type: string
          required: true
          description: The name of the custom variable.
          example: userID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                typeId:
                  type: number
                  description: >-
                    Number representing the type of the custom variable. The
                    mapping of `typeId` and variable types is as follows:


                    - 1: `number`,
                     - 2: `string`,
                     - 3: `boolean`,
                     - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`.
                value:
                  oneOf:
                    - type: string
                    - type: boolean
                    - type: number
                    - type: object
                      additionalProperties: {}
                    - type: array
                      items: {}
                  description: Value assigned to the custom variable.
            example:
              value: 251
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizationVariable:
                    type: object
                    properties:
                      typeId:
                        type: integer
                      name:
                        type: string
                      value:
                        oneOf:
                          - type: string
                          - type: boolean
                          - type: number
                          - type: object
                            additionalProperties: {}
                          - type: array
                            items: {}
                      isSystem:
                        type: boolean
              example:
                organizationVariable:
                  name: userId
                  typeId: 1
                  value: 251
    delete:
      x-published: true
      tags:
        - Organizations
      summary: Delete organization variable
      description: >-
        Deletes organization variable.
         
        If you don't have the custom variables feature available then the API
        call returns the error 404. Check the availability of the custom
        variables feature with the API call `GET
        /organizations/{organizationId}`. If the response contains
        `"customVariables": true` pair in the `license` object then you have
        access to the custom variables feature.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for Make
        pricing plans overview.
      security:
        - token:
            - organization-variables:write
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
        - name: variableName
          in: path
          schema:
            type: string
          required: true
          description: The name of the custom variable.
          example: userID
        - name: confirmed
          in: query
          schema:
            type: boolean
          description: >-
            Set to `true` to confirm deleting the custom variable. Otherwise the
            API call fails with the error IM004 (406).
          example: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /organizations/{organizationId}/variables/{variableName}/history:
    get:
      x-published: true
      tags:
        - Organizations
      summary: History of custom variable updates
      description: >-
        Gets the history of updates of the specified custom variable. The
        response contains the ID value of the variable history entry and a
        `diffObject`. The `diffObject` contains:


        - the original value,
         - the new value,
         - the timestamp of the update,
         - the author of the update.

        If the variable doesn't have any updates, the `diffObject` contains the
        current value of the variable instead of the original and new values.


        The update history entries are sorted from newest to latest.
      security:
        - token:
            - organization-variables:read
      parameters:
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
        - name: variableName
          in: path
          schema:
            type: string
          required: true
          description: The name of the custom variable.
          example: userID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizationVariableHistory:
                    type: array
                    items:
                      oneOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                            diffObject:
                              type: object
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
                                typeId:
                                  type: integer
                            changed:
                              type: string
                              format: date
                            action:
                              type: string
                              description: >-
                                organization_variable_created or
                                organization_variable_edited or
                                team_variable_created or team_variable_edited
                            author:
                              type: string
                        - type: object
                          properties:
                            id:
                              type: integer
                            diffObject:
                              type: object
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
                                typeId:
                                  type: integer
                            changed:
                              type: string
                              format: date
                            action:
                              type: string
                            author:
                              type: string
              example:
                organizationVariableHistory:
                  - id: 1
                    diffObject:
                      name: userId
                      value: 25
                      typeId: 1
                    changed: '2022-08-02T09:37:05.364Z'
                    action: organization_variable_created
                    author: Jon Doe
                  - id: 2
                    diffObject:
                      old:
                        value: 25
                        typeId: 1
                      new:
                        value: 140
                        typeId: 1
                    changed: '2022-08-02T09:37:05.364Z'
                    action: organization_variable_edited
                    author: Jon Doe
  /organizations/{organizationId}/domains/{organizationDomainId}/verify:
    post:
      x-published: false
      tags:
        - Organizations > Domain claimed
      summary: Organization domain verification
      security:
        - token:
            - organizations:write
      description: Verify the domain for given organization using DNS TXT record method.
      parameters:
        - name: organizationId
          in: path
          description: The ID of the organization.
          schema:
            type: integer
          required: true
          example: 11
        - name: organizationDomainId
          in: path
          description: The ID of the organization domain.
          schema:
            type: integer
          required: true
          example: 5
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
              example:
                organizationDomain:
                  id: 5,
                  organizationId: 11,
                  domain: make.com,
                  verificationMethod: DNS,
                  verificationCode: b2b9ed0b-84f2-438d-b92f-57fe81d0229e,
                  status: verified,
                  statusDescription: null,
                  created: 2023-11-05T09:22:31.249Z,
                  verified: 2023-11-10T09:20:22.219Z
  /organizations/{organizationId}/usage:
    get:
      x-published: true
      tags:
        - Organizations
      summary: Get organization usage
      description: >
        Retrieves a list of daily operations and data transfer usage across all
        scenarios within all teams in the specified organization for the past 30
        days.


        By default, the endpoint uses the timezone of the user making the API
        call to define the start and end of each day in the 30-day timeframe.


        To use the organization's timezone instead, set the
        `organizationTimezone` parameter to `true`. This ensures that the daily
        aggregates align with the organization's operational hours. This is
        especially useful for scenarios where aggregated data needs to align
        with the organization's operational hours. 


        For instance, a remote data analyst in India working for a Czech company
        can set `organizationTimezone=true` to ensure the usage data reflects
        the company's timezone, providing more relevant and accurate insights
        for organizational reporting and analysis.


        For more information on timezones in Make, please refer to our [Help
        Center article](https://www.make.com/en/help/general/manage-time-zones).
      security:
        - token:
            - organizations:read
      parameters:
        - name: organizationId
          in: path
          description: The ID of the organization.
          schema:
            type: integer
          required: true
          example: 11
        - name: organizationTimezone
          in: query
          schema:
            type: boolean
          required: false
          description: >-
            When set to `true`, the endpoint will calculate and return usage
            data based on the organization's timezone instead of the user's
            local timezone.
          example: true
      responses:
        '200':
          description: Successfully retrieved usage data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        operations:
                          type: integer
                        dataTransfer:
                          type: integer
              example:
                data:
                  - date: '2024-05-30'
                    operations: 9
                    dataTransfer: 135
                  - date: '2024-05-31'
                    operations: 15
                    datatransfer: 157
  /rpcs/{appName}/{appVersion}/{rpcName}:
    post:
      tags:
        - Remote procedures
      summary: Call RPC
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      type:
                        type: string
                      required:
                        type: boolean
            example:
              data:
                id: '1'
                jidlo: Černá zabijačková
              schema:
                - name: id
                  type: integer
                  required: true
                - name: jidlo
                  type: text
                  required: true
      responses:
        '200':
          description: Successful response
      parameters:
        - name: appName
          in: path
          schema:
            type: string
          required: true
        - name: appVersion
          in: path
          schema:
            type: string
          required: true
        - name: rpcName
          in: path
          schema:
            type: string
          required: true
        - name: imt-remote-formula
          in: header
          schema:
            type: integer
          example: '1'
        - name: imt-ignore-required
          in: header
          schema:
            type: string
          example: 'yes'
        - name: imt-validate-schema
          in: header
          schema:
            type: string
          example: 'yes'
    options:
      tags:
        - Remote procedures
      summary: Process action
      parameters:
        - name: appName
          in: path
          schema:
            type: string
          required: true
        - name: appVersion
          in: path
          schema:
            type: string
          required: true
        - name: rpcName
          in: path
          schema:
            type: string
          required: true
        - name: imt-remote-formula
          in: header
          schema:
            type: integer
          example: '1'
        - name: imt-ignore-required
          in: header
          schema:
            type: string
          example: 'yes'
        - name: imt-validate-schema
          in: header
          schema:
            type: string
          example: 'yes'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  config:
                    type: array
                    items: {}
              examples:
                process-action:
                  summary: Process action
                  value:
                    config: []
  /scenarios:
    get:
      x-published: true
      tags:
        - Scenarios
      summary: List scenarios
      description: >-
        Retrieves a collection of all scenarios for a team or an organization
        with a given ID. Returned scenarios are sorted by proprietary setting in
        descending order.
      security:
        - token:
            - scenarios:read
      parameters:
        - description: >-
            The unique ID of the team whose scenarios will be retrieved. If this
            parameter is set, the `organizationId` parameter must be skipped.
            For each request either `teamId` or `organizationId` must be
            defined.
          name: teamId
          in: query
          schema:
            type: integer
          example: 1
          required: true
        - description: >-
            The unique ID of the organization whose scenarios will be retrieved.
            If this parameter is set, the `teamId` parameter must be skipped.
            For each request either `teamId` or `organizationId` must be
            defined.
          name: organizationId
          in: query
          schema:
            type: integer
          example: 11
        - name: id[]
          in: query
          schema:
            type: array
            items:
              type: integer
          description: The array of IDs of scenarios to retrieve.
          example:
            - 1
            - 2
            - 3
        - description: >-
            The unique ID of the folder containing scenarios you want to
            retrieve.
          name: folderId
          in: query
          schema:
            type: integer
          example: 1
        - name: islinked
          in: query
          schema:
            type: boolean
          description: >-
            If set to `true`, this parameter filters only active scenarios for
            which the schedule is enabled.
          example: true
        - name: concept
          in: query
          schema:
            type: boolean
          description: If set to `true`, the response contains only scenario concepts.
          example: true
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - hookId
                - deviceId
                - deviceScope
                - description
                - folderId
                - isinvalid
                - islinked
                - islocked
                - isPaused
                - usedPackages
                - lastEdit
                - scheduling
                - iswaiting
                - dlqCount
                - createdByUser
                - updatedByUser
                - nextExec
                - scenarioVersion
                - moduleSequenceId
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The value of maximum entities to return.
        - schema:
            type: string
            enum:
              - proprietal
              - id
              - name
              - teamId
              - folderId
              - islinked
              - isinvalid
              - islocked
              - lastEdit
              - createdByUserName
              - updatedByUserName
              - created
          description: The value that will be used to sort returned entities by.
          name: pg[sortBy]
          in: query
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
      responses:
        '200':
          description: Retrieved scenarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarios:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        teamId:
                          type: integer
                        hookId:
                          type: integer
                        deviceId:
                          type: integer
                        deviceScope:
                          type: string
                        description:
                          type: string
                        folderId:
                          type: integer
                        isinvalid:
                          type: boolean
                        islinked:
                          type: boolean
                        islocked:
                          type: boolean
                        isPaused:
                          type: boolean
                        usedPackages:
                          type: array
                          items:
                            type: string
                        lastEdit:
                          type: string
                          format: date-time
                        scheduling:
                          type: object
                          properties:
                            type:
                              type: string
                            interval:
                              type: integer
                        iswaiting:
                          type: boolean
                        dlqCount:
                          type: integer
                        createdByUser:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            email:
                              type: string
                        updatedByUser:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            email:
                              type: string
                        nextExec:
                          type: string
                          format: date-time
                        created:
                          type: string
                          format: date-time
                        scenarioVersion:
                          type: integer
                        moduleSequenceId:
                          type: integer
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                        description: Shown only when using the `last` based pagination.
                      showLast:
                        type: boolean
                        description: Shown only when using the `last` based pagination.
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
                        description: Shown only when using the `offset` based pagination.
              example:
                scenarios:
                  - id: 925
                    name: New scenario
                    teamId: 215
                    hookId: null
                    deviceId: null
                    deviceScope: null
                    concept: false
                    description: ''
                    folderId: null
                    isinvalid: false
                    islinked: false
                    islocked: false
                    isPaused: false
                    usedPackages:
                      - json
                    lastEdit: '2021-09-22T06:40:56.692Z'
                    scheduling:
                      type: indefinitely
                      interval: 900
                    iswaiting: false
                    dlqCount: 0
                    createdByUser:
                      id: 985
                      name: John Doe
                      email: j.doe@example.com
                    updatedByUser:
                      id: 986
                      name: John Foo
                      email: j.foo@example.com
                    nextExec: '2021-09-22T06:41:56.692Z'
                    created: '2021-10-22T06:41:56.692Z'
                pg:
                  sortBy: id
                  sortDir: desc
                  offset: 0
                  limit: 10
    post:
      x-published: true
      tags:
        - Scenarios
      summary: Create scenario
      description: >-
        Creates a new scenario with data passed in the request body. In the
        response, it returns all details of the created scenario including its
        blueprint.
      security:
        - token:
            - scenarios:write
      parameters:
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - hookId
                - deviceId
                - deviceScope
                - description
                - folderId
                - isinvalid
                - islinked
                - islocked
                - isPaused
                - usedPackages
                - lastEdit
                - scheduling
                - iswaiting
                - dlqCount
                - createdByUser
                - updatedByUser
                - nextExec
                - scenarioVersion
                - moduleSequenceId
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
        - description: >-
            If set to `true` this parameter confirms the scenario creation when
            the scenario contains the app that is used in the organization for
            the first time and needs installation. If the parameter is missing
            or it is set to `false` an error code is returned and the scenario
            is not created.
          name: confirmed
          in: query
          schema:
            type: boolean
          example: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                blueprint:
                  type: string
                  description: >-
                    The scenario blueprint. To save resources, the blueprint is
                    sent as a string, not as an object.
                teamId:
                  type: integer
                  description: >-
                    The unique ID of the team in which the scenario will be
                    created.
                scheduling:
                  type: string
                  description: >-
                    The scenario scheduling details. To save resources, the
                    scheduling details are sent as a string, not as an object.
                folderId:
                  type: integer
                  description: >-
                    The unique ID of the folder in which you want to store
                    created scenario.
                basedon:
                  type: integer
                  description: >-
                    Defines if the scenario is created based on a template. The
                    value is the template ID.
              required:
                - blueprint
                - teamId
                - scheduling
            examples:
              create:
                summary: Blueprint for scenario creation
                value:
                  blueprint: >-
                    { "name": "Empty integration", "flow": [ { "id": 2,
                    "module": "json:ParseJSON", "version": 1, "metadata": {
                    "designer": { "x": -46, "y": 47, "messages": [ { "category":
                    "last", "severity": "warning", "message": "A transformer
                    should not be the last module in the route." } ] } } } ],
                    "metadata": { "version": 1, "scenario": { "roundtrips": 1,
                    "maxErrors": 3, "autoCommit": true, "autoCommitTriggerLast":
                    true, "sequential": false, "confidential": false,
                    "dataloss": false, "dlq": false, "freshVariables": false },
                    "designer": { "orphans": [ ] } } }
                  teamId: 1
                  scheduling: '{ "type": "indefinitely", "interval": 900 }'
                  folderId: 1
                  basedon: 20
      responses:
        '200':
          description: Scenario created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      hookId:
                        type: integer
                      deviceId:
                        type: integer
                      deviceScope:
                        type: string
                      description:
                        type: string
                      folderId:
                        type: integer
                      isinvalid:
                        type: boolean
                      islinked:
                        type: boolean
                      islocked:
                        type: boolean
                      isPaused:
                        type: boolean
                      usedPackages:
                        type: array
                        items:
                          type: string
                      lastEdit:
                        type: string
                        format: date-time
                      scheduling:
                        type: object
                        properties:
                          type:
                            type: string
                          interval:
                            type: integer
                      iswaiting:
                        type: boolean
                      dlqCount:
                        type: integer
                      createdByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      updatedByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      nextExec:
                        type: string
                        format: date-time
                      created:
                        type: string
                        format: date-time
                      scenarioVersion:
                        type: integer
                      moduleSequenceId:
                        type: integer
              example:
                scenario:
                  id: 925
                  name: New scenario
                  teamId: 215
                  hookId: null
                  deviceId: null
                  deviceScope: null
                  concept: false
                  description: ''
                  folderId: null
                  isinvalid: false
                  islinked: false
                  islocked: false
                  isPaused: false
                  usedPackages:
                    - json
                  lastEdit: '2021-09-22T06:40:56.692Z'
                  scheduling:
                    type: indefinitely
                    interval: 900
                  iswaiting: false
                  dlqCount: 0
                  createdByUser:
                    id: 985
                    name: John Doe
                    email: j.doe@example.com
                  updatedByUser:
                    id: 986
                    name: John Foo
                    email: j.foo@example.com
                  nextExec: '2021-09-22T06:41:56.692Z'
                  created: '2021-10-22T06:41:56.692Z'
  /scenarios/{scenarioId}:
    get:
      x-published: true
      tags:
        - Scenarios
      summary: Get scenario details
      description: >-
        Retrieves all available properties of a scenario with a given ID. The
        returned details do not include a scenario blueprint. If you want to get
        a scenario blueprint, refer to the [Get scenario
        blueprint](/scenarios-scenarioId-blueprint-get) endpoint.
      security:
        - token:
            - scenarios:read
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - hookId
                - deviceId
                - deviceScope
                - description
                - folderId
                - isinvalid
                - islinked
                - islocked
                - isPaused
                - usedPackages
                - lastEdit
                - scheduling
                - iswaiting
                - dlqCount
                - createdByUser
                - updatedByUser
                - nextExec
                - scenarioVersion
                - moduleSequenceId
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      hookId:
                        type: integer
                      deviceId:
                        type: integer
                      deviceScope:
                        type: string
                      description:
                        type: string
                      folderId:
                        type: integer
                      isinvalid:
                        type: boolean
                      islinked:
                        type: boolean
                      islocked:
                        type: boolean
                      isPaused:
                        type: boolean
                      usedPackages:
                        type: array
                        items:
                          type: string
                      lastEdit:
                        type: string
                        format: date-time
                      scheduling:
                        type: object
                        properties:
                          type:
                            type: string
                          interval:
                            type: integer
                      iswaiting:
                        type: boolean
                      dlqCount:
                        type: integer
                      createdByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      updatedByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      nextExec:
                        type: string
                        format: date-time
                      created:
                        type: string
                        format: date-time
                      scenarioVersion:
                        type: integer
                      moduleSequenceId:
                        type: integer
              example:
                scenario:
                  id: 925
                  name: New scenario
                  teamId: 215
                  hookId: null
                  deviceId: null
                  deviceScope: null
                  concept: false
                  description: ''
                  folderId: null
                  isinvalid: false
                  islinked: false
                  islocked: false
                  isPaused: false
                  usedPackages:
                    - json
                  lastEdit: '2021-09-22T06:40:56.692Z'
                  scheduling:
                    type: indefinitely
                    interval: 900
                  iswaiting: false
                  dlqCount: 0
                  createdByUser:
                    id: 985
                    name: John Doe
                    email: j.doe@example.com
                  updatedByUser:
                    id: 986
                    name: John Foo
                    email: j.foo@example.com
                  nextExec: '2021-09-22T06:41:56.692Z'
                  created: '2021-10-22T06:41:56.692Z'
    patch:
      x-published: true
      tags:
        - Scenarios
      summary: Update scenario
      description: >-
        Updates a scenario with a given ID by passing new values in the request
        body. Any property that is not provided will be left unchanged. In the
        response, it returns all details of the updated scenario including
        properties that were not changed.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - hookId
                - deviceId
                - deviceScope
                - description
                - folderId
                - isinvalid
                - islinked
                - islocked
                - isPaused
                - usedPackages
                - lastEdit
                - scheduling
                - iswaiting
                - dlqCount
                - createdByUser
                - updatedByUser
                - nextExec
                - scenarioVersion
                - moduleSequenceId
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
        - description: >-
            If set to `true` this parameter confirms the scenario update when
            the scenario contains the app that is used in the organization for
            the first time and needs installation. If the parameter is missing
            or it is set to `false` an error code is returned and the scenario
            is not updated.
          name: confirmed
          in: query
          schema:
            type: boolean
          example: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                blueprint:
                  type: string
                  description: >-
                    The scenario blueprint. To save resources, the blueprint is
                    sent as a string, not as an object.
                scheduling:
                  type: string
                  description: >-
                    The scenario scheduling details. To save resources, the
                    scheduling details are sent as a string, not as an object.
                folderId:
                  type: integer
                  description: >-
                    The unique ID of the folder in which you want to store
                    created scenario.
                name:
                  type: string
                  description: >-
                    A new name of the scenario. The name does not need to be
                    unique.
            examples:
              update:
                summary: Blueprint for scenario update
                value:
                  blueprint: >-
                    { "name": "Empty integration", "flow": [ { "id": 2,
                    "module": "json:ParseJSON", "version": 1, "metadata": {
                    "designer": { "x": -46, "y": 47, "messages": [ { "category":
                    "last", "severity": "warning", "message": "A transformer
                    should not be the last module in the route." } ] } } } ],
                    "metadata": { "version": 1, "scenario": { "roundtrips": 1,
                    "maxErrors": 3, "autoCommit": true, "autoCommitTriggerLast":
                    true, "sequential": false, "confidential": false,
                    "dataloss": false, "dlq": false, "freshVariables": false },
                    "designer": { "orphans": [ ] } } }
                  scheduling: '{ "type": "indefinitely", "interval": 900 }'
                  folderId: 1
                  name: My New Integration
      responses:
        '200':
          description: Scenario was updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      hookId:
                        type: integer
                      deviceId:
                        type: integer
                      deviceScope:
                        type: string
                      description:
                        type: string
                      folderId:
                        type: integer
                      isinvalid:
                        type: boolean
                      islinked:
                        type: boolean
                      islocked:
                        type: boolean
                      isPaused:
                        type: boolean
                      usedPackages:
                        type: array
                        items:
                          type: string
                      lastEdit:
                        type: string
                        format: date-time
                      scheduling:
                        type: object
                        properties:
                          type:
                            type: string
                          interval:
                            type: integer
                      iswaiting:
                        type: boolean
                      dlqCount:
                        type: integer
                      createdByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      updatedByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      nextExec:
                        type: string
                        format: date-time
                      created:
                        type: string
                        format: date-time
                      scenarioVersion:
                        type: integer
                      moduleSequenceId:
                        type: integer
              example:
                scenario:
                  id: 925
                  name: New scenario
                  teamId: 215
                  hookId: null
                  deviceId: null
                  deviceScope: null
                  concept: false
                  description: ''
                  folderId: null
                  isinvalid: false
                  islinked: false
                  islocked: false
                  isPaused: false
                  usedPackages:
                    - json
                  lastEdit: '2021-09-22T06:40:56.692Z'
                  scheduling:
                    type: indefinitely
                    interval: 900
                  iswaiting: false
                  dlqCount: 0
                  createdByUser:
                    id: 985
                    name: John Doe
                    email: j.doe@example.com
                  updatedByUser:
                    id: 986
                    name: John Foo
                    email: j.foo@example.com
                  nextExec: '2021-09-22T06:41:56.692Z'
                  created: '2021-10-22T06:41:56.692Z'
    delete:
      x-published: true
      tags:
        - Scenarios
      summary: Delete scenario
      description: Deletes a scenario with a given ID and returns the ID in the response.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
      responses:
        '200':
          description: Scenario deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: integer
              example:
                scenario: 1399
  /scenarios/{scenarioId}/triggers:
    get:
      x-published: true
      tags:
        - Scenarios
      summary: Get trigger details
      description: >-
        Retrieves properties of a trigger included in a scenario with a given
        ID. A trigger is a module that is able to return bundles that were newly
        added or updated (depending on the settings) since the last run of the
        scenario. An example of a trigger is a hook.
      security:
        - token:
            - scenarios:read
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  udid:
                    type: string
                  scope:
                    type: string
                  queueCount:
                    type: integer
                  queueLimit:
                    type: integer
                  typeName:
                    type: string
                  type:
                    type: string
                  url:
                    type: string
                    format: uri
                  flags:
                    type: object
              example:
                id: 9765
                name: WH1
                udid: e7cq6zty4qcnq7fb83kzcdsgqniqtd5c
                scope: hook
                queueCount: 0
                queueLimit: 100000
                typeName: gateway-webhook
                type: web
                flags: {}
                url: https://hook.make.com/e7cq6zty4qcnq7fb83kzcdsgqniqtd5c
  /scenarios/{scenarioId}/clone:
    post:
      x-published: true
      tags:
        - Scenarios
      summary: Clone scenario
      description: >-
        Clones the specified scenario. The response contains all information
        about the scenario clone.


        You have to know which app integrations the scenario contains. You can
        get a list of apps used in the scenario with the API call `GET
        /scenarios/{scenarioId}` in the `usedPackages` array.


        If you are cloning the scenario to a different team and the scenario
        contains an app module, webhook or data store, you have to either:


        - map the entity ID to a different entity with the correct properties.
        For example, you can map an app module connection to a different
        connection of the same app with the same scopes, or
         - use the `notAnalyze` query parameter to turn off the scenario clone blueprint analysis.

        When you turn off the scenario blueprint analysis you can map the entity
        ID to the `null` value, which omits the entity settings.


        The scenario blueprint analysis makes sure that the scenario clone will
        work without further changes. If you turn off the scenario blueprint
        analysis, check the configuration of all entities in the scenario clone.


        If you are cloning the scenario to a different team and the scenario
        contains a custom app or a custom function, which is not available for
        the users in the team, use the `confirmed` query parameter to confirm
        cloning of the scenario. Otherwise, you get an error listing the custom
        function that you have to create in the team.


        Refer to the request body parameters description and examples for more
        information.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
        - description: The ID of the organization.
          required: true
          name: organizationId
          in: query
          schema:
            type: integer
          example: 11
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - hookId
                - deviceId
                - deviceScope
                - description
                - folderId
                - isinvalid
                - islinked
                - islocked
                - isPaused
                - usedPackages
                - lastEdit
                - scheduling
                - iswaiting
                - dlqCount
                - createdByUser
                - updatedByUser
                - nextExec
                - scenarioVersion
                - moduleSequenceId
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
        - name: confirmed
          in: query
          schema:
            type: boolean
          description: >-
            If the scenario contains a custom app or a custom function, that is
            not available in the team, you have to set the `confirmed` parameter
            to `true` to clone the scenario. Otherwise you get an error and the
            scenario is not cloned.
          examples:
            suppressBlueprintAnalysis:
              value: true
        - examples:
            suppressBlueprintAnalysis:
              value: true
          name: notAnalyze
          in: query
          schema:
            type: boolean
          description: >-
            If you are cloning a scenario to a different team, you have to map
            the scenario entities (connections, data stores, webhooks, ...) from
            the original to the clone. If you cannot map all of the scenario
            entities, set the `notAnalyze` parameter to `true` to suppress the
            scenario blueprint analysis.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The name for the scenario clone. The maximum length of the
                    name is 120 characters.
                teamId:
                  type: integer
                  description: The ID of the team to which you want to clone the scenario.
                account:
                  description: >-
                    Specify pairs of original and clone connection IDs to map
                    connections to the cloned scenario.
                  type: object
                  additionalProperties: {}
                key:
                  description: >-
                    Specify pairs of original and clone key IDs to map keys to
                    the cloned scenario.
                  type: object
                  additionalProperties: {}
                hook:
                  description: >-
                    Specify pairs of original and clone hook IDs to map webhooks
                    to the cloned scenario.
                  type: object
                  additionalProperties: {}
                device:
                  description: >-
                    Specify pairs of original and clone device IDs to map
                    devices to the cloned scenario.
                  type: object
                  additionalProperties: {}
                udt:
                  description: >-
                    Specify pairs of original and clone data structure IDs to
                    map data structures to the cloned scenario.
                  type: object
                  additionalProperties: {}
                datastore:
                  description: >-
                    Specify pairs of original and clone data store IDs to map
                    data stores to the cloned scenario.
                  type: object
                  additionalProperties: {}
                states:
                  type: boolean
                  description: >-
                    Set to `true` to clone also states of the scenario modules,
                    for example last scenario trigger execution. Setting to
                    `false` resets the state information of the scenario modules
                    in the scenario clone.
              required:
                - name
                - teamId
                - states
            examples:
              cloneScenario:
                summary: Clone scenario
                description: >-
                  Clone the specified scenario to the team with the specified
                  `teamId`.
                value:
                  name: Scenario clone
                  teamId: 20030
                  states: true
                  account:
                    '4400': 5564
                    '5500': 7542
                  key:
                    '4383': 465
                  hook:
                    '11899': 11900
                  device:
                    '432': 116
                  udt:
                    '4130': 5698
                  datastore:
                    '3572': 4587
              suppressBlueprintAnalysis:
                summary: Suppress validation
                description: >-
                  Suppress scenario clone blueprint analysis to clone the
                  scenario without mapping the connections, data stores or other
                  scenario entities. 


                  If you do not map all of the scenario entities to the scenario
                  clone, you will have to edit the scenario manually.
                value:
                  name: Scenario clone without connections
                  teamId: 20030
                  states: false
                  account:
                    '4400': null
                    '5500': null
                  udt:
                    '4131': 5700
                  datastore:
                    '3573': 4900
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      hookId:
                        type: integer
                      deviceId:
                        type: integer
                      deviceScope:
                        type: string
                      description:
                        type: string
                      folderId:
                        type: integer
                      isinvalid:
                        type: boolean
                      islinked:
                        type: boolean
                      islocked:
                        type: boolean
                      isPaused:
                        type: boolean
                      usedPackages:
                        type: array
                        items:
                          type: string
                      lastEdit:
                        type: string
                        format: date-time
                      scheduling:
                        type: object
                        properties:
                          type:
                            type: string
                          interval:
                            type: integer
                      iswaiting:
                        type: boolean
                      dlqCount:
                        type: integer
                      createdByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      updatedByUser:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      nextExec:
                        type: string
                        format: date-time
                      created:
                        type: string
                        format: date-time
                      scenarioVersion:
                        type: integer
                      moduleSequenceId:
                        type: integer
              examples:
                cloneScenario:
                  value:
                    id: 925
                    name: Scenario clone
                    teamId: 20030
                    hookId: 11900
                    deviceId: 116
                    deviceScope: null
                    concept: false
                    description: ''
                    folderId: null
                    isinvalid: false
                    islinked: false
                    islocked: false
                    isPaused: false
                    usedPackages:
                      - gateway
                      - airtable
                      - datastore
                      - google-sheets
                      - util
                    lastEdit: '2021-09-22T06:40:56.692Z'
                    scheduling:
                      type: indefinitely
                      interval: 900
                    iswaiting: false
                    dlqCount: 0
                    createdByUser:
                      id: 985
                      name: John Doe
                      email: j.doe@example.com
                    updatedByUser:
                      id: 986
                      name: John Foo
                      email: j.foo@example.com
                    nextExec: '2021-09-22T06:41:56.692Z'
                suppressBlueprintAnalysis:
                  value:
                    id: 925
                    name: Scenario clone without connections
                    teamId: 20030
                    hookId: null
                    deviceId: null
                    deviceScope: null
                    concept: false
                    description: ''
                    folderId: null
                    isinvalid: false
                    islinked: false
                    islocked: false
                    isPaused: false
                    usedPackages:
                      - airtable
                      - datastore
                      - google-sheets
                      - util
                    lastEdit: '2021-09-22T06:40:56.692Z'
                    scheduling:
                      type: indefinitely
                      interval: 900
                    iswaiting: false
                    dlqCount: 0
                    createdByUser:
                      id: 985
                      name: John Doe
                      email: j.doe@example.com
                    updatedByUser:
                      id: 986
                      name: John Foo
                      email: j.foo@example.com
                    nextExec: '2021-09-22T06:41:56.692Z'
  /scenarios/{scenarioId}/data:
    put:
      x-private: true
      tags:
        - Scenarios
      summary: Set module data
      description: >-
        **Why the docs are private:**

        It's not clear how to use this EP. The example suggest that the EP can
        only change the trigger epoch. 

        But the EP's SQL routine and original documentation suggest that the EP
        is supposed to update any module.

        I wasn't able to reproduce that use case even with the simplest modules.
        Furthermore, the EP always returns successful response, even though it
        didn't update anything.

        This causes a lot of confusion and frustration ot the users. So until
        the usage of the EP is clear the docs should be hidden.

        2023-06-06, agreed with Ondrej Vesely.

        **Original docs:**

        Sets the module data for a scenario with a given ID by passing new
        values in the request body. It replaces the entire resource with the new
        values. In the response, it returns the confirmation if the scenario was
        updated.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
      requestBody:
        description: >-
          The request body must contain the object with module data that
          strictly depends on the specific module. Keys in the object are IDs of
          the modules for which data are going to be set. Values are arbitrary
          objects that are supplied to the modules.
        content:
          application/json:
            schema:
              type: object
            example:
              '1':
                epoch:
                  date: '2021-02-02T09:49:00.000Z'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  updated:
                    type: boolean
              example:
                updated: true
  /scenarios/{scenarioId}/data/{moduleId}:
    get:
      x-published: true
      tags:
        - Scenarios
      summary: Check module data
      description: >-
        Verifies whether the module data is set or not. This endpoint doesn't
        retrieve the module data.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
        - description: >-
            The unique ID of the scenario module. It is available in the
            scenario blueprint that can be retrieved from the [Get scenario
            blueprint](/scenarios-scenarioId-blueprint-get) endpoint.
          name: moduleId
          in: path
          schema:
            type: integer
          example: 1
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
              example:
                exists: true
  /scenarios/{scenarioId}/start:
    post:
      x-published: true
      tags:
        - Scenarios
      summary: Activate scenario
      description: >-
        Activates the specified scenario. Also executes the scenario if the
        scenario is scheduled to run at regular intervals. Read more about
        [scenario
        scheduling](https://www.make.com/en/help/scenarios/scheduling-a-scenario).


        The API call response contains the scenario ID and the scenario
        `isLinked` property set to `true`.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: object
                    properties:
                      id:
                        type: integer
                      islinked:
                        type: boolean
              example:
                scenario:
                  id: 5
                  islinked: true
  /scenarios/{scenarioId}/stop:
    post:
      x-published: true
      tags:
        - Scenarios
      summary: Deactivate scenario
      description: >-
        Deactivates and stops the specified scenario if the scenario is running.
        The API call response contains the scenario ID and the scenario
        `isLinked` property set to `false`.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: object
                    properties:
                      id:
                        type: integer
                      islinked:
                        type: boolean
              example:
                scenario:
                  id: 5
                  islinked: false
  /scenarios/{scenarioId}/run:
    post:
      x-published: true
      tags:
        - Scenarios
      summary: Run a scenario
      description: >-
        Runs the specified scenario. The scenario has to be active. If your
        scenario has required scenario inputs you have to provide the scenario
        inputs in the request body.
      security:
        - token:
            - scenarios:read
            - scenarios:write
            - scenarios:run
      parameters:
        - name: scenarioId
          in: path
          schema:
            type: integer
          description: >-
            The ID of the scenario. Get the ID of the scenario with the API call
            `GET /scenarios`.
          example: 111
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: >-
                    If your scenario has inputs specify the input parameters and
                    values in the `data` object.
                responsive:
                  type: boolean
                  description: >-
                    If set to `true` the Make API waits until the scenario
                    finishes. The response contains the scenario `status` and
                    `executionId`. If the scenario execution takes longer than
                    40 seconds, the API call returns the time out error, but the
                    scenario is still executed.


                    If set to `false` the API call returns immediately without
                    waiting. The response contains only the `executionId`.
                  default: false
            example:
              data:
                Test input: Test value
                My array:
                  - test 1
                  - test 2
                My collection:
                  key: value
              responsive: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  executionId:
                    type: string
                    description: ID of the scenario execution.
                  status:
                    type: string
                    description: |-
                      Status of the scenario execution:

                      - `1`: success
                       - `2`: warning
                       - `3`: error.
              example:
                executionId: 9c4874979d974c3ebdef1e8aaa7dc452
  /scenarios/{scenarioId}/publish:
    post:
      x-private: true
      tags:
        - Scenarios
      summary: Publish scenario
      description: >-
        This endpoint is set to private because the scenario drafts feature is
        available only on the Celonis platform. In Make, this endpoint has no
        functionality.

        Original description:

        Publishes a draft of a scenario with a given ID. In the response, it
        returns all details of the published scenario.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
      responses:
        '200':
          description: Scenario successfully published
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: object
                    properties:
                      id:
                        type: integer
                  scenarioVersion:
                    type: object
                    properties:
                      scenarioId:
                        type: integer
                      version:
                        type: integer
                      draft:
                        type: boolean
              example:
                scenario:
                  id: 5
                scenarioVersion:
                  scenarioId: 5
                  version: 10
                  draft: false
  /scenarios/{scenarioId}/interface:
    get:
      x-published: true
      tags:
        - Scenarios
      summary: Get scenario interface
      description: >-
        Retrieves scenario inputs specification of the specified scenario. Check
        out the [scenario inputs
        documentation](https://www.make.com/en/help/scenarios/scenario-inputs)
        in the Make help center.


        The scenario inputs feature requires your account to have the pricing
        plan **Pro** or higher. [Read more about Make
        pricing.](https://www.make.com/en/pricing)
      security:
        - token:
            - scenarios:read
      parameters:
        - in: path
          name: scenarioId
          schema:
            type: integer
          required: true
          description: >-
            The ID of the scenario. Get the list of scenarios with the API call
            `GET /scenarios`.
          example: 111
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  interface:
                    type: object
                    additionalProperties: {}
              example:
                interface:
                  input:
                    - name: email
                      type: text
                      default: null
                      required: false
                      multiline: false
                  output: null
    patch:
      x-published: true
      tags:
        - Scenarios
      summary: Update scenario interface
      description: >-
        Updates specification of the scenario inputs. Check out the [scenario
        inputs
        documentation](https://www.make.com/en/help/scenarios/scenario-inputs)
        in the Make help center.


        If you want to enable the scenario inputs you have to set the scenario
        scheduling to "On demand" first, otherwise you get error 422 (IM016).
        You can use the API call:


        `PATCH /scenarios/{scenarioId}?confirmed=true`


        with the request body:
         
        `{"scheduling": "{\"type\":\"on-demand\"}"}`


        You can disable inputs for the specified scenario by sending a payload
        with an empty `input` array.


        The response contains the updated scenario inputs specification.


        The scenario inputs feature requires your account to have the pricing
        plan **Pro** or higher. [Read more about Make
        pricing.](https://www.make.com/en/pricing)
      security:
        - token:
            - scenarios:write
      parameters:
        - name: scenarioId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The ID of the scenario. Get the list of scenarios with the API call
            `GET /scenarios`.
          example: 111
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                interface:
                  type: object
                  additionalProperties: {}
                  description: >-
                    Contains the `input` array with specification of the
                    scenario input parameters.
            examples:
              interface-update:
                summary: Update scenario interface
                description: >-
                  Updates scenario inputs to the specification you provide in
                  the request body.
                value:
                  interface:
                    input:
                      - name: userName
                        type: text
                        default: John Doe
                        required: true
                        multiline: false
                      - name: employeeID
                        type: number
                        default: null
                        required: false
                      - name: enabledApps_array
                        spec:
                          type: text
                          default: Salesforce
                          required: true
                          multiline: false
                        type: array
                      - name: myTestInput4_collection
                        spec:
                          - name: accountName
                            type: text
                            default: John Doe
                            required: true
                            multiline: false
                          - name: accountID
                            type: number
                            default: null
                            required: true
                        type: collection
                    output: null
              delete-interface:
                summary: Disable scenario inputs
                description: >-
                  Disable scenario inputs for the specified scenario by sending
                  empty `input` and `output` arrays in the request body.
                value:
                  interface:
                    input: ''
                    output: ''
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  interface:
                    type: object
                    additionalProperties: {}
              examples:
                interface-update:
                  value:
                    interface:
                      input:
                        - name: userName
                          type: text
                          default: John Doe
                          required: true
                          multiline: false
                        - name: employeeID
                          type: number
                          default: null
                          required: false
                        - name: enabledApps_array
                          spec:
                            type: text
                            default: Salesforce
                            required: true
                            multiline: false
                          type: array
                        - name: myTestInput4_collection
                          spec:
                            - name: accountName
                              type: text
                              default: John Doe
                              required: true
                              multiline: false
                            - name: accountID
                              type: number
                              default: null
                              required: true
                          type: collection
                      output: null
                delete-interface:
                  value:
                    interface:
                      input: null
                      output: null
  /scenarios/{scenarioId}/usage:
    get:
      x-published: true
      tags:
        - Scenarios
      summary: Get scenario usage
      description: >
        Retrieves a list of daily operations and data transfer usage for a
        specified scenario over the past 30 days.


        By default, the endpoint uses the timezone of the user making the API
        call to define the start and end of each day in the 30-day timeframe.


        To use the organization's timezone instead, set the
        `organizationTimezone` parameter to `true`. This ensures that the daily
        aggregates align with the organization's operational hours. This is
        especially useful for scenarios where aggregated data needs to align
        with the organization's operational hours. 


        For instance, a remote data analyst in India working for a Czech company
        can set `organizationTimezone=true` to ensure the usage data reflects
        the company's timezone, providing more relevant and accurate insights
        for organizational reporting and analysis.


        For more information on timezones in Make, please refer to our [Help
        Center article](https://www.make.com/en/help/general/manage-time-zones).
      security:
        - token:
            - scenarios:read
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
        - name: organizationTimezone
          in: query
          schema:
            type: boolean
          required: false
          description: >-
            When set to `true`, the endpoint will calculate and return usage
            data based on the organization's timezone instead of the user's
            local timezone.
          example: true
      responses:
        '200':
          description: Successfully retrieved usage data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        operations:
                          type: integer
                        dataTransfer:
                          type: integer
              example:
                data:
                  - date: '2024-05-30'
                    operations: 9
                    dataTransfer: 135
                  - date: '2024-05-31'
                    operations: 15
                    dataTransfer: 157
  /scenarios/{scenarioId}/logs:
    get:
      x-published: true
      tags:
        - Scenarios > Logs
      summary: List scenario logs
      description: >-
        Retrieves a collection of all logs for a scenario with a given ID.
        Returned logs are sorted by `imtId` in descending order.
      security:
        - token:
            - scenarios:read
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
        - name: from
          in: query
          schema:
            type: integer
          description: >-
            The timestamp in milliseconds that defines the starting point of
            time from which the logs should be retrieved. Older logs will not be
            returned.
          example: 1632395547
        - name: to
          in: query
          schema:
            type: integer
          description: >-
            The timestamp in milliseconds that defines the ending point of time
            to which the logs should be retrieved. Newer logs will not be
            returned.
          example: 1632395548
        - name: status
          in: query
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
          example: 2
          description: >-
            Filters logs by the execution status. `1` is for success, `2` is for
            warning, and `3` is for error.
        - name: showCheckRuns
          in: query
          schema:
            type: boolean
          example: true
          description: >-
            If set to `true`, this parameter specifies that check runs should be
            hidden in the returned results. Check runs concern scenarios
            starting with a trigger in cases when the trigger does not find
            anything new.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The value of maximum entities to return.
        - name: pg[showLast]
          in: query
          schema:
            type: boolean
          example: true
          description: >-
            Include records with `last` value in the result set. Just in case of
            the `last` based paging.
        - name: pg[last]
          in: query
          schema:
            type: integer
          example: 10
          description: >-
            The last seen key. Only newer or older, depending on the sorting
            order, will be returned.
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarioLogs:
                    type: array
                    items:
                      type: object
                      properties:
                        imtId:
                          type: string
                        duration:
                          type: integer
                        operations:
                          type: integer
                        transfer:
                          type: integer
                        organizationId:
                          type: integer
                        teamId:
                          type: integer
                        id:
                          type: integer
                        type:
                          type: string
                        authorId:
                          type: integer
                        instant:
                          type: boolean
                        timestamp:
                          type: string
                          format: date-time
                        status:
                          type: integer
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                        description: Shown only when using the `last` based pagination.
                      showLast:
                        type: boolean
                        description: Shown only when using the `last` based pagination.
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
                        description: Shown only when using the `offset` based pagination.
              examples:
                scheduled:
                  summary: Log of scheduled scenario
                  description: Returns log of the scheduled scenario
                  value:
                    scenarioLogs:
                      imtId: >-
                        1632371744497_scenario.1229.auto.da518adcd14b4b64ac6358823ccb80ca
                      duration: 19979
                      operations: 10
                      transfer: 3942
                      organizationId: 21
                      teamId: 27
                      id: da518adcd14b4b64ac6358823ccb80ca
                      type: auto
                      authorId: null
                      instant: false
                      timestamp: '2021-09-23T04:35:44.497Z'
                      status: 1
                    pg:
                      sortBy: imtId
                      sortDir: desc
                      last: >-
                        1632371803593_scenario.1229.auto.3cf2f332f74f43f1b2c4ae431cbedb5b
                      showLast: false
                      limit: 50
                manual:
                  summary: Log of manual scenario
                  description: Returns log of the manual scenario
                  value:
                    scenarioLogs:
                      imtId: >-
                        1632398122946_scenario.5.manual.cc1c49323b344687a324888762206003
                      duration: 5611
                      operations: 2
                      transfer: 5
                      organizationId: 5
                      teamId: 16
                      id: cc1c49323b344687a324888762206003
                      type: manual
                      authorId: 5
                      instant: true
                      timestamp: '2021-09-23T11:55:22.946Z'
                      status: 1
                    pg:
                      sortBy: imtId
                      sortDir: desc
                      last: >-
                        1632371803593_scenario.1229.auto.3cf2f332f74f43f1b2c4ae431cbedb5b
                      showLast: false
                      limit: 50
  /scenarios/{scenarioId}/logs/{executionId}:
    get:
      x-published: true
      tags:
        - Scenarios > Logs
      summary: Get execution log
      description: >-
        Retrieves an execution log with a given ID for a scenario with a given
        ID. It returns the execution details such as execution duration, type,
        and status.
      security:
        - token:
            - scenarios:read
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
        - description: >-
            The unique ID of the scenario execution. It can be retrieved from
            the [List scenario logs](/scenarios-scenarioId-logs-get) endpoint
            under the ID key.
          name: executionId
          in: path
          schema:
            type: string
          required: true
          example: cc1c49323b344687a324888762206003
      responses:
        '200':
          description: Execution log retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarioLog:
                    type: object
                    properties:
                      imtId:
                        type: string
                      duration:
                        type: integer
                      operations:
                        type: integer
                      transfer:
                        type: integer
                      organizationId:
                        type: integer
                      teamId:
                        type: integer
                      id:
                        type: integer
                      type:
                        type: string
                      authorId:
                        type: integer
                      instant:
                        type: boolean
                      timestamp:
                        type: string
                        format: date-time
                      status:
                        type: integer
              example:
                scenarioLogs:
                  imtId: >-
                    1632398122946_scenario.5.manual.cc1c49323b344687a324888762206003
                  duration: 5611
                  operations: 2
                  transfer: 5
                  organizationId: 5
                  teamId: 16
                  id: cc1c49323b344687a324888762206003
                  type: manual
                  authorId: 5
                  instant: true
                  timestamp: '2021-09-23T11:55:22.946Z'
                  status: 1
  /scenarios/{scenarioId}/blueprint:
    get:
      x-published: true
      tags:
        - Scenarios > Blueprints
      summary: Get scenario blueprint
      description: Retrieves a blueprint of a scenario with a given ID.
      security:
        - token:
            - scenarios:read
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
        - name: blueprintId
          in: query
          schema:
            type: integer
          description: >-
            The unique ID of the blueprint version. It can be retrieved from the
            [Get blueprint versions](/scenarios-blueprints) endpoint. This
            parameter can be useful when you want to retrieve the older version
            of the blueprint.
          example: 12
        - name: draft
          in: query
          schema:
            type: boolean
          description: >-
            If this parameter is set to `true`, the draft version of the
            scenario blueprint will be retrieved. If set to `false`, the live
            version of the blueprint will be retrieved. In case that the
            `blueprintId` parameter is set to the query as well, this parameter
            is ignored.
          example: false
      responses:
        '200':
          description: Blueprint retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  response:
                    type: object
                    properties:
                      blueprint:
                        type: object
                        properties:
                          flow:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                mapper:
                                  type: object
                                  properties:
                                    ca:
                                      type: string
                                    qs:
                                      type: array
                                      items: {}
                                    url:
                                      type: string
                                      format: uri
                                    gzip:
                                      type: boolean
                                    method:
                                      type: string
                                    headers:
                                      type: array
                                      items: {}
                                    timeout:
                                      type: string
                                    authPass:
                                      type: string
                                    authUser:
                                      type: string
                                    bodyType:
                                      type: string
                                    shareCookies:
                                      type: boolean
                                    parseResponse:
                                      type: boolean
                                    followRedirect:
                                      type: boolean
                                    useQuerystring:
                                      type: boolean
                                    rejectUnauthorized:
                                      type: boolean
                                module:
                                  type: string
                                  format: uri
                                onerror:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      mapper:
                                        type: object
                                        properties:
                                          count:
                                            type: string
                                            format: utc-millisec
                                          retry:
                                            type: boolean
                                          interval:
                                            type: string
                                            format: utc-millisec
                                      module:
                                        type: string
                                        format: uri
                                      version:
                                        type: integer
                                      metadata:
                                        type: object
                                        properties:
                                          expect:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                name:
                                                  type: string
                                                type:
                                                  type: string
                                                label:
                                                  type: string
                                                required:
                                                  type: boolean
                                          restore:
                                            type: object
                                            properties:
                                              retry:
                                                type: object
                                                properties:
                                                  mode:
                                                    type: string
                                          designer:
                                            type: object
                                            properties:
                                              x:
                                                type: integer
                                              'y':
                                                type: integer
                                      parameters:
                                        type: object
                                version:
                                  type: integer
                                metadata:
                                  type: object
                                  properties:
                                    expect:
                                      type: array
                                      items:
                                        type: object
                                    restore:
                                      type: object
                                      properties:
                                        qs:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                            items:
                                              type: array
                                              items: {}
                                        method:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                            label:
                                              type: string
                                        headers:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                            items:
                                              type: array
                                              items: {}
                                        bodyType:
                                          type: object
                                          properties:
                                            label:
                                              type: string
                                    designer:
                                      type: object
                                      properties:
                                        x:
                                          type: integer
                                        'y':
                                          type: integer
                                    parameters:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                                          type:
                                            type: string
                                          label:
                                            type: string
                                          required:
                                            type: boolean
                                parameters:
                                  type: object
                                  properties:
                                    handleErrors:
                                      type: boolean
                          name:
                            type: string
                          metadata:
                            type: object
                            properties:
                              version:
                                type: integer
                              scenario:
                                type: object
                                properties:
                                  maxErrors:
                                    type: integer
                                  autoCommit:
                                    type: boolean
                                  roundtrips:
                                    type: integer
                      scheduling:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - immediately
                              - indefinitely
                              - once
                              - daily
                              - weekly
                              - monthly
                              - yearly
                          interval:
                            type: integer
                            minimum: 0
                          date:
                            type: string
                            format: date-time
                          between:
                            type: array
                            items:
                              type: string
                              format: date-time
                          time:
                            type: string
                            pattern: >-
                              ^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\.[0-9]+)?$
                          days:
                            type: array
                            items:
                              type: integer
                              minimum: 0
                              maximum: 31
                          months:
                            type: array
                            items:
                              type: integer
                              minimum: 1
                              maximum: 12
                          restrict:
                            type: array
                            items:
                              type: object
                              properties:
                                time:
                                  type: array
                                  items:
                                    type: string
                                    nullable: true
                                    pattern: >-
                                      ^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\.[0-9]+)?$
                                days:
                                  type: array
                                  items:
                                    type: integer
                                    minimum: 0
                                    maximum: 31
                                months:
                                  type: array
                                  items:
                                    type: integer
                                    minimum: 1
                                    maximum: 12
                      idSequence:
                        type: integer
                      created:
                        type: string
                        format: date-time
                      last_edit:
                        type: string
                        format: date-time
              example:
                code: OK
                response:
                  blueprint:
                    name: Empty integration
                    flow:
                      - id: 2
                        module: json:ParseJSON
                        version: 1
                        metadata:
                          designer:
                            x: -46
                            'y': 47
                            messages:
                              - category: last
                                severity: warning
                                message: >-
                                  A transformer should not be the last module in
                                  the route.
                    metadata:
                      version: 1
                      scenario:
                        roundtrips: 1
                        maxErrors: 3
                        autoCommit: true
                        autoCommitTriggerLast: true
                        sequential: false
                        confidential: false
                        dataloss: false
                        dlq: false
                        freshVariables: false
                      designer:
                        orphans: []
                  scheduling:
                    type: indefinitely
                    interval: 900
                  idSequence: 4
                  created: '2021-09-22T09:28:41.129Z'
                  last_edit: '2021-09-22T09:40:31.488Z'
  /scenarios/{scenarioId}/blueprints:
    get:
      x-published: true
      tags:
        - Scenarios > Blueprints
      summary: Get blueprint versions
      description: >-
        Retrieves a collection of all blueprints versions for a scenario with a
        given ID. Due to the regular archiving process, only the versions that
        are not older than 60 days can be retrieved. Each returned blueprint
        version consists of the date and time of the blueprint creation, IDs of
        the blueprint version and related scenario, and the information if the
        blueprint was created for the draft or live scenario version.
      security:
        - token:
            - scenarios:read
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
      responses:
        '200':
          description: Blueprints versions successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenariosBlueprints:
                    type: array
                    items:
                      type: object
                      properties:
                        created:
                          type: string
                          format: date-time
                        version:
                          type: integer
                        scenarioId:
                          type: integer
                        draft:
                          type: boolean
              example:
                scenariosBlueprints:
                  created: '2021-08-25T17:48:07.360Z'
                  version: 16
                  scenarioId: 424
                  draft: false
  /scenarios/{scenarioId}/build-variables:
    get:
      tags:
        - Scenarios
      summary: List buildtime variables
      description: >-
        Retrieves buildtime variables of a scenario with the given ID. Buildtime
        variables could be team or user defined, team defined ones are prefixed
        with a `TAC_` and user defined variables are prefixed with a `PAC_`.
        `TAC_`s can be used within the scenario as per its input spec by the
        entire team, whereas `PAC_`s can only be used within the scenario by the
        user who added them.
      security:
        - token:
            - scenarios:read
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  variables:
                    type: object
              example:
                variables:
                  input:
                    myPersonalConn1: PAC_123455551
                    ourTeamConn1: TAC_11112222
    post:
      tags:
        - Scenarios
      summary: Add new buildtime variables to scenario metadata
      description: >-
        Adds new buildtime team or user defined variable/s. Buildtime variables
        should be prefixed either with a `TAC_` (for team defined variables) or
        with a `PAC_` (for personal user defined variables), followed by the
        connection value. If a variable already exists, an error will be thrown.
        If a variable's name is not within scenario input specification, an
        error will be thrown. If the adding of new variables was successful the
        reponse would be `OK`.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          The name for the buildtime variable. The maximum
                          length of the name is 128 characters.
                      value:
                        type: string
                        description: >-
                          The value for the buildtime variable. It should start
                          either with TAC_ or PAC_ followed by numeric chars
                          only.
            example:
              input:
                - name: myPersonalConn1
                  value: PAC_123455552
      responses:
        '200':
          description: Buildtime variables added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
    put:
      tags:
        - Scenarios
      summary: Update buildtime variables in scenario metadata
      description: >-
        Updates team or user defined buildtime variable/s. The endpoint updates
        and overwrites exsiting records with the newly provided values, meaning
        any existing buildtime variable which is not provided through the
        payload will be overwritten. Buildtime variables should be prefixed
        either with a `TAC_` (for team defined variables) or with a `PAC_` (for
        personal user defined variables), followed by the connection value. If a
        variable doesn't exist, it will be added provided that its name is
        within the scenario input specification. If the updating of variables
        was successful the reponse would be `OK`.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          The name for the buildtime variable. The maximum
                          length of the name is 128 characters.
                      value:
                        type: string
                        description: >-
                          The value for the buildtime variable. It should start
                          either with TAC_ or PAC_ followed by numeric chars
                          only.
            example:
              input:
                - name: myPersonalConn1
                  value: PAC_123455552
                - name: ourTeamConn1
                  value: TAC_11112222
      responses:
        '200':
          description: Buildtime variables updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
    delete:
      tags:
        - Scenarios
      summary: Delete buildtime variable
      description: >-
        Deletes a buildtime variable with a given value for a scenario with a
        given ID and returns `OK` in the response.
      security:
        - token:
            - scenarios:write
      parameters:
        - description: >-
            The ID of the scenario. You can get the `scenarioId` with the [List
            scenarios](/scenarios-get) API call.
          name: scenarioId
          in: path
          schema:
            type: integer
          example: 112
          required: true
        - name: value
          in: query
          schema:
            type: string
          description: The value of the buildtime variable
          example: PAC_123455551
      responses:
        '200':
          description: Buildtime variable deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /scenarios/consumptions:
    get:
      x-published: true
      tags:
        - Scenarios > Consumptions
      summary: List scenario consumptions
      description: >-
        Retrieves a list of scenarios and their current consumptions. Make
        counts the number of consumed operations and transferred data according
        to your reset period.


        If you have the monthly reset period, the response contains a list of
        scenarios that consumed at least one operation in the current reset
        period with their consumptions and data transfer.


        <div class="alert alert-warning"> <p>If you have the yearly reset
        period, the response contains a list of scenarios that consumed at least
        one operation in the last 60 days, or from the last reset if that's
        shorter than 60 days.</p>

        <p>60 days after the reset the scenario consumptions turn into running
        totals over the last 60 days.</p>

        <p>For example, let's assume that you have a set of scenarios that
        consume 1000 operations every day. On the 61st day from your last reset,
        you would turn off a scenario that consumes 200 operations every day,
        turning your consumption to 800 operations per day.<p> 

        <p>If you would have the yearly reset period and you would be tracking
        your scenario consumptions, you would get the following data:</p>

        <div itemscope itemtype="https://schema.org/FAQPage"> <div class="card
        table"> <table class="table"> <thead> <tr> <th><strong
        class="text-nowrap">Day</strong></th>
        <th><strong>Consumptions</strong></th> <th><strong>Delta</strong></th>
        </tr> </thead> <tbody> <tr> <td>1</td>  <td>1000</td> <td></td> </tr>
        <tr> <td>2</td> <td>2000</td> <td>1000</td> </tr> <tr> <td>3</td>
        <td>3000</td> <td>1000</td> </tr> <tr> <td>...</td> <td></td> <td></td>
        </tr> <tr> <td>60</td> <td>60000</td> <td>1000</td> </tr> <tr>
        <td>61</td> <td>59800</td> <td>-200</td> </tr> <tr> <td>62</td>
        <td>59600</td> <td>-200</td> </tr> </tbody> </table> </div> </div>

        <p>The negative difference between scenario consumptions on the 60th and
        61st day happens because on the 61st day, the endpoint doesn't collect
        data from the first day anymore. Your scenario consumptions contain a
        total over the time period from the second day until the 61st day.</p>

        <p>For billing, Make uses a different system which ensures accurate
        billing.<p> </div>


        Check the parameter `lastReset` in the response for the timestamp of the
        start of your current reset period. You can also view the end of your
        current restart period in your dashboard in the **Usage reset** field.


        Set the `organizationId` or `teamId` parameters to limit the results to
        a specific organization or team.
      security:
        - token:
            - scenarios:read
      parameters:
        - description: The ID of the team.
          name: teamId
          in: query
          schema:
            type: integer
          example: 1
          required: true
        - description: The ID of the organization.
          name: organizationId
          in: query
          schema:
            type: integer
          example: 11
      responses:
        '200':
          description: Retrieved a list of Consumptions
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarioConsumptions:
                    type: array
                    items:
                      type: object
                      properties:
                        scenarioId:
                          type: integer
                        operations:
                          type: integer
                        transfer:
                          type: integer
                  lastReset:
                    type: string
                    format: date-time
              example:
                scenarioConsumptions:
                  - scenarioId: 1128
                    operations: 9
                    transfer: 135
                  - scenarioId: 424
                    operations: 5
                    transfer: 143
                lastReset: '2021-09-10T08:53:25.292Z'
  /scenarios-folders:
    get:
      x-published: true
      tags:
        - Scenarios folders
      summary: List scenario folders
      description: >-
        Retrieves a collection of all scenarios folders for a team with a given
        ID. Returned folders are sorted by name in ascending order.
      security:
        - token:
            - scenarios:read
      parameters:
        - name: teamId
          in: query
          schema:
            type: integer
          description: Unique ID of the Team.
          example: 1
          required: true
        - name: cols[]
          in: query
          description: >-
            Specifies the group of values to return. For example, you may want
            to receive in response only the names and IDs of folders.
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - scenariosTotal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenariosFolders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        scenariosTotal:
                          type: integer
              example:
                scenariosFolders:
                  - id: 1576
                    name: ALPHA
                    scenariosTotal: 10
    post:
      x-published: true
      tags:
        - Scenarios folders
      summary: Create scenario folder
      description: >-
        Creates a new scenario folder with data passed in the request body. As
        the response, it returns all details of the created scenario folder.
      security:
        - token:
            - scenarios:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The name of the scenario folder. The name must be at most
                    100 characters long and does not need to be unique.
                teamId:
                  type: integer
                  description: >-
                    The unique ID of the team in which the scenario folder will
                    be created.
              required:
                - name
                - teamId
            example:
              name: ZULU
              teamId: 123
      responses:
        '200':
          description: Created a Folder
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarioFolder:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      scenariosTotal:
                        type: integer
              example:
                scenarioFolder:
                  id: 1576
                  name: ALPHA
                  scenariosTotal: 10
  /scenarios-folders/{folderId}:
    patch:
      x-published: true
      tags:
        - Scenarios folders
      summary: Update scenario folder
      description: >-
        Updates a scenario folder with a given ID by passing new values in the
        request body. Any property that is not provided will be left unchanged.
        In the response, it returns all details of the updated folder including
        properties that were not changed.
      security:
        - token:
            - scenarios:write
      parameters:
        - name: folderId
          in: path
          schema:
            type: integer
          description: >-
            The unique ID of the scenario folder. It can be retrieved from the
            [List scenarios folders](/scenarios-folders-get) endpoint.
          example: 1
          required: true
        - name: cols[]
          in: query
          description: >-
            Specifies the group of values to return. For example, you may want
            to receive in response only the names and IDs of folders.
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - scenariosTotal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The name for the updated scenario folder. The name must be
                    at most 100 characters long and does not need to be unique.
            example:
              name: BRAVO
      responses:
        '200':
          description: Folder updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarioFolder:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      scenariosTotal:
                        type: integer
              example:
                scenarioFolder:
                  id: 1576
                  name: ALPHA
                  scenariosTotal: 10
    delete:
      x-published: true
      tags:
        - Scenarios folders
      summary: Delete scenario folder
      description: >-
        Deletes a scenario folder with a given ID and returns the ID in the
        response.
      security:
        - token:
            - scenarios:write
      parameters:
        - name: folderId
          in: path
          schema:
            type: integer
          description: >-
            The unique ID of the scenario folder. It can be retrieved from the
            [List scenarios folders](/scenarios-folders-get) endpoint.
          example: 1
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarioFolder:
                    type: integer
              example:
                scenarioFolder: 123
  /scenarios/{scenarioId}/custom-properties:
    get:
      x-published: true
      tags:
        - Scenarios > Custom properties data
      summary: Get custom properties data
      description: Gets custom properties data of the specified scenario.
      security:
        - token:
            - scenarios:read
      parameters:
        - name: scenarioId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the scenario.
          example: 22
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  customProperties:
                    type: object
                  scenarioId:
                    type: number
              example:
                customProperties:
                  category:
                    - notifications
                    - routing
                  customId: 45
                  location: London, UK
                  companyTeam: Product
                  description: >-
                    This scenario handles notifications for the Product team in
                    London.
                  highPriority: true
                  performanceCheck: '2023-08-31T14:19:00.000Z'
                scenarioId: 22
    post:
      x-published: true
      tags:
        - Scenarios > Custom properties data
      summary: Fill in custom properties data
      description: >+
        Fills in custom properties data for the specified scenario. The scenario
        has to have no custom properties data.

        The data you fill in has to conform to the current custom scenario
        properties structure. You have to specify a value for every required
        item, otherwise you get an error.

        To update existing data, use the following API calls:

        - [Update custom properties
        data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-patch)
         - [Set custom properties data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-put)

      security:
        - token:
            - scenarios:write
      parameters:
        - name: scenarioId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the scenario.
          example: 80
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              companyTeam: marketing
              customId: 60
              performanceCheck: '2024-09-31T14:19:00.000Z'
              category:
                - eshop
              highPriority: false
              location: Chicago, US
              description: >-
                Scenario for the Marketing team to share information with other
                stakeholders.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  customProperties:
                    type: object
                  scenarioId:
                    type: number
              example:
                customProperties:
                  category:
                    - eshop
                  customId: 60
                  location: Chicago, US
                  companyTeam: marketing
                  description: >-
                    Scenario for the Marketing team to share information with
                    other stakeholders.
                  highPriority: false
                  performanceCheck: '2024-10-01T14:19:00.000Z'
                scenarioId: 80
    patch:
      x-published: true
      tags:
        - Scenarios > Custom properties data
      summary: Update custom properties data
      description: >-
        Updates custom properties data of the specified scenario. Make updates
        only the custom properties data you specify in the request body.

        The custom property has to contain data already. The update data have to
        conform to the current custom scenario properties structure. If the
        initial value is empty, then the API call returns an error.

        To fill in first values to the custom properties, use the API call to
        [fill in custom properties
        data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post). 
      security:
        - token:
            - scenarios:write
      parameters:
        - name: scenarioId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the scenario.
          example: 80
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              basic-example:
                summary: Update item data
                description: >-
                  Update custom property item data. Make updates only the data
                  you specify in the request body.
                value:
                  customId: 48
                  location: Wien, AUS
              options-example:
                summary: Update options
                description: >-
                  Update custom property item data from a list of options. If
                  you specify a value that is not part of the list of available
                  options, you get an error.
                value:
                  category:
                    - marketing
                    - engineering
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  customProperties:
                    type: object
                  scenarioId:
                    type: number
              examples:
                basic-example:
                  value:
                    customProperties:
                      category:
                        - eshop
                        - products
                      customId: 48
                      location: Wien, AUS
                      companyTeam: Product
                      description: >-
                        This scenario is handling notifications for the Product
                        team in London.
                      highPriority: true
                      performanceCheck: '2023-08-31T14:19:00.000Z'
                    scenarioId: 80
                options-example:
                  value:
                    customProperties:
                      category:
                        - marketing
                        - engineering
                      customId: 46
                      location: London, UK
                      companyTeam: Product
                      description: >-
                        This scenario is handling notifications for the Product
                        team in London.
                      highPriority: true
                      performanceCheck: '2023-08-31T14:19:00.000Z'
                    scenarioId: 80
    put:
      x-published: true
      tags:
        - Scenarios > Custom properties data
      summary: Set custom properties
      description: >-
        Sets custom properties data for the specified scenario. Make replaces
        the original data with the data you send in the request body.

        You have to specify a value for every required custom properties
        structure item, otherwise you get an error.

        The scenario has to have custom property data already. The new data set
        has to conform to the current custom scenario properties structure. If
        the initial data is empty, then the API call returns an error.

        To fill in first values to the custom properties, use the API call to
        [fill in custom properties
        data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post). 
      security:
        - token:
            - scenarios:write
      parameters:
        - name: scenarioId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the scenario.
          example: 80
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              companyTeam: engineering
              customId: 50
              performanceCheck: '2024-08-31T14:19:00.000Z'
              category:
                - notifications
                - routing
              highPriority: false
              location: London, UK
              description: Scenario for the London engineering team
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  customProperties:
                    type: object
                  scenarioId:
                    type: number
              example:
                customProperties:
                  category:
                    - notifications
                    - routing
                  customId: 50
                  location: London, UK
                  companyTeam: engineering
                  description: Scenario for the London engineering team
                  highPriority: false
                  performanceCheck: '2024-08-31T14:19:00.000Z'
                scenarioId: 80
    delete:
      x-published: true
      tags:
        - Scenarios > Custom properties data
      summary: Delete custom properties data
      description: >-
        Deletes custom properties data. 

        Deleting custom properties data is irreversible.

        Use the `confirmed` parameter to confirm deleting the data, otherwise
        you get an error and the data are not deleted.
      security:
        - token:
            - scenarios:write
      parameters:
        - name: scenarioId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the scenario.
          example: 28
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /sdk/apps:
    get:
      tags:
        - SDK Apps
      summary: List apps
      description: Retrieves a collection of all apps available to the authenticated user.
      security:
        - token:
            - sdk-apps:read
      parameters:
        - name: all
          in: query
          schema:
            type: boolean
          description: >-
            If set to `true`, this parameter returns all apps available to all
            users. If set to `false`, it retrieves only the apps available to
            the authenticated user.
          example: 'true'
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - name
                - changes
                - public
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only the names of the available apps.
          example: name
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  apps:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        label:
                          type: string
                        version:
                          type: integer
                        beta:
                          type: boolean
              examples:
                list:
                  summary: List
                  value:
                    apps:
                      - name: custom-app-1
                        label: Ding
                        version: 1
                        beta: true
                      - name: model
                        label: MODEL
                        version: 1
                        beta: false
                      - name: postman-test-app-1
                        label: Postman Test App
                        version: 1
                        beta: true
                      - name: postman-test-app-2-1
                        label: Postman Test App
                        version: 1
                        beta: true
                      - name: postman-test-app-3-1
                        label: Postman Test App
                        version: 1
                        beta: true
                      - name: postman-test-app-4-1
                        label: Postman Test App
                        version: 1
                        beta: true
                      - name: postman-test-app-5-1
                        label: Postman Test App
                        version: 1
                        beta: true
                      - name: testovaci-lokalni-appka-1
                        label: Testovací Lokální Appka
                        version: 1
                        beta: false
    post:
      tags:
        - SDK Apps
      summary: Create app
      description: >-
        Creates a new app with data passed in the request body. In the response,
        it returns all details of the created app.
      security:
        - token:
            - sdk-apps:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the app visible in the URL.
                label:
                  type: string
                  description: The label of the app visible in the scenario builder.
                description:
                  type: string
                theme:
                  type: string
                  format: color
                  description: The color of the app logo.
                language:
                  type: string
                countries:
                  type: array
                  items: {}
                private:
                  type: boolean
            example:
              name: postman-test-app-7
              label: Postman Test App
              description: This is a testing app from Postman
              theme: '#FF00FF'
              language: en
              countries: []
              private: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      version:
                        type: integer
                      theme:
                        type: string
                        format: color
                      public:
                        type: boolean
                      approved:
                        type: boolean
              examples:
                create:
                  summary: Create
                  value:
                    app:
                      name: postman-test-app-7-1
                      label: Postman Test App
                      version: 1
                      theme: '#FF00FF'
                      public: false
                      approved: false
  /sdk/apps/{SDK_appName}/{SDK_appVersion}:
    get:
      tags:
        - SDK Apps
      summary: Get App
      security:
        - token:
            - sdk-apps:read
      description: ''
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      description:
                        type: string
                      version:
                        type: integer
                      beta:
                        type: boolean
                      theme:
                        type: string
                        format: color
                      language:
                        type: string
                      public:
                        type: boolean
                      approved:
                        type: boolean
                      global:
                        type: boolean
                      countries:
                        type: array
                        items: {}
                      created:
                        type: string
                        format: date-time
                      manifestVersion:
                        type: integer
              examples:
                get-app:
                  summary: Get App
                  value:
                    app:
                      name: postman-test-app-1
                      label: Postman Test App
                      description: This is a testing app from Postman
                      version: 1
                      beta: true
                      theme: '#ff00ff'
                      language: en
                      public: false
                      approved: false
                      global: true
                      countries: null
                      created: '2019-12-18T11:55:31.655Z'
                      manifestVersion: 2
    patch:
      tags:
        - SDK Apps
      summary: Patch App
      security:
        - token:
            - sdk-apps:write
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              audience: countries
              description: Hey there, Charlie!
              countries:
                - us
                - uk
                - cz
              label: Multiverse
              theme: '#AABBCC'
              language: en
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      description:
                        type: string
                      version:
                        type: integer
                      theme:
                        type: string
                        format: color
                      public:
                        type: boolean
                      approved:
                        type: boolean
              examples:
                patch-app:
                  summary: Patch App
                  value:
                    app:
                      name: beta-13-3
                      label: Multiverse
                      description: Hey there, Charlie!
                      version: 1
                      theme: '#aabbcc'
                      public: false
                      approved: false
    delete:
      tags:
        - SDK Apps
      summary: Delete App
      security:
        - token:
            - sdk-apps:write
      description: ''
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: string
              examples:
                delete-app:
                  summary: Delete App
                  value:
                    app: postman-test-app-1
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/clone:
    post:
      tags:
        - SDK Apps
      summary: Clone App
      security:
        - token:
            - sdk-apps:read
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                newVersion:
                  type: integer
            example:
              newName: beta-1
              newVersion: 2
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - versionFull
          example: versionFull
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      description:
                        type: string
                      version:
                        type: integer
                      beta:
                        type: boolean
                      theme:
                        type: string
                        format: color
                      language:
                        type: string
                      public:
                        type: boolean
                      approved:
                        type: boolean
                      global:
                        type: boolean
                      countries:
                        type: array
                        items: {}
                      created:
                        type: string
                        format: date-time
                      manifestVersion:
                        type: integer
              examples:
                clone-app:
                  summary: Clone App
                  value:
                    app:
                      name: postman-test-app-1
                      label: Postman Test App
                      description: This is a testing app from Postman
                      version: 1
                      beta: true
                      theme: '#ff00ff'
                      language: en
                      public: false
                      approved: false
                      global: true
                      countries: null
                      created: '2019-12-18T11:55:31.655Z'
                      manifestVersion: 2
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/review:
    get:
      tags:
        - SDK Apps
      summary: Get App Review
      security:
        - token:
            - sdk-apps:read
      description: ''
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  review:
                    type: object
                    properties:
                      contactName:
                        type: string
                      contactEmail:
                        type: string
                        format: email
                      reviewerName:
                        type: string
                      reviewerEmail:
                        type: string
                        format: email
                      codeStatus:
                        type: string
                      testStatus:
                        type: string
                      docsStatus:
                        type: string
              examples:
                get-app-review:
                  summary: Get App Review
                  value:
                    review:
                      contactName: admin
                      contactEmail: admin@make.cloud
                      reviewerName: null
                      reviewerEmail: null
                      codeStatus: null
                      testStatus: null
                      docsStatus: null
    post:
      tags:
        - SDK Apps
      summary: Request Review
      security:
        - token:
            - sdk-apps:write
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  requested:
                    type: boolean
              examples:
                request-review:
                  summary: Request Review
                  value:
                    requested: true
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/review/form:
    get:
      tags:
        - SDK Apps
      summary: Get App Review Form
      security:
        - token:
            - sdk-apps:read
      description: ''
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  config:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        label:
                          type: string
                        type:
                          type: string
                        required:
                          type: boolean
                        spec:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              label:
                                type: string
                              type:
                                type: string
                  values:
                    type: object
                    properties:
                      testingScenarios:
                        type: object
              examples:
                get-app-review-form:
                  summary: Get App Review Form
                  value:
                    config:
                      - name: testingScenarios
                        label: '{{!apps.review.testingScenarios}}'
                        type: collection
                        required: true
                        spec:
                          - name: hohoho
                            label: 'Module: Hohoho'
                            type: url
                    values:
                      testingScenarios: {}
    put:
      tags:
        - SDK Apps
      summary: Submit App Review Form
      security:
        - token:
            - sdk-apps:write
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                testingScenarios:
                  type: object
            example:
              testingScenarios:
                hohoho: https://www.santa.com
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  form:
                    type: object
                    properties:
                      testingScenarios:
                        type: object
              examples:
                submit-app-review-form:
                  summary: Submit App Review Form
                  value:
                    form:
                      testingScenarios:
                        hohoho: https://www.santa.com
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/events-log:
    get:
      tags:
        - SDK Apps
      summary: Get App Events Log
      security:
        - token:
            - sdk-apps:read
      description: ''
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        appName:
                          type: string
                        appVersion:
                          type: integer
                        message:
                          type: string
                        detail:
                          type: object
                        authorId:
                          type: integer
                        createdAt:
                          type: string
                          format: date-time
              examples:
                get-app-events-log:
                  summary: Get App Events Log
                  value:
                    events:
                      - id: 2
                        appName: webhook-zmetek
                        appVersion: 1
                        message: Approval requested.
                        detail: {}
                        authorId: 1
                        createdAt: '2021-03-01T13:07:20.852Z'
                      - id: 1
                        appName: webhook-zmetek
                        appVersion: 1
                        message: App has been published.
                        detail: {}
                        authorId: 1
                        createdAt: '2021-03-01T12:36:52.837Z'
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/common:
    get:
      tags:
        - SDK Apps
      summary: Get App Common
      description: Get app client id and client secret.
      security:
        - token:
            - sdk-apps:read
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          description: The numeric version of the app.
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          description: The numeric version of the app.
          required: true
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
              examples:
                default:
                  summary: Get App Common
                  value:
                    clientId: 123456
                    clientSecret: secret
    put:
      tags:
        - SDK Apps
      summary: Set app common data
      description: >-
        Sets the common data for the app based on the parameters passed in the
        request body. In the response, it returns all details of common data.
        Common data usually contain sensitive information like API keys or API
        secrets and these details are shared across all modules.
      security:
        - token:
            - sdk-apps:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The JSON object containing the common data.
            example:
              clientId: 123456
              clientSecret: secret
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          description: The name of the app.
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          description: The app version.
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              examples:
                default:
                  summary: Set App Common
                  value:
                    changed: true
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/readme:
    get:
      tags:
        - SDK Apps
      summary: Get App Docs
      security:
        - token:
            - sdk-apps:read
      description: ''
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
              examples:
                get-app-docs:
                  summary: Get App Docs
                  value: '# Hey There'
    put:
      tags:
        - SDK Apps
      summary: Set App Docs
      security:
        - token:
            - sdk-apps:write
      description: ''
      requestBody:
        content:
          text/plain:
            schema:
              type: string
              example: I see you.
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: text/markdown
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              examples:
                set-app-docs:
                  summary: Set App Docs
                  value:
                    changed: true
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/{SDK_appSection}:
    get:
      tags:
        - SDK Apps
      summary: Get App Section
      security:
        - token:
            - sdk-apps:read
      description: ''
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: SDK_appSection
          in: path
          schema:
            type: string
            enum:
              - base
              - groups
              - install
              - installSpec
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  baseUrl:
                    type: string
                    format: uri
                  log:
                    type: object
                    properties:
                      sanitize:
                        type: array
                        items:
                          type: string
              examples:
                get-app-section:
                  summary: Get App Section
                  value:
                    baseUrl: https://www.example.com
                    log:
                      sanitize:
                        - request.headers.authorization
    put:
      tags:
        - SDK Apps
      summary: Set App Section
      security:
        - token:
            - sdk-apps:write
      description: |
        Available sections: base, groups, install, installSpec<br />
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  type:
                    type: string
            example:
              - name: text
                type: text
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: integer
          required: true
        - name: SDK_appSection
          in: path
          schema:
            type: string
            enum:
              - base
              - groups
              - install
              - installSpec
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/jsonc
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  change:
                    type: object
              examples:
                set-app-section:
                  summary: Set App Section
                  value:
                    change: {}
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/{SDK_appVisibility}:
    post:
      tags:
        - SDK Apps
      summary: Set App Visibility
      security:
        - token:
            - sdk-apps:write
      requestBody:
        content: {}
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVisibility
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: text/plain
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              examples:
                set-app-visibility:
                  summary: Set App Visibility
                  value:
                    changed: true
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/opensource:
    post:
      tags:
        - SDK Apps
      summary: Set App Opensource
      security:
        - token:
            - sdk-apps:write
      description: |
        beta, stable<br />
      requestBody:
        content: {}
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: text/plain
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              examples:
                set-app-opensource:
                  summary: Set App Opensource
                  value:
                    changed: true
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/closedsource:
    post:
      tags:
        - SDK Apps
      summary: Set App ClosedSource
      security:
        - token:
            - sdk-apps:write
      description: |
        beta, stable<br />
      requestBody:
        content: {}
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: text/plain
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              examples:
                set-app-closedsource:
                  summary: Set App ClosedSource
                  value:
                    changed: true
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/changes/{SDK_changeId}:
    get:
      tags:
        - SDK Apps
      summary: Get Change
      security:
        - token:
            - sdk-apps:read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  group:
                    type: string
                  code:
                    type: string
                  oldValue:
                    type: string
                  newValue:
                    type: string
              examples:
                getChange:
                  value:
                    id: 5
                    group: text
                    code: text
                    oldValue: text
                    newValue: text
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_changeId
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/commit:
    post:
      tags:
        - SDK Apps
      summary: Commit Changes
      security:
        - token:
            - sdk-apps:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                notify:
                  type: boolean
                changeIds:
                  type: array
                  items:
                    type: integer
            example:
              message: Just a small tweak
              notify: false
              changeIds:
                - 1
                - 2
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: boolean
              example: true
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/rollback:
    post:
      tags:
        - SDK Apps
      summary: Rollback Changes
      security:
        - token:
            - sdk-apps:write
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: object
                    additionalProperties: {}
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/icon/{SDK_appIconSize}:
    get:
      tags:
        - SDK Apps
      summary: Get App Logo
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content-type:
                    type: string
                  content-length:
                    type: integer
                  icon:
                    type: string
                    format: byte
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appIconSize
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/icon:
    put:
      tags:
        - SDK Apps
      summary: Set App Logo
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          text/plain: {}
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              examples:
                set-app-icon:
                  summary: Set App Logo
                  value:
                    changed: true
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/uninstall:
    post:
      tags:
        - SDK Apps
      summary: Uninstall App from Organization
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                organizationId:
                  type: integer
            example:
              organizationId: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    label:
                      type: string
                    appVersion:
                      type: integer
                    organizationId:
                      type: integer
                    installedAt:
                      type: string
                      format: date-time
                    userId:
                      type: string
                    theme:
                      type: string
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
  /sdk/apps/invites/{SDK_appInviteToken}:
    get:
      tags:
        - SDK Apps > Invites
      summary: Get App Invite
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appInviteToken
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appInvite:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      theme:
                        type: string
                        format: color
                      created:
                        type: string
                        format: date-time
                      access:
                        type: boolean
                      manifestBasic:
                        type: object
                        properties:
                          icon:
                            type: string
                          name:
                            type: string
                          label:
                            type: string
                          theme:
                            type: string
                            format: color
                          groups:
                            type: array
                            items:
                              type: object
                              properties:
                                label:
                                  type: string
                                modules:
                                  type: array
                                  items:
                                    type: string
                          public:
                            type: boolean
                          actions:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                label:
                                  type: string
                                public:
                                  type: boolean
                                approved:
                                  type: boolean
                                responder:
                                  type: boolean
                                description:
                                  type: string
                          version:
                            type: string
                          searches:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                label:
                                  type: string
                                public:
                                  type: boolean
                                approved:
                                  type: boolean
                                description:
                                  type: string
                          triggers:
                            type: array
                            items:
                              type: object
                              properties:
                                acid:
                                  type: boolean
                                name:
                                  type: string
                                label:
                                  type: string
                                public:
                                  type: boolean
                                approved:
                                  type: boolean
                                listener:
                                  type: boolean
                                description:
                                  type: string
                          description:
                            type: string
                      language:
                        type: string
              examples:
                get-app-invite:
                  summary: Get App Invite
                  value:
                    appInvite:
                      name: dominik-example
                      label: Example
                      theme: '#2f8cbb'
                      created: '2021-01-06T12:31:47.261Z'
                      access: true
                      manifestBasic:
                        icon: /img/apps/dominik-example.png
                        name: app#dominik-example
                        label: Example
                        theme: '#2f8cbb'
                        groups:
                          - label: Objects
                            modules:
                              - watchObjects
                              - searchObjects
                              - createObject
                              - deleteObject
                          - label: Notifications
                            modules:
                              - watchNotifications
                              - resolveNotification
                          - label: Other
                            modules:
                              - makeAnAPICall
                              - makeGQLAPICall
                        public: true
                        actions:
                          - name: makeAnAPICall
                            label: Make an API Call
                            public: true
                            approved: false
                            responder: false
                            description: Performs an arbitrary authorized API request.
                          - name: createObject
                            label: Create Object
                            public: true
                            approved: false
                            responder: false
                            description: Creates a new Object.
                          - name: deleteObject
                            label: Delete Object
                            public: true
                            approved: false
                            responder: false
                            description: Deletes the given Object.
                          - name: resolveNotification
                            label: Resolves a Notification
                            public: true
                            approved: false
                            responder: true
                            description: Responds to the Notification.
                          - name: makeGQLAPICall
                            label: Make a GraphQL Call
                            public: true
                            approved: false
                            responder: false
                            description: Performs arbitrary GraphQL Query.
                        version: 1.0.0
                        searches:
                          - name: searchObjects
                            label: Search Objects
                            public: true
                            approved: false
                            description: Searches for Objects.
                        triggers:
                          - acid: true
                            name: watchObjects
                            label: Watch Objects
                            public: true
                            approved: false
                            listener: false
                            description: Triggers when a new Object is created.
                          - acid: true
                            name: watchNotifications
                            label: Watch Notifications
                            public: true
                            approved: false
                            listener: true
                            description: Triggers when a new Notification is received.
                        description: null
                      language: en
    post:
      tags:
        - SDK Apps > Invites
      summary: Accept App Invite
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                organizationId:
                  type: integer
            example:
              organizationId: 13
      parameters:
        - name: SDK_appInviteToken
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appInvite:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      theme:
                        type: string
                        format: color
                      created:
                        type: string
                        format: date-time
                      access:
                        type: boolean
                      manifestBasic:
                        type: object
                        properties:
                          icon:
                            type: string
                          name:
                            type: string
                          label:
                            type: string
                          theme:
                            type: string
                            format: color
                          groups:
                            type: array
                            items:
                              type: object
                              properties:
                                label:
                                  type: string
                                modules:
                                  type: array
                                  items:
                                    type: string
                          public:
                            type: boolean
                          actions:
                            type: object
                            properties:
                              public:
                                type: boolean
                              approved:
                                type: boolean
                              name:
                                type: string
                              label:
                                type: string
                              description:
                                type: string
                              responder:
                                type: boolean
                              supportsAgent:
                                type: boolean
                          version:
                            type: string
                          searches:
                            type: object
                            properties:
                              public:
                                type: boolean
                              approved:
                                type: boolean
                              name:
                                type: string
                              label:
                                type: string
                              description:
                                type: string
                              supportsAgent:
                                type: boolean
                          triggers:
                            type: object
                            properties:
                              public:
                                type: boolean
                              approved:
                                type: boolean
                              name:
                                type: string
                              label:
                                type: string
                              description:
                                type: string
                              acid:
                                type: boolean
                              listener:
                                type: boolean
                              supportsAgent:
                                type: boolean
                          description:
                            type: string
                      language:
                        type: string
              examples:
                get-app-invite:
                  summary: Get App Invite
                  value:
                    appInvite:
                      name: custom-app-1
                      label: Update App 2
                      theme: '#caffee'
                      created: '2019-12-18T11:31:25.803Z'
                      access: true
                      manifestBasic:
                        icon: /img/apps/custom-app-1.png
                        name: app#custom-app-1
                        label: Update App 2
                        theme: '#caffee'
                        groups:
                          - label: Other
                            modules:
                              - postmanModule5
                              - getEntity
                              - getEntity2
                              - getEntity3
                        public: true
                        actions:
                          public: true
                          approved: true
                          name: name
                          label: label
                          description: description
                          responder: false
                          supportsAgent: false
                        version: 1.0.0
                        searches:
                          public: true
                          approved: true
                          name: name
                          label: label
                          description: description
                          supportsAgent: false
                        triggers:
                          public: true
                          approved: false
                          name: name
                          label: label
                          description: description
                          acid: false
                          listener: true
                          supportsAgent: true
                        description: This is appka.
                      language: cs
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/modules:
    post:
      tags:
        - SDK Apps > Modules
      summary: Create Module
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                typeId:
                  type: integer
                label:
                  type: string
                description:
                  type: string
            example:
              name: getEntity
              typeId: 4
              label: Get Entity
              description: Retrieves the given entity.
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appModule:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      description:
                        type: string
                      typeId:
                        type: integer
                      crud:
                        type: string
                      connection:
                        type: string
                      webhook:
                        type: string
              examples:
                create-module:
                  summary: Create Module
                  value:
                    appModule:
                      name: getEntity
                      label: Get Entity
                      description: Retrieves the given entity.
                      typeId: 4
                      crud: null
                      connection: null
                      webhook: null
    get:
      tags:
        - SDK Apps > Modules
      summary: List App Modules
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appModules:
                    type: array
                    items:
                      type: object
              examples:
                list-app-modules:
                  summary: List App Modules
                  value:
                    appModules:
                      - name: postmanModule5
                        label: BezVisKam
                        typeId: 1
                        public: false
                        approved: false
                        description: Bleeeeee
                        crud: read
                      - name: getEntity
                        label: Get Entity
                        typeId: 4
                        public: false
                        approved: false
                        description: Retrieves the given entity.
                        crud: null
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/modules/{SDK_moduleName}:
    get:
      tags:
        - SDK Apps > Modules
      summary: Get Module
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appModule:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      description:
                        type: string
                      typeId:
                        type: integer
                      public:
                        type: boolean
                      approved:
                        type: boolean
                      crud:
                        type: string
                      connection:
                        type: string
                      altConnection:
                        type: string
                      webhook:
                        type: string
              examples:
                get-module:
                  summary: Get Module
                  value:
                    appModule:
                      name: getEntity
                      label: Get Entity
                      description: Retrieves the given entity.
                      typeId: 4
                      public: false
                      approved: false
                      crud: null
                      connection: null
                      altConnection: null
                      webhook: null
    patch:
      tags:
        - SDK Apps > Modules
      summary: Patch Module
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                description:
                  type: string
                connection:
                  type: string
            example:
              label: Get Order
              description: Retrieves the order by its id.
              connection: charlie-1
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appModule:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      description:
                        type: string
                      typeId:
                        type: integer
                      crud:
                        type: string
                      connection:
                        type: string
                      altConnection:
                        type: string
                      webhook:
                        type: string
              examples:
                patch-module:
                  summary: Patch Module
                  value:
                    appModule:
                      name: getEntity
                      label: Get Order
                      description: Retrieves the order by its id.
                      typeId: 4
                      crud: null
                      connection: charlie-1
                      altConnection: null
                      webhook: null
    delete:
      tags:
        - SDK Apps > Modules
      summary: Delete Module
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appModule:
                    type: string
              examples:
                delete-module:
                  summary: Delete Module
                  value:
                    appModule: getEntity
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/modules/{SDK_moduleName}/{SDK_moduleSection}:
    get:
      tags:
        - SDK Apps > Modules
      summary: Get Module Section
      security:
        - token:
            - sdk-apps:read
      description: >
        Available sections: api, epoch, parameters, expect, interface, samples,
        scope<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleSection
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  method:
                    type: string
                  qs:
                    type: object
                    additionalProperties: {}
                  body:
                    type: object
                    additionalProperties: {}
                  headers:
                    type: object
                    additionalProperties: {}
                  response:
                    type: object
                    properties:
                      iterate:
                        type: string
                      trigger:
                        type: object
                        properties:
                          id:
                            type: string
                          date:
                            type: string
                          type:
                            type: string
                          order:
                            type: string
                      output:
                        type: string
                      limit:
                        type: string
              examples:
                get-module-section:
                  summary: Get Module Section
                  value:
                    url: /api/users
                    method: GET
                    qs: {}
                    body: {}
                    headers: {}
                    response:
                      iterate: '{{body.users}}'
                      trigger:
                        id: '{{item.id}}'
                        date: '{{item.created}}'
                        type: string
                        format: date
                        order: desc
                      output: '{{item}}'
                      limit: '{{parameters.limit}}'
    put:
      tags:
        - SDK Apps > Modules
      summary: Set Module Section
      security:
        - token:
            - sdk-apps:write
      description: >
        Available sections: api, epoch, parameters, expect, interface, samples,
        scope<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                method:
                  type: string
                qs:
                  type: object
                body:
                  type: object
                headers:
                  type: object
                response:
                  type: object
                  properties:
                    iterate:
                      type: string
                    trigger:
                      type: object
                      properties:
                        id:
                          type: string
                        date:
                          type: string
                        type:
                          type: string
                        order:
                          type: string
                    output:
                      type: string
                    limit:
                      type: string
            example:
              url: /api/users
              method: GET
              qs: {}
              body: {}
              headers: {}
              response:
                iterate: '{{body.users}}'
                trigger:
                  id: '{{item.id}}'
                  date: '{{item.created}}'
                  type: string
                  format: date
                  order: desc
                output: '{{item}}'
                limit: '{{parameters.limit}}'
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleSection
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/jsonc
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  method:
                    type: string
                  qs:
                    type: object
                  body:
                    type: object
                  headers:
                    type: object
                  response:
                    type: object
                    properties:
                      iterate:
                        type: string
                      trigger:
                        type: object
                        properties:
                          id:
                            type: string
                          date:
                            type: string
                          type:
                            type: string
                          order:
                            type: string
                      output:
                        type: string
                      limit:
                        type: string
              examples:
                get-module-section:
                  summary: Get Module Section
                  value:
                    url: /api/users
                    method: GET
                    qs: {}
                    body: {}
                    headers: {}
                    response:
                      iterate: '{{body.users}}'
                      trigger:
                        id: '{{item.id}}'
                        date: '{{item.created}}'
                        type: string
                        format: date
                        order: desc
                      output: '{{item}}'
                      limit: '{{parameters.limit}}'
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/modules/{SDK_moduleName}/{SDK_moduleVisibility}:
    post:
      tags:
        - SDK Apps > Modules
      summary: Set Module Visibility
      security:
        - token:
            - sdk-apps:write
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful respons
          content:
            text/plain:
              schema:
                type: boolean
              example: true
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleVisibility
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: text/plain
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/modules/{SDK_moduleName}/clone:
    post:
      tags:
        - SDK Apps > Modules
      summary: Clone Module
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
            example:
              newName: apicek
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  module:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      description:
                        type: string
                      typeId:
                        type: integer
                      connection:
                        type: string
                      webhook:
                        type: string
                      crud:
                        type: string
              examples:
                clone-module:
                  summary: Clone Module
                  value:
                    module:
                      name: apicek
                      label: Testicek (clone)
                      description: Těstíčko.
                      typeId: 4
                      connection: multiverse
                      webhook: null
                      crud: null
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/modules/{SDK_moduleName}/{SDK_moduleDeprecation}:
    post:
      tags:
        - SDK Apps > Modules
      summary: Set Module Deprecation
      security:
        - token:
            - sdk-apps:write
      requestBody:
        content: {}
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_moduleDeprecation
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: text/plain
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              examples:
                set-module-deprecation:
                  summary: Set Module Deprecation
                  value:
                    changed: true
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/rpcs:
    get:
      tags:
        - SDK Apps > RPCs
      summary: List App RPCs
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  rpcs:
                    type: array
                    items: {}
              examples:
                list-app-rpcs:
                  summary: List App RPCs
                  value:
                    rpcs: []
    post:
      tags:
        - SDK Apps > RPCs
      summary: Create RPC
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                label:
                  type: string
            example:
              name: listUseriiinos
              label: List Users
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appRpc:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
              examples:
                create-rpc:
                  summary: Create RPC
                  value:
                    appRpc:
                      name: listUsers
                      label: List Users
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/rpcs/{SDK_rpcName}:
    delete:
      tags:
        - SDK Apps > RPCs
      summary: Delete RPC
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_rpcName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appRpc:
                    type: string
              examples:
                delete-rpc:
                  summary: Delete RPC
                  value:
                    appRpc: listUsers
    get:
      tags:
        - SDK Apps > RPCs
      summary: Get RPC
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_rpcName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appRpc:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      connection:
                        type: string
                      altConnection:
                        type: string
              examples:
                get-rpc:
                  summary: Get RPC
                  value:
                    appRpc:
                      name: listUsers
                      label: List Users
                      connection: null
                      altConnection: null
    patch:
      tags:
        - SDK Apps > RPCs
      summary: Patch RPC
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
            example:
              label: IDI
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_rpcName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appRpc:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      connection:
                        type: string
                      altConnection:
                        type: string
              examples:
                patch-rpc:
                  summary: Patch RPC
                  value:
                    appRpc:
                      name: listUseriiinos
                      label: IDI
                      connection: null
                      altConnection: null
    post:
      tags:
        - SDK Apps > RPCs
      summary: Test RPC
      security:
        - token:
            - sdk-apps:write
      description: |
        Tests the RPC<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: utc-millisec
                    jidlo:
                      type: string
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      type:
                        type: string
                      required:
                        type: boolean
            example:
              data:
                id: '1'
                jidlo: Černá zabijačkováasdf
              schema:
                - name: id
                  type: integer
                  required: true
                - name: jidlo
                  type: text
                  required: true
      responses:
        '200':
          description: Successful response
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_rpcName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: imt-remote-formula
          in: header
          schema:
            type: integer
          example: '1'
        - name: imt-ignore-required
          in: header
          schema:
            type: string
          example: 'yes'
        - name: imt-validate-schema
          in: header
          schema:
            type: string
          example: 'yes'
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/rpcs/{SDK_rpcName}/{SDK_rpcSection}:
    get:
      tags:
        - SDK Apps > RPCs
      summary: Get RPC Section
      security:
        - token:
            - sdk-apps:read
      description: |
        Available sections: api, parameters<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_rpcName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_rpcSection
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  method:
                    type: string
                  qs:
                    type: object
                  body:
                    type: object
                  headers:
                    type: object
                  response:
                    type: object
                    properties:
                      iterate:
                        type: string
                      output:
                        type: object
                        properties:
                          label:
                            type: string
                          value:
                            type: string
              examples:
                get-rpc-section:
                  summary: Get RPC Section
                  value:
                    url: /api/users
                    method: GET
                    qs: {}
                    body: {}
                    headers: {}
                    response:
                      iterate: '{{body.users}}'
                      output:
                        label: '{{item.name}}'
                        value: '{{item.id}}'
    put:
      tags:
        - SDK Apps > RPCs
      summary: Set RPC Section
      security:
        - token:
            - sdk-apps:write
      description: |
        Available sections: api, parameters<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                method:
                  type: string
                qs:
                  type: object
                body:
                  type: object
                headers:
                  type: object
                response:
                  type: object
                  properties:
                    iterate:
                      type: string
                    output:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
            example:
              url: /api/users
              method: GET
              qs: {}
              body: {}
              headers: {}
              response:
                iterate: '{{body.users}}'
                output:
                  label: '{{item.name}}'
                  value: '{{item.id}}'
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_rpcName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_rpcSection
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/jsonc
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  change:
                    type: object
              examples:
                set-rpc-section:
                  summary: Set RPC Section
                  value:
                    change: {}
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/functions:
    post:
      tags:
        - SDK Apps > Functions
      summary: Create Function
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            example:
              name: parseTime3
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appFunction:
                    type: object
                    properties:
                      name:
                        type: string
              examples:
                create-function:
                  summary: Create Function
                  value:
                    appFunction:
                      name: parseTime
    get:
      tags:
        - SDK Apps > Functions
      summary: List App Functions
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  functions:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        args:
                          type: string
              examples:
                list-app-functions:
                  summary: List App Functions
                  value:
                    functions:
                      - name: myFunction
                        args: ()
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/functions/{SDK_functionName}:
    get:
      tags:
        - SDK Apps > Functions
      summary: Get Function
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_functionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appFunction:
                    type: object
                    properties:
                      name:
                        type: string
              examples:
                get-function:
                  summary: Get Function
                  value:
                    appFunction:
                      name: parseTime
    delete:
      tags:
        - SDK Apps > Functions
      summary: Delete Function
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_functionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appFunction:
                    type: string
              examples:
                delete-function:
                  summary: Delete Function
                  value:
                    appFunction: parseTime
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/functions/{SDK_functionName}/code:
    get:
      tags:
        - SDK Apps > Functions
      summary: Get Function Code
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_functionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
              examples:
                get-function-code:
                  summary: Get Function Code
                  value: |-
                    function parseTime() {

                    }
    put:
      tags:
        - SDK Apps > Functions
      summary: Set Function Code
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          text/plain:
            schema:
              type: string
              example: "function parseTime() {\n\tconst a = \"Hey There\"\n}"
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_functionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/javascript
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  change:
                    type: object
              examples:
                set-function-code:
                  summary: Set Function Code
                  value:
                    change: {}
  /sdk/apps/{SDK_appName}/{SDK_appVersion}/functions/{SDK_functionName}/test:
    get:
      tags:
        - SDK Apps > Functions
      summary: Get Function Test
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      responses:
        '200':
          description: Successful response
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_functionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
    put:
      tags:
        - SDK Apps > Functions
      summary: Set Function Test
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          text/plain:
            schema:
              type: string
              example: console.log('AAA');
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_appVersion
          in: path
          schema:
            type: string
          required: true
        - name: SDK_functionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/javascript
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              examples:
                set-function-test:
                  summary: Set Function Test
                  value:
                    changed: true
  /sdk/apps/{SDK_appName}/connections:
    post:
      tags:
        - SDK Apps > Connections
      summary: Create Connection
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                label:
                  type: string
            example:
              type: basic
              label: Hello Charlie
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appConnection:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      type:
                        type: string
              examples:
                create-connection:
                  summary: Create Connection
                  value:
                    appConnection:
                      name: custom-app-13
                      label: Main Connection
                      type: basic
    get:
      tags:
        - SDK Apps > Connections
      summary: List App Connections
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  connections:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        label:
                          type: string
                        type:
                          type: string
              examples:
                list-app-connections:
                  summary: List App Connections
                  value:
                    connections:
                      - name: testConnection
                        label: Test Connection
                        type: oauth
                      - name: postman-test-app-6-1
                        label: Test Connection
                        type: oauth
                      - name: postman-test-app-6-12
                        label: Test Connection
                        type: oauth
                      - name: postman-test-app-6-13
                        label: Test Connection
                        type: oauth
                      - name: postman-test-app-6-14
                        label: Test Connection
                        type: oauth
                      - name: postman-test-app-6-15
                        label: Test Connection
                        type: oauth
                      - name: postman-test-app-6-16
                        label: Test Connection
                        type: oauth
  /sdk/apps/connections/{SDK_connectionName}:
    get:
      tags:
        - SDK Apps > Connections
      summary: Get Connection
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_connectionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appConnection:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      type:
                        type: string
              examples:
                get-connection:
                  summary: Get Connection
                  value:
                    appConnection:
                      name: custom-app-13
                      label: Main Connection
                      type: basic
    patch:
      tags:
        - SDK Apps > Connections
      summary: Update Connection
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
            example:
              label: Main Connection
      parameters:
        - name: SDK_connectionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appConnection:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      type:
                        type: string
              examples:
                update-connection:
                  summary: Update Connection
                  value:
                    appConnection:
                      name: charlie-1
                      label: Main Connection
                      type: basic
    delete:
      tags:
        - SDK Apps > Connections
      summary: Delete Connection
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_connectionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appConnection:
                    type: string
              examples:
                delete-connection:
                  summary: Delete Connection
                  value:
                    appConnection: custom-app-13
  /sdk/apps/connections/{SDK_connectionName}/{SDK_connectionSection}:
    get:
      tags:
        - SDK Apps > Connections
      summary: Get Connection Section
      security:
        - token:
            - sdk-apps:read
      description: >
        Available sections: api, parameters, scopes, scope, install,
        installSpec<br />
      parameters:
        - name: SDK_connectionName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_connectionSection
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  authorize:
                    type: object
                    properties:
                      qs:
                        type: object
                        properties:
                          scope:
                            type: string
                          client_id:
                            type: string
                          redirect_uri:
                            type: string
                          response_type:
                            type: string
                      url:
                        type: string
                        format: uri
                      response:
                        type: object
                        properties:
                          temp:
                            type: object
                            properties:
                              code:
                                type: string
                  token:
                    type: object
                    properties:
                      url:
                        type: string
                        format: uri
                      body:
                        type: object
                        properties:
                          code:
                            type: string
                          client_id:
                            type: string
                          grant_type:
                            type: string
                          redirect_uri:
                            type: string
                          client_secret:
                            type: string
                      type:
                        type: string
                      method:
                        type: string
                      response:
                        type: object
                        properties:
                          data:
                            type: object
                            properties:
                              accessToken:
                                type: string
                      log:
                        type: object
                        properties:
                          sanitize:
                            type: array
                            items:
                              type: string
                  info:
                    type: object
                    properties:
                      url:
                        type: string
                        format: uri
                      headers:
                        type: object
                        properties:
                          authorization:
                            type: string
                      response:
                        type: object
                        properties:
                          uid:
                            type: string
                          metadata:
                            type: object
                            properties:
                              type:
                                type: string
                              value:
                                type: string
                      log:
                        type: object
                        properties:
                          sanitize:
                            type: array
                            items:
                              type: string
                  invalidate:
                    type: object
                    properties:
                      url:
                        type: string
                        format: uri
                      headers:
                        type: object
                        properties:
                          authorization:
                            type: string
                      log:
                        type: object
                        properties:
                          sanitize:
                            type: array
                            items:
                              type: string
              examples:
                get-connection-section:
                  summary: Get Connection Section
                  value:
                    authorize:
                      qs:
                        scope: '{{join(oauth.scope, '','')}}'
                        client_id: '{{ifempty(parameters.clientId, common.clientId)}}'
                        redirect_uri: '{{oauth.redirectUri}}'
                        response_type: code
                      url: https://www.example.com/oauth/authorize
                      response:
                        temp:
                          code: '{{query.code}}'
                    token:
                      url: https://www.example.com/api/token
                      body:
                        code: '{{temp.code}}'
                        client_id: '{{ifempty(parameters.clientId, common.clientId)}}'
                        grant_type: authorization_code
                        redirect_uri: '{{oauth.redirectUri}}'
                        client_secret: >-
                          {{ifempty(parameters.clientSecret,
                          common.clientSecret)}}
                      type: urlencoded
                      method: POST
                      response:
                        data:
                          accessToken: '{{body.access_token}}'
                      log:
                        sanitize:
                          - request.body.code
                          - request.body.client_secret
                          - response.body.access_token
                    info:
                      url: https://www.example.com/api/whoami
                      headers:
                        authorization: Bearer {{connection.accessToken}}
                      response:
                        uid: '{{body.id}}'
                        metadata:
                          type: text
                          value: '{{body.user}}'
                      log:
                        sanitize:
                          - request.headers.authorization
                    invalidate:
                      url: https://www.example.com/oauth/invalidate
                      headers:
                        authorization: Bearer {{connection.accessToken}}
                      log:
                        sanitize:
                          - request.headers.authorization
    put:
      tags:
        - SDK Apps > Connections
      summary: Set Connection Section
      security:
        - token:
            - sdk-apps:write
      description: >
        Available sections: api, parameters, scopes, scope, installSpec,
        install<br />
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  nazdar:
                    type: string
            example:
              - type: text
                nazdar: molly
      parameters:
        - name: SDK_connectionName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_connectionSection
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/jsonc
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  change:
                    type: object
              examples:
                set-connection-section:
                  summary: Set Connection Section
                  value:
                    change: {}
  /sdk/apps/connections/{SDK_connectionName}/common:
    get:
      tags:
        - SDK Apps > Connections
      summary: Get Connection Common
      security:
        - token:
            - sdk-apps:read
      parameters:
        - name: SDK_connectionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientId:
                    type: string
                  clientSecret:
                    type: string
              examples:
                get-connection-common:
                  summary: Get Connection Common
                  value:
                    clientId: ENTER_CLIENT_ID_HERE
                    clientSecret: ENTER_CLIENT_SECRET_HERE
    put:
      tags:
        - SDK Apps > Connections
      summary: Set Connection Common
      security:
        - token:
            - sdk-apps:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
            example:
              clientId: ENTER_CLIENT_ID_HEREEEEE
              clientSecret: ENTER_CLIENT_SECRET_HERE
      parameters:
        - name: SDK_connectionName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              examples:
                set-connection-common:
                  summary: Set Connection Common
                  value:
                    changed: true
  /sdk/apps/{SDK_appName}/webhooks:
    post:
      tags:
        - SDK Apps > Webhooks
      summary: Create Webhook
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                label:
                  type: string
            example:
              type: web
              label: Watch Events
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appWebhook:
                    type: object
                    properties:
                      label:
                        type: string
                      type:
                        type: string
              examples:
                create-webhook:
                  summary: Create Webhook
                  value:
                    appWebhook:
                      label: Watch Events
                      type: web
    get:
      tags:
        - SDK Apps > Webhooks
      summary: List App Webhooks
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_appName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhooks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        label:
                          type: string
                        type:
                          type: string
              examples:
                list-app-webhooks:
                  summary: List App Webhooks
                  value:
                    webhooks:
                      - name: postman-test-app-6-1
                        label: Test Connection
                        type: web
                      - name: aaaa
                        label: Test Connection
                        type: web
                      - name: postman-test-app-6-12
                        label: Test Connection
                        type: web
                      - name: postman-test-app-6-13
                        label: Test Connection
                        type: web
  /sdk/apps/webhooks/{SDK_webhookName}:
    get:
      tags:
        - SDK Apps > Webhooks
      summary: Get Webhook
      security:
        - token:
            - sdk-apps:read
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_webhookName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appWebhook:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      type:
                        type: string
                      connection:
                        type: string
                      altConnection:
                        type: string
              examples:
                get-webhook:
                  summary: Get Webhook
                  value:
                    appWebhook:
                      name: custom-app-12
                      label: Watch Events
                      type: web
                      connection: custom-app-1
                      altConnection: null
    patch:
      tags:
        - SDK Apps > Webhooks
      summary: Update Webhook
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
            example:
              label: Test Renamed
      parameters:
        - name: SDK_webhookName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appWebhook:
                    type: object
                    properties:
                      name:
                        type: string
                      label:
                        type: string
                      type:
                        type: string
                      connection:
                        type: string
                      altConnection:
                        type: string
              examples:
                update-webhook:
                  summary: Update Webhook
                  value:
                    appWebhook:
                      name: charlie-1
                      label: Test Renamed
                      type: web
                      connection: null
                      altConnection: null
    delete:
      tags:
        - SDK Apps > Webhooks
      summary: Delete Webhook
      security:
        - token:
            - sdk-apps:write
      description: |
        Retrieves a list of all apps available to the user.<br />
      parameters:
        - name: SDK_webhookName
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  appWebhook:
                    type: string
              examples:
                delete-webhook:
                  summary: Delete Webhook
                  value:
                    appWebhook: custom-app-12
  /sdk/apps/webhooks/{SDK_webhookName}/{SDK_webhookSection}:
    get:
      tags:
        - SDK Apps > Webhooks
      summary: Get Webhook Section
      security:
        - token:
            - sdk-apps:read
      description: |
        Available sections are: api, parameters, attach, detach, scope<br />
      parameters:
        - name: SDK_webhookName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_webhookSection
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: api
          in: query
          schema:
            type: string
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  output:
                    type: string
              examples:
                get-webhook-section:
                  summary: Get Webhook Section
                  value:
                    output: '{{body}}'
    put:
      tags:
        - SDK Apps > Webhooks
      summary: Set Webhook Section
      security:
        - token:
            - sdk-apps:write
      description: |
        Available sections are: api, parameters, attach, detach, scope<br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                output:
                  type: string
                test:
                  type: boolean
            example:
              output: '{{body}}'
              test: true
      parameters:
        - name: SDK_webhookName
          in: path
          schema:
            type: string
          required: true
        - name: SDK_webhookSection
          in: path
          schema:
            type: string
          required: true
        - name: all
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: opensource
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: imt-admin
          in: header
          schema:
            type: integer
          example: '1'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/jsonc
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  change:
                    type: object
              examples:
                set-webhook-section:
                  summary: Set Webhook Section
                  value:
                    change: {}
  /teams:
    get:
      x-published: true
      tags:
        - Teams
      summary: List teams
      description: >-
        Gets the list of teams in the organization with specified
        `organizationId`.
      security:
        - token:
            - teams:read
      parameters:
        - name: organizationId
          in: query
          schema:
            type: integer
          required: true
          example: 1
          description: The ID of the organization.
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        organizationId:
                          type: integer
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                teams:
                  - id: 5
                    name: My Team
                    organizationId: 5
                pg:
                  sortBy: name
                  sortDir: asc
                  limit: 10000
                  offset: 0
    post:
      x-published: true
      tags:
        - Teams
      summary: Create a team
      description: >-
        Create a new team in the organization with the specified
        `organizationId`.
      security:
        - token:
            - teams:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                organizationId:
                  type: integer
                  description: The ID of the organization.
              required:
                - name
                - organizationId
            example:
              name: New Team
              organizationId: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      organizationId:
                        type: integer
                  userTeamRole:
                    type: object
                    properties:
                      usersRoleId:
                        type: integer
                      userId:
                        type: integer
                      teamId:
                        type: integer
                      changeable:
                        type: boolean
                      ssoPending:
                        type: boolean
              example:
                team:
                  id: 26
                  name: New Team
                  organizationId: 1
                userTeamRole:
                  usersRoleId: 1
                  userId: 1
                  teamId: 26
                  changeable: false
  /teams/{teamId}:
    get:
      x-published: true
      tags:
        - Teams
      summary: Get team details
      description: Returns information about the team with the specified `teamId`.
      security:
        - token:
            - teams:read
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            all-cols:
              value:
                - id
                - name
                - organizationId
                - activeScenarios
                - activeApps
                - operations
                - transfer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      organizationId:
                        type: integer
              examples:
                default-cols:
                  summary: Get detail of a team
                  description: Gets detail information about the specified team.
                  value:
                    team:
                      id: 1
                      name: Team 1
                      organizationId: 1
                      scenarioDrafts: false
                all-cols:
                  summary: Get all team data
                  description: Gets all available information about the team.
                  value:
                    team:
                      id: 1
                      name: Team 1
                      organizationId: 1
                      activeScenarios: 1
                      activeApps: 0
                      operations: '2015'
                      transfer: '27914902'
    delete:
      x-published: true
      tags:
        - Teams
      summary: Delete a team
      description: >-
        Deletes the team with the specified `teamId`. Make also deletes all data
        associated with the team, for example scenarios, webhooks or custom team
        variables.
      security:
        - token:
            - teams:write
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
        - name: confirmed
          in: query
          schema:
            type: boolean
          example: true
          description: >-
            Set this parameter to `true` to confirm the team deletion.
            Otherwise, the API call returns an error and the team is not
            deleted.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: integer
              example:
                team: 22
  /teams/{teamId}/user-team-roles:
    get:
      x-published: true
      tags:
        - Teams > User team roles
      summary: List user roles in the team
      description: >-
        Gets list of all users and their roles in the team with the specified
        `teamId`. Get all user role IDs with the API call `GET /users/roles`.
      security:
        - token:
            - teams:read
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userTeamRoles:
                    type: array
                    items:
                      type: object
                      properties:
                        usersRoleId:
                          type: integer
                        userId:
                          type: integer
                        teamId:
                          type: integer
                        changeable:
                          type: boolean
                        ssoPending:
                          type: boolean
              example:
                userTeamRoles:
                  - usersRoleId: 1
                    userId: 1
                    teamId: 1
                    changeable: false
                  - usersRoleId: 3
                    userId: 13
                    teamId: 1
                    changeable: true
  /teams/{teamId}/user-team-roles/{userId}:
    get:
      x-published: true
      tags:
        - Teams > User team roles
      summary: Get user team role details
      description: >-
        Retrieves information about user role in a team with the specified
        `userId` and `teamId`. Get all user role IDs with the API call `GET
        users/roles`.
      security:
        - token:
            - teams:read
      parameters:
        - name: teamId
          in: path
          schema:
            type: string
          required: true
          description: The ID of the team.
          example: 22
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: The ID of the user.
          example: 111
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userTeamRole:
                    type: object
                    properties:
                      usersRoleId:
                        type: integer
                      userId:
                        type: integer
                      teamId:
                        type: integer
                      changeable:
                        type: boolean
                      ssoPending:
                        type: boolean
              example:
                userTeamRole:
                  usersRoleId: 3
                  userId: 12
                  teamId: 1
                  changeable: true
  /teams/{teamId}/variables:
    get:
      x-published: true
      tags:
        - Teams
      summary: List team variables
      description: >-
        Retrieves the collection of team variables. The response contains all
        team variables if your account has the custom variables feature
        available. Otherwise, the response contains only Make system variables.


        Check availability of the custom variables feature with the API call
        `GET /organizations/{organizationId}` for the organization to which the
        team belongs. If the response contains `"customVariables": true` pair in
        the `license` object then you have access to the custom variables
        feature.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for Make
        pricing plans overview.
      security:
        - token:
            - team-variables:read
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  teamVariables:
                    type: object
                    properties:
                      typeId:
                        type: integer
                      name:
                        type: string
                      value:
                        oneOf:
                          - type: string
                          - type: boolean
                          - type: number
                          - type: object
                            additionalProperties: {}
                          - type: array
                            items: {}
                      isSystem:
                        type: boolean
              example:
                teamVariables:
                  name: userId
                  typeId: 1
                  value: 123
                  isSystem: false
    post:
      x-published: true
      tags:
        - Teams
      summary: Create team variable
      description: >-
        Creates new team variable. You can check the availability of the custom
        variables feature with the API call `GET
        /organizations/{organizationId}` for the organization to which the team
        belongs. If the API call response contains `"customVariables": true`
        pair in the `license` object then you have access to the custom
        variables feature.


        A successful response contains all information about the new variable.
        If you don't have the custom variables feature available then the API
        call returns the error 404.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for Make
        pricing plans overview.
      security:
        - token:
            - team-variables:write
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                typeId:
                  type: number
                  description: >-
                    Number representing the type of the custom variable. The
                    mapping of `typeId` and variable types is as follows:


                    - 1: `number`,
                     - 2: `string`,
                     - 3: `boolean`,
                     - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`.
                value:
                  oneOf:
                    - type: string
                    - type: boolean
                    - type: number
                    - type: object
                      additionalProperties: {}
                    - type: array
                      items: {}
                  description: Value assigned to the custom variable.
                name:
                  type: string
                  description: >-
                    The name of the variable. You can use letters, digits, `$`
                    and `_` characters in the custom variable name.
            example:
              typeId: 1
              value: 123
              name: userId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  teamVariable:
                    type: object
                    properties:
                      typeId:
                        type: integer
                      name:
                        type: string
                      value:
                        oneOf:
                          - type: string
                          - type: boolean
                          - type: number
                          - type: object
                            additionalProperties: {}
                          - type: array
                            items: {}
                      isSystem:
                        type: boolean
              example:
                teamVariable:
                  name: userId
                  typeId: 1
                  value: 123
                  isSystem: false
  /teams/{teamId}/variables/{variableName}:
    patch:
      x-published: true
      tags:
        - Teams
      summary: Update team variable
      description: >-
        Updates custom team variable with the specified variable `name`. Only
        parameters specified in the request body are updated.


        You can check the availability of the custom variables feature with the
        API call `GET /organizations/{organizationId}` for the organization to
        which the team belongs. If the response contains `"customVariables":
        true` pair in the `license` object then you have access to the custom
        variables feature.


        A successful response contains all information about the updated
        variable. If you don't have the custom variables feature available then
        the API call returns the error 404.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for the
        Make pricing plans overview.


        Update the variable `typeId` accordingly when you are updating the
        variable `value`. Make checks whether the variable type and value match
        in the request body. There is no check for incorrect variable type when
        you update only variable value and _vice versa_.
      security:
        - token:
            - team-variables:write
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
        - name: variableName
          in: path
          schema:
            type: string
          required: true
          description: The name of the custom variable.
          example: userID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                typeId:
                  type: number
                  description: >-
                    Number representing the type of the custom variable. The
                    mapping of `typeId` and variable types is as follows:


                    - 1: `number`,
                     - 2: `string`,
                     - 3: `boolean`,
                     - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`.
                value:
                  oneOf:
                    - type: string
                    - type: boolean
                    - type: number
                    - type: object
                      additionalProperties: {}
                    - type: array
                      items: {}
                  description: Value assigned to the custom variable.
            example:
              value: 221
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  teamVariable:
                    type: object
                    properties:
                      typeId:
                        type: integer
                      name:
                        type: string
                      value:
                        oneOf:
                          - type: string
                          - type: boolean
                          - type: number
                          - type: object
                            additionalProperties: {}
                          - type: array
                            items: {}
                      isSystem:
                        type: boolean
              example:
                teamVariable:
                  name: userId
                  typeId: 1
                  value: 251
    delete:
      x-published: true
      tags:
        - Teams
      summary: Delete team variable
      description: >-
        Deletes team variable.


        If you don't have the custom variables feature available then the API
        call returns error 404. Check the availability of the custom variables
        feature with the API call `GET /organizations/{organizationId}` for the
        organization in which the team belongs. If the response contains
        `"customVariables": true` pair in the `license` object then you have
        access to the custom variables feature.


        Refer to the [Make pricing
        page](https://www.make.com/en/help/general/pricing-parameters) for Make
        pricing plans overview.
      security:
        - token:
            - team-variables:write
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
        - name: variableName
          in: path
          schema:
            type: string
          required: true
          description: The name of the custom variable.
          example: userID
        - name: confirmed
          in: query
          schema:
            type: boolean
          description: >-
            Set to `true` to confirm deleting the custom variable. Otherwise the
            API call fails with the error IM004 (406).
          example: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /teams/{teamId}/variables/{variableName}/history:
    get:
      x-published: true
      tags:
        - Teams
      summary: History of custom variable updates
      description: >-
        Gets the history of updates of the specified custom variable. The
        response contains the ID value of the variable history entry and a
        `diffObject`. The `diffObject` contains:


        - the original value,
         - the new value,
         - the timestamp of the update,
         - the author of the update.

        If the variable doesn't have any updates, the `diffObject` contains the
        current value of the variable instead of the original and new values.


        The update history entries are sorted from newest to latest.
      security:
        - token:
            - team-variables:read
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
        - name: variableName
          in: path
          schema:
            type: string
          required: true
          description: The name of the custom variable.
          example: userID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  teamVariableHistory:
                    type: array
                    items:
                      oneOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                            diffObject:
                              type: object
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
                                typeId:
                                  type: integer
                            changed:
                              type: string
                              format: date
                            action:
                              type: string
                              description: >-
                                organization_variable_created or
                                organization_variable_edited or
                                team_variable_created or team_variable_edited
                            author:
                              type: string
                        - type: object
                          properties:
                            id:
                              type: integer
                            diffObject:
                              type: object
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
                                typeId:
                                  type: integer
                            changed:
                              type: string
                              format: date
                            action:
                              type: string
                            author:
                              type: string
              example:
                teamVariableHistory:
                  - id: 1
                    diffObject:
                      name: userId
                      value: 11
                      typeId: 1
                    changed: '2022-08-02T09:37:05.364Z'
                    action: team_variable_created
                    author: Jon Doe
                  - id: 2
                    diffObject:
                      old:
                        value: 11
                        typeId: 1
                      new:
                        value: 23
                        typeId: 1
                    changed: '2022-08-02T09:37:05.364Z'
                    action: team_variable_edited
                    author: Jon Doe
  /teams/{teamId}/check-email-is-member:
    post:
      tags:
        - Teams
      summary: Check if email is part of team
      x-private: true
      description: >
        Checks if every given e-mail is an active member of the team. Evaluates
        to false if any of the input e-mails are not part of the team.  This
        endpoint uses JWT authorization.

        Please note that JWT authorization is not available in our open API, use
        tools like Postman for testing.
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
        - name: Authorization
          in: header
          schema:
            type: string
          required: true
          description: JWT token used for internal Authorization.
          example: >-
            Internal
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhYWEiOjF9.PWCmjzr_lg9npxv5eUph5B937LXVspIKlRdByWRWKxs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recipients:
                  type: array
                  items:
                    type: string
              required:
                - recipients
            example:
              recipients:
                - test1@email.com
                - test2@email.com
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  isMember:
                    type: boolean
              example:
                isMember: true
  /teams/{teamId}/usage:
    get:
      x-published: true
      tags:
        - Teams
      summary: Get team usage
      description: >
        Retrieves a list of daily operations and data transfer usage for all
        scenarios within a specified team over the past 30 days.


        By default, the endpoint uses the timezone of the user making the API
        call to define the start and end of each day in the 30-day timeframe.


        To use the organization's timezone instead, set the
        `organizationTimezone` parameter to `true`. This ensures that the daily
        aggregates align with the organization's operational hours. This is
        especially useful for scenarios where aggregated data needs to align
        with the organization's operational hours. 


        For instance, a remote data analyst in India working for a Czech company
        can set `organizationTimezone=true` to ensure the usage data reflects
        the company's timezone, providing more relevant and accurate insights
        for organizational reporting and analysis.


        For more information on timezones in Make, please refer to our [Help
        Center article](https://www.make.com/en/help/general/manage-time-zones).
      security:
        - token:
            - teams:read
      parameters:
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
        - name: organizationTimezone
          in: query
          schema:
            type: boolean
          required: false
          description: >-
            When set to `true`, the endpoint will calculate and return usage
            data based on the organization's timezone instead of the user's
            local timezone.
          example: true
      responses:
        '200':
          description: Successfully retrieved usage data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        operations:
                          type: integer
                        dataTransfer:
                          type: integer
              example:
                data:
                  - date: '2024-05-30'
                    operations: 9
                    dataTransfer: 135
                  - date: '2024-05-31'
                    operations: 15
                    dataTransfer: 157
  /templates:
    get:
      x-published: true
      tags:
        - Templates
      summary: List templates
      description: >-
        Retrieves a collection of all templates for a team with a given ID.
        Returned templates are sorted by ID in ascending order.
      security:
        - token:
            - templates:read
      parameters:
        - name: teamId
          in: query
          schema:
            type: integer
          description: The unique ID of the team whose templates will be retrieved.
          example: 1
        - name: public
          in: query
          schema:
            type: boolean
          description: >-
            Indicates if the template is public which means that it was
            published and approved, and can be accessed by anyone.
          example: true
        - name: usedApps[]
          in: query
          schema:
            type: array
            items:
              type: string
          example:
            - http
          description: >-
            The array with the text IDs of the apps used in the templates. This
            parameter allows you to get only the templates containing specific
            apps.
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - description
                - usedApps
                - public
                - published
                - approved
                - approvedId
                - requestedApproval
                - publishedId
                - publicUrl
                - approvedName
                - publishedName
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only the names and IDs of the templates.
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  templates:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        teamId:
                          type: integer
                        teamName:
                          type: string
                        organizationId:
                          type: string
                        description:
                          type: string
                        usedApps:
                          type: array
                          items:
                            type: string
                        public:
                          type: boolean
                        published:
                          type: string
                          format: date-time
                        approved:
                          type: string
                          format: date-time
                        approvedId:
                          type: integer
                        requestedApproval:
                          type: boolean
                        publishedId:
                          type: integer
                        publicUrl:
                          type: string
                        approvedName:
                          type: string
                        publishedName:
                          type: string
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                templates:
                  - id: 61
                    name: Private
                    teamId: 1
                    description: Template description
                    usedApps:
                      - http
                    public: false
                    published: null
                    approved: null
                    approvedId: null
                    requestedApproval: false
                    publishedId: null
                    publicUrl: null
                    approvedName: null
                    publishedName: null
                  - id: 65
                    name: Published
                    teamId: 1
                    description: null
                    usedApps:
                      - http
                    public: true
                    published: '2020-12-01T14:14:53.807Z'
                    approved: null
                    approvedId: null
                    requestedApproval: false
                    publishedId: 39
                    publicUrl: 39-published
                    approvedName: null
                    publishedName: Published
                  - id: 56
                    name: Published, approved
                    teamId: 1
                    description: null
                    usedApps:
                      - http
                    public: true
                    published: '2020-11-10T14:08:29.084Z'
                    approved: '2020-12-03T09:44:55.685Z'
                    approvedId: 35
                    requestedApproval: false
                    publishedId: null
                    publicUrl: 32-published-approved
                    approvedName: Published, approved
                    publishedName: null
                  - id: 64
                    name: Published, approved, waiting for approval
                    teamId: 1
                    description: null
                    usedApps:
                      - http
                    public: true
                    published: '2020-12-01T15:18:31.790Z'
                    approved: '2020-12-02T09:44:42.045Z'
                    approvedId: 38
                    requestedApproval: true
                    publishedId: 40
                    publicUrl: 37-published-approved-waiting-for-approval
                    approvedName: Published, approved, waiting for approval
                    publishedName: Published, approved, waiting for approval
                  - id: 62
                    name: Published, waiting for approval
                    teamId: 1
                    description: null
                    usedApps:
                      - http
                    public: true
                    published: '2020-11-23T12:22:36.495Z'
                    approved: null
                    approvedId: null
                    requestedApproval: true
                    publishedId: 36
                    publicUrl: 36-published-waiting-for-approval
                    approvedName: null
                    publishedName: Published, waiting for approval
                pg:
                  sortBy: name
                  limit: 10
                  sortDir: asc
                  offset: 0
    post:
      x-published: true
      tags:
        - Templates
      summary: Create template
      description: >-
        Creates a new template with data passed in the request body. In the
        response, it returns all details of the created template.
      security:
        - token:
            - templates:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                teamId:
                  type: integer
                  description: >-
                    The unique numeric ID of the team in which the template will
                    be created.
                language:
                  type: string
                  description: >-
                    The language of the template determining in which language
                    template details such as module names will be displayed.
                    This property also impacts the visibility of the created
                    template and cannot be changed later.
                blueprint:
                  type: object
                  properties:
                    flow:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          mapper:
                            type: object
                            properties:
                              ca:
                                type: string
                              qs:
                                type: array
                                items: {}
                              url:
                                type: string
                                format: uri
                              gzip:
                                type: boolean
                              method:
                                type: string
                              headers:
                                type: array
                                items: {}
                              timeout:
                                type: string
                              authPass:
                                type: string
                              authUser:
                                type: string
                              bodyType:
                                type: string
                              shareCookies:
                                type: boolean
                              parseResponse:
                                type: boolean
                              followRedirect:
                                type: boolean
                              useQuerystring:
                                type: boolean
                              rejectUnauthorized:
                                type: boolean
                          module:
                            type: string
                            format: uri
                          onerror:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                mapper:
                                  type: object
                                  properties:
                                    count:
                                      type: string
                                      format: utc-millisec
                                    retry:
                                      type: boolean
                                    interval:
                                      type: string
                                      format: utc-millisec
                                module:
                                  type: string
                                  format: uri
                                version:
                                  type: integer
                                metadata:
                                  type: object
                                  properties:
                                    expect:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                                          type:
                                            type: string
                                          label:
                                            type: string
                                          required:
                                            type: boolean
                                    restore:
                                      type: object
                                      properties:
                                        retry:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                    designer:
                                      type: object
                                      properties:
                                        x:
                                          type: integer
                                        'y':
                                          type: integer
                                parameters:
                                  type: object
                          version:
                            type: integer
                          metadata:
                            type: object
                            properties:
                              expect:
                                type: array
                                items:
                                  type: object
                              restore:
                                type: object
                                properties:
                                  qs:
                                    type: object
                                    properties:
                                      mode:
                                        type: string
                                      items:
                                        type: array
                                        items: {}
                                  method:
                                    type: object
                                    properties:
                                      mode:
                                        type: string
                                      label:
                                        type: string
                                  headers:
                                    type: object
                                    properties:
                                      mode:
                                        type: string
                                      items:
                                        type: array
                                        items: {}
                                  bodyType:
                                    type: object
                                    properties:
                                      label:
                                        type: string
                              designer:
                                type: object
                                properties:
                                  x:
                                    type: integer
                                  'y':
                                    type: integer
                              parameters:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    type:
                                      type: string
                                    label:
                                      type: string
                                    required:
                                      type: boolean
                          parameters:
                            type: object
                            properties:
                              handleErrors:
                                type: boolean
                    name:
                      type: string
                    metadata:
                      type: object
                      properties:
                        version:
                          type: integer
                        scenario:
                          type: object
                          properties:
                            maxErrors:
                              type: integer
                            autoCommit:
                              type: boolean
                            roundtrips:
                              type: integer
                  description: >-
                    The full blueprint of the scenario or template. It contains
                    information about the general setup and all included apps
                    and modules, and their settings.
                scheduling:
                  description: The scheduling details of the template.
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - immediately
                        - indefinitely
                        - once
                        - daily
                        - weekly
                        - monthly
                        - yearly
                    interval:
                      type: integer
                      minimum: 0
                    date:
                      type: string
                      format: date-time
                    between:
                      type: array
                      items:
                        type: string
                        format: date-time
                    time:
                      type: string
                      pattern: ^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\.[0-9]+)?$
                    days:
                      type: array
                      items:
                        type: integer
                        minimum: 0
                        maximum: 31
                    months:
                      type: array
                      items:
                        type: integer
                        minimum: 1
                        maximum: 12
                    restrict:
                      type: array
                      items:
                        type: object
                        properties:
                          time:
                            type: array
                            items:
                              type: string
                              nullable: true
                              pattern: >-
                                ^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\.[0-9]+)?$
                          days:
                            type: array
                            items:
                              type: integer
                              minimum: 0
                              maximum: 31
                          months:
                            type: array
                            items:
                              type: integer
                              minimum: 1
                              maximum: 12
                controller:
                  description: >-
                    The controller of the template. This property refers to
                    wizards that can be added to each module in the template
                    from the Make interface. The wizards contain short
                    instructions for other users explaining how to use the
                    template step by step.
                  type: object
                  properties:
                    name:
                      type: string
                      maxLength: 120
                      minLength: 1
                    description:
                      type: string
                      maxLength: 1500
                      minLength: 0
                    idSequence:
                      type: integer
                    modules:
                      type: object
            example:
              teamId: 1
              language: en
              blueprint: >-
                {"flow":[{"id":1,"module":"http:ActionGetFile","version":3,"parameters":{"handleErrors":false},"mapper":{"url":"https://google.com","method":"get","shareCookies":false},"metadata":{"designer":{"x":0,"y":0},"parameters":[{"name":"handleErrors","label":"Evaluate
                all states as errors (except for 2xx and 3xx
                )","type":"boolean","required":true}],"expect":[{"name":"url","label":"URL","type":"url","required":true},{"name":"method","label":"Method","type":"hidden"},{"name":"shareCookies","label":"Share
                cookies with other HTTP
                modules","type":"boolean","required":true}]}}],"metadata":{"version":1,"scenario":{"roundtrips":1,"maxErrors":3,"autoCommit":true,"autoCommitTriggerLast":true,"sequential":false,"confidential":false,"dataloss":false,"dlq":false,
                "freshVariables": false},"designer":{"orphans":[]}}}
              scheduling: '{"type":"indefinitely","interval":900}'
              controller: '{"modules":{},"name":"New template","idSequence":2}'
      parameters:
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - description
                - usedApps
                - public
                - published
                - approved
                - approvedId
                - requestedApproval
                - publishedId
                - publicUrl
                - approvedName
                - publishedName
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only names and IDs of the newly created template.
          example:
            - id
            - name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  template:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      teamName:
                        type: string
                      organizationId:
                        type: string
                      description:
                        type: string
                      usedApps:
                        type: array
                        items:
                          type: string
                      public:
                        type: boolean
                      published:
                        type: string
                        format: date-time
                      approved:
                        type: string
                        format: date-time
                      approvedId:
                        type: integer
                      requestedApproval:
                        type: boolean
                      publishedId:
                        type: integer
                      publicUrl:
                        type: string
                      approvedName:
                        type: string
                      publishedName:
                        type: string
              example:
                template:
                  id: 67
                  name: New template
                  teamId: 1
                  description: null
                  usedApps:
                    - http
                  public: false
                  published: null
                  approved: null
                  approvedId: null
                  requestedApproval: false
                  publishedId: null
                  publicUrl: null
                  approvedName: null
                  publishedName: null
  /templates/{templateId}:
    get:
      x-published: true
      tags:
        - Templates
      summary: Get template details
      description: Retrieves details of a template with a given ID.
      security:
        - token:
            - templates:read
      parameters:
        - name: templateId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the private template. It can be retrieved from the
            [List templates](/templates-get) endpoint.
          example: 164
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - description
                - usedApps
                - public
                - published
                - approved
                - approvedId
                - requestedApproval
                - publishedId
                - publicUrl
                - approvedName
                - publishedName
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only the ID and name of the template.
          examples:
            id-name:
              summary: Return ID and name
              value:
                - id
                - name
            all-columns:
              summary: Return all details
              value:
                - id
                - name
                - teamId
                - description
                - usedApps
                - public
                - published
                - approved
                - approvedId
                - requestedApproval
                - publishedId
                - publicUrl
                - approvedName
                - publishedName
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  template:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      teamName:
                        type: string
                      organizationId:
                        type: string
                      description:
                        type: string
                      usedApps:
                        type: array
                        items:
                          type: string
                      public:
                        type: boolean
                      published:
                        type: string
                        format: date-time
                      approved:
                        type: string
                        format: date-time
                      approvedId:
                        type: integer
                      requestedApproval:
                        type: boolean
                      publishedId:
                        type: integer
                      publicUrl:
                        type: string
                      approvedName:
                        type: string
                      publishedName:
                        type: string
              examples:
                id-name:
                  summary: Return ID and name
                  description: Returns ID and name of the template
                  value:
                    template:
                      id: 164
                      name: Published, approved, waiting for approval
                all-columns:
                  summary: Return all details
                  description: Returns all details of the template
                  value:
                    template:
                      id: 164
                      name: Published, approved, waiting for approval
                      teamId: 1
                      description: null
                      usedApps:
                        - http
                      public: true
                      published: '2020-12-01T15:18:31.790Z'
                      approved: '2020-12-02T09:44:42.045Z'
                      approvedId: 38
                      requestedApproval: true
                      publishedId: 40
                      publicUrl: 37-published-approved-waiting-for-approval
                      approvedName: Published, approved, waiting for approval
                      publishedName: Published, approved, waiting for approval
    patch:
      x-published: true
      tags:
        - Templates
      summary: Update template
      description: >-
        Updates a template with a given ID by passing new values in the request
        body. Any property that is not provided will be left unchanged. In the
        response, it returns all details of the updated template including
        properties that were not changed.
      security:
        - token:
            - templates:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The new name of the template. The name does not need to be
                    unique.
                blueprint:
                  type: object
                  properties:
                    flow:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          mapper:
                            type: object
                            properties:
                              ca:
                                type: string
                              qs:
                                type: array
                                items: {}
                              url:
                                type: string
                                format: uri
                              gzip:
                                type: boolean
                              method:
                                type: string
                              headers:
                                type: array
                                items: {}
                              timeout:
                                type: string
                              authPass:
                                type: string
                              authUser:
                                type: string
                              bodyType:
                                type: string
                              shareCookies:
                                type: boolean
                              parseResponse:
                                type: boolean
                              followRedirect:
                                type: boolean
                              useQuerystring:
                                type: boolean
                              rejectUnauthorized:
                                type: boolean
                          module:
                            type: string
                            format: uri
                          onerror:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                mapper:
                                  type: object
                                  properties:
                                    count:
                                      type: string
                                      format: utc-millisec
                                    retry:
                                      type: boolean
                                    interval:
                                      type: string
                                      format: utc-millisec
                                module:
                                  type: string
                                  format: uri
                                version:
                                  type: integer
                                metadata:
                                  type: object
                                  properties:
                                    expect:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                                          type:
                                            type: string
                                          label:
                                            type: string
                                          required:
                                            type: boolean
                                    restore:
                                      type: object
                                      properties:
                                        retry:
                                          type: object
                                          properties:
                                            mode:
                                              type: string
                                    designer:
                                      type: object
                                      properties:
                                        x:
                                          type: integer
                                        'y':
                                          type: integer
                                parameters:
                                  type: object
                          version:
                            type: integer
                          metadata:
                            type: object
                            properties:
                              expect:
                                type: array
                                items:
                                  type: object
                              restore:
                                type: object
                                properties:
                                  qs:
                                    type: object
                                    properties:
                                      mode:
                                        type: string
                                      items:
                                        type: array
                                        items: {}
                                  method:
                                    type: object
                                    properties:
                                      mode:
                                        type: string
                                      label:
                                        type: string
                                  headers:
                                    type: object
                                    properties:
                                      mode:
                                        type: string
                                      items:
                                        type: array
                                        items: {}
                                  bodyType:
                                    type: object
                                    properties:
                                      label:
                                        type: string
                              designer:
                                type: object
                                properties:
                                  x:
                                    type: integer
                                  'y':
                                    type: integer
                              parameters:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    type:
                                      type: string
                                    label:
                                      type: string
                                    required:
                                      type: boolean
                          parameters:
                            type: object
                            properties:
                              handleErrors:
                                type: boolean
                    name:
                      type: string
                    metadata:
                      type: object
                      properties:
                        version:
                          type: integer
                        scenario:
                          type: object
                          properties:
                            maxErrors:
                              type: integer
                            autoCommit:
                              type: boolean
                            roundtrips:
                              type: integer
                  description: >-
                    The full blueprint of the template. It contains information
                    about the general setup and all included apps and modules,
                    and their settings.
                scheduling:
                  description: The scheduling details of the template.
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - immediately
                        - indefinitely
                        - once
                        - daily
                        - weekly
                        - monthly
                        - yearly
                    interval:
                      type: integer
                      minimum: 0
                    date:
                      type: string
                      format: date-time
                    between:
                      type: array
                      items:
                        type: string
                        format: date-time
                    time:
                      type: string
                      pattern: ^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\.[0-9]+)?$
                    days:
                      type: array
                      items:
                        type: integer
                        minimum: 0
                        maximum: 31
                    months:
                      type: array
                      items:
                        type: integer
                        minimum: 1
                        maximum: 12
                    restrict:
                      type: array
                      items:
                        type: object
                        properties:
                          time:
                            type: array
                            items:
                              type: string
                              nullable: true
                              pattern: >-
                                ^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\.[0-9]+)?$
                          days:
                            type: array
                            items:
                              type: integer
                              minimum: 0
                              maximum: 31
                          months:
                            type: array
                            items:
                              type: integer
                              minimum: 1
                              maximum: 12
                controller:
                  description: >-
                    The controller of the template. This property refers to
                    wizards that can be added to each module in the template
                    from the Make interface. The wizards contain short
                    instructions for other users explaining how to use the
                    template step by step.
                  type: object
                  properties:
                    name:
                      type: string
                      maxLength: 120
                      minLength: 1
                    description:
                      type: string
                      maxLength: 1500
                      minLength: 0
                    idSequence:
                      type: integer
                    modules:
                      type: object
            example:
              name: Renamed template
              blueprint: >-
                {"flow":[{"id":1,"module":"http:ActionGetFile","version":3,"parameters":{"handleErrors":false},"mapper":{"url":"https://google.com","method":"get","shareCookies":false},"metadata":{"designer":{"x":0,"y":0},"parameters":[{"name":"handleErrors","label":"Evaluate
                all states as errors (except for 2xx and 3xx
                )","type":"boolean","required":true}],"expect":[{"name":"url","label":"URL","type":"url","required":true},{"name":"method","label":"Method","type":"hidden"},{"name":"shareCookies","label":"Share
                cookies with other HTTP
                modules","type":"boolean","required":true}]}}],"metadata":{"version":1,"scenario":{"roundtrips":1,"maxErrors":3,"autoCommit":true,"autoCommitTriggerLast":true,"sequential":false,"confidential":false,"dataloss":false,"dlq":false,"freshVariables":
                false},"designer":{"orphans":[]}}}
              scheduling: '{"type":"indefinitely","interval":900}'
              controller: '{"modules":{},"name":"New template","idSequence":2}'
      parameters:
        - name: templateId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the private template. It can be retrieved from the
            [List templates](/templates-get) endpoint.
          example: 164
        - name: templatePublicId
          in: query
          schema:
            type: integer
          description: >-
            The unique ID of the public version of the approved template. It can
            be retrieved from the [List templates](/templates-get) endpoint as
            one of the following IDs: `publishedId` for all published templates
            that are waiting for approval or not, or `approvedId` for approved
            templates.
          example: 18
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - description
                - usedApps
                - public
                - published
                - approved
                - approvedId
                - requestedApproval
                - publishedId
                - publicUrl
                - approvedName
                - publishedName
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only the description of the template.
          example:
            - description
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  template:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        teamId:
                          type: integer
                        teamName:
                          type: string
                        organizationId:
                          type: string
                        description:
                          type: string
                        usedApps:
                          type: array
                          items:
                            type: string
                        public:
                          type: boolean
                        published:
                          type: string
                          format: date-time
                        approved:
                          type: string
                          format: date-time
                        approvedId:
                          type: integer
                        requestedApproval:
                          type: boolean
                        publishedId:
                          type: integer
                        publicUrl:
                          type: string
                        approvedName:
                          type: string
                        publishedName:
                          type: string
              example:
                template:
                  - id: 164
                    name: Renamed template
                    teamId: 1
                    description: null
                    usedApps:
                      - http
                    public: false
                    published: null
                    approved: null
                    approvedId: null
                    requestedApproval: false
                    publishedId: null
                    publicUrl: null
                    approvedName: null
                    publishedName: null
    delete:
      x-published: true
      tags:
        - Templates
      summary: Delete template
      description: Deletes a template with a given ID and returns the ID in the response.
      security:
        - token:
            - templates:write
      parameters:
        - name: templateId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the private template. It can be retrieved from the
            [List templates](/templates-get) endpoint.
          example: 164
        - name: confirmed
          in: query
          schema:
            type: boolean
          description: >-
            Confirms the deletion of the private or published template. If the
            parameter is missing or it is set to `false` an error code is
            returned and the resource is not deleted. The public (approved)
            templates can only be deleted by administrators.
          example: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  template:
                    type: integer
              example:
                template: 164
  /templates/{templateId}/blueprint:
    get:
      x-published: true
      tags:
        - Templates
      summary: Get template blueprint
      description: Retrieves a blueprint of a template with a given ID.
      security:
        - token:
            - templates:read
      parameters:
        - name: templateId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the private template. It can be retrieved from the
            [List templates](/templates-get) endpoint.
          example: 164
        - name: forUse
          in: query
          schema:
            type: boolean
          description: >-
            If this parameter is set to `true`, it means the blueprint should be
            used for creating a scenario from the template.
          example: true
        - name: templatePublicId
          in: query
          schema:
            type: integer
          description: >-
            The unique ID of the public version of the approved template. It can
            be retrieved from the [List templates](/templates-get) endpoint as
            one of the following IDs: `publishedId` for all published templates
            that are waiting for approval or not, or `approvedId` for approved
            templates.
          example: 18
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  blueprint:
                    type: object
                    properties:
                      flow:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            mapper:
                              type: object
                              properties:
                                ca:
                                  type: string
                                qs:
                                  type: array
                                  items: {}
                                url:
                                  type: string
                                  format: uri
                                gzip:
                                  type: boolean
                                method:
                                  type: string
                                headers:
                                  type: array
                                  items: {}
                                timeout:
                                  type: string
                                authPass:
                                  type: string
                                authUser:
                                  type: string
                                bodyType:
                                  type: string
                                shareCookies:
                                  type: boolean
                                parseResponse:
                                  type: boolean
                                followRedirect:
                                  type: boolean
                                useQuerystring:
                                  type: boolean
                                rejectUnauthorized:
                                  type: boolean
                            module:
                              type: string
                              format: uri
                            onerror:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  mapper:
                                    type: object
                                    properties:
                                      count:
                                        type: string
                                        format: utc-millisec
                                      retry:
                                        type: boolean
                                      interval:
                                        type: string
                                        format: utc-millisec
                                  module:
                                    type: string
                                    format: uri
                                  version:
                                    type: integer
                                  metadata:
                                    type: object
                                    properties:
                                      expect:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                            type:
                                              type: string
                                            label:
                                              type: string
                                            required:
                                              type: boolean
                                      restore:
                                        type: object
                                        properties:
                                          retry:
                                            type: object
                                            properties:
                                              mode:
                                                type: string
                                      designer:
                                        type: object
                                        properties:
                                          x:
                                            type: integer
                                          'y':
                                            type: integer
                                  parameters:
                                    type: object
                            version:
                              type: integer
                            metadata:
                              type: object
                              properties:
                                expect:
                                  type: array
                                  items:
                                    type: object
                                restore:
                                  type: object
                                  properties:
                                    qs:
                                      type: object
                                      properties:
                                        mode:
                                          type: string
                                        items:
                                          type: array
                                          items: {}
                                    method:
                                      type: object
                                      properties:
                                        mode:
                                          type: string
                                        label:
                                          type: string
                                    headers:
                                      type: object
                                      properties:
                                        mode:
                                          type: string
                                        items:
                                          type: array
                                          items: {}
                                    bodyType:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                designer:
                                  type: object
                                  properties:
                                    x:
                                      type: integer
                                    'y':
                                      type: integer
                                parameters:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                                      type:
                                        type: string
                                      label:
                                        type: string
                                      required:
                                        type: boolean
                            parameters:
                              type: object
                              properties:
                                handleErrors:
                                  type: boolean
                      name:
                        type: string
                      metadata:
                        type: object
                        properties:
                          version:
                            type: integer
                          scenario:
                            type: object
                            properties:
                              maxErrors:
                                type: integer
                              autoCommit:
                                type: boolean
                              roundtrips:
                                type: integer
                  controller:
                    type: object
                    properties:
                      name:
                        type: string
                      modules:
                        type: object
                      idSequence:
                        type: integer
                  scheduling:
                    type: object
                    properties:
                      type:
                        type: string
                      interval:
                        type: integer
                  language:
                    type: string
              example:
                blueprint:
                  flow:
                    - id: 1
                      mapper:
                        url: https://seznam.cz
                        method: get
                        shareCookies: false
                      module: http:ActionGetFile
                      version: 3
                      metadata:
                        expect:
                          - name: url
                            type: url
                            label: URL
                            required: true
                          - name: method
                            type: hidden
                            label: Method
                          - name: shareCookies
                            type: boolean
                            label: Share cookies with other HTTP modules
                            required: true
                        designer:
                          x: 0
                          'y': 0
                        parameters:
                          - name: handleErrors
                            type: boolean
                            label: >-
                              Evaluate all states as errors (except for 2xx and
                              3xx )
                            required: true
                      parameters:
                        handleErrors: false
                  metadata:
                    version: 1
                    designer:
                      orphans: []
                    scenario:
                      dlq: false
                      dataloss: false
                      maxErrors: 3
                      autoCommit: true
                      roundtrips: 1
                      sequential: false
                      confidential: false
                      autoCommitTriggerLast: true
                controller:
                  name: Template name
                  modules: {}
                  idSequence: 2
                scheduling:
                  type: indefinitely
                  interval: 1000
                language: en
  /templates/{templateId}/publish:
    post:
      x-published: true
      tags:
        - Templates
      summary: Publish template
      description: >-
        Publishes a private template with a given ID. In the response, it
        returns all details of the template.
      security:
        - token:
            - templates:write
      requestBody:
        content: {}
      parameters:
        - name: templateId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the private template. It can be retrieved from the
            [List templates](/templates-get) endpoint.
          example: 164
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - description
                - usedApps
                - public
                - published
                - approved
                - approvedId
                - requestedApproval
                - publishedId
                - publicUrl
                - approvedName
                - publishedName
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only the name and ID of the published template.
          examples:
            id-name:
              summary: id, name
              value:
                - id
                - name
            all-columns:
              summary: All columns
              value:
                - id
                - name
                - teamId
                - description
                - usedApps
                - public
                - published
                - approved
                - approvedId
                - requestedApproval
                - publishedId
                - publicUrl
                - approvedName
                - publishedName
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  template:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      teamName:
                        type: string
                      organizationId:
                        type: string
                      description:
                        type: string
                      usedApps:
                        type: array
                        items:
                          type: string
                      public:
                        type: boolean
                      published:
                        type: string
                        format: date-time
                      approved:
                        type: string
                        format: date-time
                      approvedId:
                        type: integer
                      requestedApproval:
                        type: boolean
                      publishedId:
                        type: integer
                      publicUrl:
                        type: string
                      approvedName:
                        type: string
                      publishedName:
                        type: string
              examples:
                all-columns:
                  summary: Return all details
                  description: Returns all details of the published template
                  value:
                    template:
                      id: 164
                      name: Renamed template
                      teamId: 1
                      description: null
                      usedApps:
                        - http
                      public: true
                      published: '2020-12-03T14:11:08.327Z'
                      approved: null
                      approvedId: null
                      requestedApproval: false
                      publishedId: 48
                      publicUrl: 48-renamed-template
                      approvedName: null
                      publishedName: Renamed template
                id-name:
                  summary: Return ID and name
                  description: Returns only ID and name of the published template
                  value:
                    template:
                      id: 164
                      name: Renamed template
  /templates/{templateId}/request-approval:
    post:
      x-published: true
      tags:
        - Templates
      summary: Request approval
      description: >-
        Requests approval of the published template with the given IDs of its
        private and published versions. In the response, it returns all details
        of the template.
      security:
        - token:
            - templates:write
      parameters:
        - name: templateId
          in: path
          schema:
            type: integer
          required: true
          description: >-
            The unique ID of the private template. It can be retrieved from the
            [List templates](/templates-get) endpoint.
          example: 164
        - name: templatePublicId
          in: query
          schema:
            type: integer
          description: >-
            The unique ID of the public version of the approved template. It can
            be retrieved from the [List templates](/templates-get) endpoint as
            one of the following IDs: `publishedId` for all published templates
            that are waiting for approval or not, or `approvedId` for approved
            templates.
          example: 18
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - teamId
                - description
                - usedApps
                - public
                - published
                - approved
                - approvedId
                - requestedApproval
                - publishedId
                - publicUrl
                - approvedName
                - publishedName
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only the ID and name of the template you requested
            approval for.
          examples:
            all-columns:
              summary: All columns
              value:
                - id
                - name
                - teamId
                - description
                - usedApps
                - public
                - published
                - approved
                - approvedId
                - requestedApproval
                - publishedId
                - publicUrl
                - approvedName
                - publishedName
            id-name:
              summary: Id, name
              value:
                - id
                - name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  template:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      teamId:
                        type: integer
                      teamName:
                        type: string
                      organizationId:
                        type: string
                      description:
                        type: string
                      usedApps:
                        type: array
                        items:
                          type: string
                      public:
                        type: boolean
                      published:
                        type: string
                        format: date-time
                      approved:
                        type: string
                        format: date-time
                      approvedId:
                        type: integer
                      requestedApproval:
                        type: boolean
                      publishedId:
                        type: integer
                      publicUrl:
                        type: string
                      approvedName:
                        type: string
                      publishedName:
                        type: string
              examples:
                all-columns:
                  summary: Return all details
                  description: Returns all details of the template requested to be approved
                  value:
                    template:
                      id: 164
                      name: Renamed template
                      teamId: 1
                      description: null
                      usedApps:
                        - http
                      public: true
                      published: '2020-12-03T14:11:08.327Z'
                      approved: null
                      approvedId: null
                      requestedApproval: true
                      publishedId: 48
                      publicUrl: 48-renamed-template
                      approvedName: null
                      publishedName: Renamed template
                id-name:
                  summary: Return ID and name
                  description: >-
                    Returns only ID and name of the template requested to be
                    approved
                  value:
                    template:
                      id: 164
                      name: Renamed template
  /templates/public:
    get:
      x-published: true
      tags:
        - Templates > Public
      summary: List public (approved) templates
      description: >-
        Retrieves a collection of all public (approved) templates that are
        available for anyone. Returned templates are sorted by usage in
        descending order.
      security:
        - token:
            - templates:read
      parameters:
        - name: includeEn
          in: query
          schema:
            type: boolean
          description: >-
            If this parameter is set to `true`, it means English templates
            should be included in the response. This is relevant only if the
            user's language is not English.
          example: true
        - name: name
          in: query
          schema:
            type: string
          description: >-
            The name of the template. This parameter allows limiting returned
            results to the template(s) with the given name.
          example: my first template
        - name: usedApps[]
          in: query
          schema:
            type: array
            items:
              type: string
          example:
            - http
          description: >-
            The array with the text IDs of the apps used in the templates. This
            parameter allows you to get only the templates containing specific
            apps.
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - description
                - url
                - usedApps
                - usage
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only the names and IDs of the public templates.
        - name: pg[sortBy]
          in: query
          schema:
            type: string
          description: The value that will be used to sort returned entities by.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  templatesPublic:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        url:
                          type: string
                        usedApps:
                          type: array
                          items:
                            type: string
                        usage:
                          type: integer
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                      showLast:
                        type: boolean
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
              example:
                templatesPublic:
                  - id: 13
                    name: Http template example
                    description: null
                    url: 13-http-template-example
                    usedApps:
                      - http
                    usage: 321
                  - id: 17
                    name: Multiple apps template example
                    description: null
                    url: 16-multiple-apps-template-example
                    usedApps:
                      - discord
                      - http
                      - tools
                      - util
                      - gmail
                    usage: 52
                pg:
                  sortBy: usage
                  limit: 100
                  sortDir: desc
                  offset: 0
  /templates/public/{templateUrl}:
    get:
      x-published: true
      tags:
        - Templates > Public
      summary: Get public (approved) template details
      description: >-
        Retrieves details of a public (approved) template with a given
        `publicUrl`.
      security:
        - token:
            - templates:read
      parameters:
        - name: templateUrl
          in: path
          schema:
            type: string
          required: true
          description: >-
            The unique URL of the public (approved) template consisting of the
            template ID and name. It can be retrieved from the [List
            templates](/templates-get) endpoint.
          example: 16-multiple-apps-template-example
        - name: templatePublicId
          in: query
          schema:
            type: integer
          description: >-
            The unique ID of the public version of the approved template. It can
            be retrieved from the [List templates](/templates-get) endpoint as
            one of the following IDs: `publishedId` for all published templates
            that are waiting for approval or not, or `approvedId` for approved
            templates.
          example: 18
        - name: cols[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - description
                - url
                - usedApps
                - usage
          description: >-
            Specifies the group of values to return. For example, you may want
            to retrieve only information about the apps used in the template.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  templatePublic:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      url:
                        type: string
                      usedApps:
                        type: array
                        items:
                          type: string
                      usage:
                        type: integer
              example:
                templatePublic:
                  id: 18
                  name: Multiple apps template example
                  description: null
                  url: 16-multiple-apps-template-example
                  usedApps:
                    - discord
                    - http
                    - tools
                    - util
                    - gmail
                  usage: 52
  /templates/public/{templateUrl}/blueprint:
    get:
      x-published: true
      tags:
        - Templates > Public
      summary: Get public (approved) template blueprint
      description: >-
        Retrieves a blueprint of a public (approved) template with a given
        `publicUrl`.
      security:
        - token:
            - templates:read
      parameters:
        - name: templateUrl
          in: path
          schema:
            type: string
          required: true
          description: >-
            The unique URL of the public (approved) template consisting of the
            template ID and name. It can be retrieved from the [List
            templates](/templates-get) endpoint.
          example: 16-multiple-apps-template-example
        - name: templatePublicId
          in: query
          schema:
            type: integer
          description: >-
            The unique ID of the public version of the approved template. It can
            be retrieved from the [List templates](/templates-get) endpoint as
            one of the following IDs: `publishedId` for all published templates
            that are waiting for approval or not, or `approvedId` for approved
            templates.
          example: 18
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  blueprint:
                    type: object
                    properties:
                      flow:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            mapper:
                              type: object
                              properties:
                                ca:
                                  type: string
                                qs:
                                  type: array
                                  items: {}
                                url:
                                  type: string
                                  format: uri
                                gzip:
                                  type: boolean
                                method:
                                  type: string
                                headers:
                                  type: array
                                  items: {}
                                timeout:
                                  type: string
                                authPass:
                                  type: string
                                authUser:
                                  type: string
                                bodyType:
                                  type: string
                                shareCookies:
                                  type: boolean
                                parseResponse:
                                  type: boolean
                                followRedirect:
                                  type: boolean
                                useQuerystring:
                                  type: boolean
                                rejectUnauthorized:
                                  type: boolean
                            module:
                              type: string
                              format: uri
                            onerror:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  mapper:
                                    type: object
                                    properties:
                                      count:
                                        type: string
                                        format: utc-millisec
                                      retry:
                                        type: boolean
                                      interval:
                                        type: string
                                        format: utc-millisec
                                  module:
                                    type: string
                                    format: uri
                                  version:
                                    type: integer
                                  metadata:
                                    type: object
                                    properties:
                                      expect:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                            type:
                                              type: string
                                            label:
                                              type: string
                                            required:
                                              type: boolean
                                      restore:
                                        type: object
                                        properties:
                                          retry:
                                            type: object
                                            properties:
                                              mode:
                                                type: string
                                      designer:
                                        type: object
                                        properties:
                                          x:
                                            type: integer
                                          'y':
                                            type: integer
                                  parameters:
                                    type: object
                            version:
                              type: integer
                            metadata:
                              type: object
                              properties:
                                expect:
                                  type: array
                                  items:
                                    type: object
                                restore:
                                  type: object
                                  properties:
                                    qs:
                                      type: object
                                      properties:
                                        mode:
                                          type: string
                                        items:
                                          type: array
                                          items: {}
                                    method:
                                      type: object
                                      properties:
                                        mode:
                                          type: string
                                        label:
                                          type: string
                                    headers:
                                      type: object
                                      properties:
                                        mode:
                                          type: string
                                        items:
                                          type: array
                                          items: {}
                                    bodyType:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                designer:
                                  type: object
                                  properties:
                                    x:
                                      type: integer
                                    'y':
                                      type: integer
                                parameters:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                                      type:
                                        type: string
                                      label:
                                        type: string
                                      required:
                                        type: boolean
                            parameters:
                              type: object
                              properties:
                                handleErrors:
                                  type: boolean
                      name:
                        type: string
                      metadata:
                        type: object
                        properties:
                          version:
                            type: integer
                          scenario:
                            type: object
                            properties:
                              maxErrors:
                                type: integer
                              autoCommit:
                                type: boolean
                              roundtrips:
                                type: integer
                  controller:
                    type: object
                    properties:
                      name:
                        type: string
                      modules:
                        type: object
                      idSequence:
                        type: integer
                  scheduling:
                    type: object
                    properties:
                      type:
                        type: string
                      interval:
                        type: integer
                  language:
                    type: string
              example:
                blueprint:
                  flow:
                    - id: 1
                      mapper:
                        url: https://google.com
                        method: get
                        shareCookies: false
                      module: http:ActionGetFile
                      version: 3
                      metadata:
                        expect:
                          - name: url
                            type: url
                            label: URL
                            required: true
                          - name: method
                            type: hidden
                            label: Method
                          - name: shareCookies
                            type: boolean
                            label: Share cookies with other HTTP modules
                            required: true
                        designer:
                          x: 0
                          'y': 0
                        parameters:
                          - name: handleErrors
                            type: boolean
                            label: >-
                              Evaluate all states as errors (except for 2xx and
                              3xx )
                            required: true
                      parameters:
                        handleErrors: false
                  metadata:
                    version: 1
                    designer:
                      orphans: []
                    scenario:
                      dlq: false
                      dataloss: false
                      maxErrors: 3
                      autoCommit: true
                      roundtrips: 1
                      sequential: false
                      confidential: false
                      autoCommitTriggerLast: true
                      freshVariables: false
                controller:
                  name: New template
                  modules: {}
                  idSequence: 2
                scheduling:
                  type: indefinitely
                  interval: 900
                language: en
  /users:
    get:
      x-published: true
      tags:
        - Users
      summary: List users
      description: >-
        Retrieves a collection of all users for a team or an organization with a
        given ID. Returned users are sorted by id in descending order.
      security:
        - token:
            - user:read
      parameters:
        - description: >-
            The unique ID of the organization whose users will be retrieved. If
            this parameter is set, the `teamId` parameter must be skipped. For
            each request either `teamId` or `organizationId` must be defined.
          name: organizationId
          in: query
          schema:
            type: integer
        - description: >-
            The unique ID of the team whose users will be retrieved. If this
            parameter is set, the `organizationId` parameter must be skipped.
            For each request either `teamId` or `organizationId` must be
            defined.
          name: teamId
          in: query
          schema:
            type: integer
          example: 1
        - description: Optional filter parameter.
          name: name
          in: query
          schema:
            type: string
        - description: Optional filter parameter.
          name: email
          in: query
          schema:
            type: string
        - description: >-
            Optional filter parameter. If this parameter is set, the `teamId`
            parameter must be set as well.
          name: teamRoleId
          in: query
          schema:
            type: integer
          examples:
            filtering:
              value: 3
        - description: >-
            Optional filter parameter. If this parameter is set, the
            `organizationId` parameter must be set as well.
          name: organizationRoleId
          in: query
          schema:
            type: integer
          examples:
            filtering:
              value: 13
        - name: cols[]
          in: query
          description: >-
            An array of columns that should be returned from the API. Can be
            used to save bandwidth when not all properties are needed.
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - email
                - language
                - timezoneId
                - localeId
                - countryId
                - features
                - avatar
                - lastLogin
        - name: pg[sortBy]
          description: >-
            The value that will be used to sort returned entities by. Users can
            be sorted by name, id and email.
          in: query
          schema:
            type: string
            enum:
              - name
              - id
              - email
        - name: pg[sortDir]
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          description: >-
            The sorting order. It accepts the ascending and descending direction
            specifiers.
        - name: pg[offset]
          in: query
          schema:
            type: integer
          description: >-
            The value of entities you want to skip before getting entities you
            need.
        - name: pg[limit]
          in: query
          schema:
            type: integer
          description: The value of maximum entities to return.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
                          format: email
                        language:
                          type: string
                        timezoneId:
                          type: integer
                        localeId:
                          type: integer
                        countryId:
                          type: integer
                        features:
                          type: object
                          properties:
                            allow_apps:
                              type: boolean
                        avatar:
                          type: string
                          format: uri
                        timezone:
                          type: string
                        locale:
                          type: string
                        usersAdminsRoleId:
                          type: integer
                        hasPassword:
                          type: boolean
                        tfaEnabled:
                          type: boolean
                        forceSetPassword:
                          type: boolean
                        userOrganizationRoles:
                          type: array
                          items:
                            type: object
                            properties:
                              usersRoleId:
                                type: integer
                              userId:
                                type: integer
                              organizationId:
                                type: integer
                              invitation:
                                type: string
                        userTeamRoles:
                          type: array
                          items:
                            type: object
                            properties:
                              usersRoleId:
                                type: integer
                              userId:
                                type: integer
                              teamId:
                                type: integer
                              changeable:
                                type: boolean
                        lastlogin:
                          type: string
                          format: date-time
                  pg:
                    type: object
                    properties:
                      last:
                        type: string
                        description: Shown only when using the `last` based pagination.
                      showLast:
                        type: boolean
                        description: Shown only when using the `last` based pagination.
                      sortBy:
                        type: string
                      sortDir:
                        type: string
                      limit:
                        type: integer
                      offset:
                        type: integer
                        description: Shown only when using the `offset` based pagination.
              example:
                users:
                  - id: 1
                    name: Administrator
                    email: admin@make.cloud
                    language: en
                    timezoneId: 113
                    localeId: 18
                    countryId: 202
                    features: {}
                    avatar: >-
                      https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm
                    lastLogin: 2022-04-04T10:23:34.347Z
                pg:
                  sortBy: name
                  sortDir: desc
                  offset: 0
                  limit: 10
  /users/{userId}:
    patch:
      x-published: true
      tags:
        - Users
      summary: Update user
      description: >-
        Updates a user with a given ID by passing new data in the request body.
        Any property that is not provided will be left unchanged. As the
        response, it returns all details of the updated user including
        properties that were not changed.
      security:
        - token:
            - user:write
      parameters:
        - required: true
          name: userId
          in: path
          schema:
            type: string
          description: >-
            The unique ID of the user. It can be retrieved from the [List
            users](/users-get) endpoint.
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The name of the user. The name must be at most 250
                    characters long and does not need to be unique.
                language:
                  type: string
                  description: >-
                    The standardized language code. It sets the Make environment
                    language.
                timezoneId:
                  type: integer
                  description: >-
                    The timezone ID corresponding to the local time. The list of
                    all timezones can be retrieved from the `GET
                    /enums/timezones` endpoint.
                localeId:
                  type: integer
                  description: >-
                    The location ID. It sets the Make environment date formats,
                    hour formats, decimal separators, etc. The list of all
                    locales can be retrieved from the `GET /enums/locales`
                    endpoint.
                countryId:
                  type: integer
                  description: The country ID. It sets the region of use.
            example:
              name: admin
              language: en
              localeId: 18
              timezoneId: 113
              countryId: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      language:
                        type: string
                      timezoneId:
                        type: integer
                      localeId:
                        type: integer
                      countryId:
                        type: integer
                      features:
                        type: object
                        properties:
                          allow_apps:
                            type: boolean
                      avatar:
                        type: string
                        format: uri
                      timezone:
                        type: string
                      locale:
                        type: string
                      usersAdminsRoleId:
                        type: integer
                      hasPassword:
                        type: boolean
                      tfaEnabled:
                        type: boolean
                      forceSetPassword:
                        type: boolean
                      userOrganizationRoles:
                        type: array
                        items:
                          type: object
                          properties:
                            usersRoleId:
                              type: integer
                            userId:
                              type: integer
                            organizationId:
                              type: integer
                            invitation:
                              type: string
                      userTeamRoles:
                        type: array
                        items:
                          type: object
                          properties:
                            usersRoleId:
                              type: integer
                            userId:
                              type: integer
                            teamId:
                              type: integer
                            changeable:
                              type: boolean
                      lastlogin:
                        type: string
                        format: date-time
              example:
                user:
                  id: 1
                  name: Administrator
                  email: admin@make.cloud
                  language: en
                  timezoneId: 113
                  localeId: 18
                  countryId: 202
                  features: {}
                  avatar: >-
                    https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm
                  lastLogin: 2022-04-04T10:23:34.347Z
  /users/{userId}/attributes/email:
    put:
      x-published: true
      tags:
        - Users
      summary: Update user email
      description: >-
        Updates an email for a user with a given ID by passing new data in the
        request body. It replaces the entire resource with the new values. In
        the response, it returns the confirmation if the email was changed.
      security:
        - token:
            - user:write
      parameters:
        - required: true
          name: userId
          in: path
          schema:
            type: string
          description: >-
            The unique ID of the user. It can be retrieved from the [List
            users](/users-get) endpoint.
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentEmailAddress:
                  type: string
                  format: email
                  description: User's current email address.
                newEmailAddress:
                  type: string
                  format: email
                  description: User's new email address.
                currentPassword:
                  type: string
                  format: password
                  description: User's current password.
              required:
                - currentEmailAddress
                - newEmailAddress
                - currentPassword
            example:
              currentEmailAddress: current@email.com
              newEmailAddress: new@email.com
              currentPassword: 123456Ab-
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
                  emailSent:
                    type: boolean
              example:
                changed: false
                emailSent: true
  /users/{userId}/attributes/password:
    put:
      x-published: true
      tags:
        - Users
      summary: Update user password
      description: >-
        Updates a password for a user with a given ID by passing new data in the
        request body. It replaces the entire resource with the new values. In
        the response, it returns the confirmation if the password was changed.
        This endpoint corresponds to changing a password in the user profile
        when the user is logged in to the Make interface.
      security:
        - token:
            - user:write
      parameters:
        - required: true
          name: userId
          in: path
          schema:
            type: string
          description: >-
            The unique ID of the user. It can be retrieved from the [List
            users](/users-get) endpoint.
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                  format: password
                  description: The current user password.
                newPassword1:
                  type: string
                  format: password
                  description: >-
                    The new user password. The password must be at least 9
                    characters long and must contain at least one uppercase
                    letter, at least one number, and at least one special
                    character.
                newPassword2:
                  type: string
                  format: password
                  description: >-
                    The new user password for confirmation. This password must
                    be the same as the password in the `newPassword1` property.
              required:
                - currentPassword
                - newPassword1
                - newPassword2
            example:
              currentPassword: 123456Ab.
              newPassword1: 123456Ab-
              newPassword2: 123456Ab-
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  changed:
                    type: boolean
              example:
                changed: true
  /users/password-reset-demand:
    post:
      x-published: true
      tags:
        - Users
      summary: Send password reset demand
      description: >-
        Sends password reset demand for a user with an email passed in the
        request body. This endpoint corresponds to the **Lost password**
        function on the login page in the Make interface. In the response, it
        returns the confirmation if the demand was sent successfully.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The email of the user for who the password should be reset.
              required:
                - email
            example:
              email: ee@eee.com
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /users/password-reset:
    get:
      x-published: true
      tags:
        - Users
      summary: Set session for resetting lost password
      description: >-
        Checks a hash and sets a session for the [Reset lost
        password](/users-password-reset-post) endpoint. This endpoint
        corresponds to clicking the **Reset password** link in the **Password
        reset** email.
      parameters:
        - name: hash
          in: query
          schema:
            type: string
          description: The unique hash of the password reset session.
          example: fab680b60044adb766128e713e44e15b
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
    post:
      x-published: true
      tags:
        - Users
      summary: Reset lost password
      description: >-
        Updates a password for a user based on the session created when calling
        the [Prepare session for password reset](/users-password-reset-get)
        endpoint. This endpoint corresponds to setting a new password on the
        **Lost password** page in the Make interface.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword1:
                  type: string
                  description: The new user password.
                newPassword2:
                  type: string
                  description: >-
                    This password must be the same as the password in the
                    `newPassword1` property.
              required:
                - newPassword1
                - newPassword2
            example:
              newPassword1: Aa123456.
              newPassword2: Aa123456.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: integer
              example:
                ok: 1
  /users/me:
    get:
      x-published: true
      tags:
        - Users > Me
      summary: Current user data
      description: >-
        Retrieves data about the authenticated user. Refer to the `cols[]`
        parameter accepted values to get more information about the currently
        authenticated user.
      parameters:
        - name: includeInvitedOrg
          description: >-
            Set this parameter to `true` if you want to get also the user roles
            in organizations with pending invitation. The default value is
            `false`.
          in: query
          schema:
            type: boolean
          examples:
            all-cols:
              value: true
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            all-cols:
              value:
                - id
                - name
                - email
                - language
                - timezoneId
                - localeId
                - countryId
                - features
                - avatar
                - timezone
                - locale
                - emailNotifications
                - usersAdminsRoleId
                - userOrganizationRoles
                - userTeamRoles
                - forceSetPassword
                - hasPassword
                - tfaEnabled
                - isAffiliatePartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  authUser:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      language:
                        type: string
                      timezoneId:
                        type: integer
                      localeId:
                        type: integer
                      countryId:
                        type: integer
                      features:
                        type: object
                        properties:
                          allow_apps:
                            type: boolean
                      avatar:
                        type: string
                        format: uri
                      timezone:
                        type: string
                      locale:
                        type: string
                      usersAdminsRoleId:
                        type: integer
                      hasPassword:
                        type: boolean
                      tfaEnabled:
                        type: boolean
                      forceSetPassword:
                        type: boolean
                      userOrganizationRoles:
                        type: array
                        items:
                          type: object
                          properties:
                            usersRoleId:
                              type: integer
                            userId:
                              type: integer
                            organizationId:
                              type: integer
                            invitation:
                              type: string
                      userTeamRoles:
                        type: array
                        items:
                          type: object
                          properties:
                            usersRoleId:
                              type: integer
                            userId:
                              type: integer
                            teamId:
                              type: integer
                            changeable:
                              type: boolean
                      lastlogin:
                        type: string
                        format: date-time
              examples:
                default-cols:
                  summary: Current user
                  description: Get information about the currently authenticated user.
                  value:
                    authUser:
                      id: 1
                      name: Martin
                      email: admin@make.cloud
                      language: en
                      timezoneId: 113
                      localeId: 18
                      countryId: 1
                      features:
                        allow_apps: true
                      avatar: >-
                        https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm
                      timezone: Europe/Prague
                      locale: cs
                      emailNotifications: null
                all-cols:
                  summary: Get all information
                  description: >-
                    Get all available information about the currently
                    authenticated user.
                  value:
                    authUser:
                      id: 1
                      name: Martin
                      email: admin@make.cloud
                      language: en
                      timezoneId: 113
                      localeId: 18
                      countryId: 1
                      features:
                        allow_apps: true
                      avatar: >-
                        https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm
                      timezone: Europe/Prague
                      locale: cs
                      emailNotifications: null
                      usersAdminsRoleId: 1
                      hasPassword: true
                      tfaEnabled: false
                      forceSetPassword: false
                      userOrganizationRoles:
                        - usersRoleId: 11
                          userId: 1
                          organizationId: 1
                          invitation: null
                        - usersRoleId: 11
                          userId: 1
                          organizationId: 3
                          invitation: null
                      userTeamRoles:
                        - usersRoleId: 1
                          userId: 1
                          teamId: 1
                          changeable: false
                        - usersRoleId: 1
                          userId: 1
                          teamId: 2
                          changeable: false
  /users/me/organization-invitations:
    get:
      x-published: true
      tags:
        - Users > Me
      summary: User Organization invitations
      description: Retrieves organization invitations of the currently authenticated user.
      security:
        - token:
            - user:read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userOrganizationInvitations:
                    type: array
                    items:
                      type: object
                      properties:
                        hash:
                          type: string
                        invitation:
                          type: string
                        usersRoleId:
                          type: integer
                        organizationId:
                          type: integer
                        organizationName:
                          type: string
                        zone:
                          type: string
              example:
                userOrganizationInvitations:
                  - hash: e99ca895-4c54-4d13-b83a-8ab37c35f17a
                    organizationId: 10
                    organizationName: Organization 10
                    usersRoleId: 12
                    invitation: pending
                  - hash: 5cd8b8c3-cb5c-4bd8-8d31-4b92fcdc7768
                    organizationId: 13
                    organizationName: Organization 13
                    usersRoleId: 12
                    invitation: expired
  /users/me/api-tokens:
    get:
      x-published: true
      tags:
        - Users > API Tokens
      summary: List users API tokens
      description: Gets the API tokens of the currently authenticated user.
      security:
        - token:
            - user:read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiTokens:
                    type: array
                    items:
                      type: object
                      properties:
                        token:
                          type: string
                        scope:
                          type: array
                          items:
                            type: string
                            format: uri
                        created:
                          type: string
                          format: date-time
                        label:
                          type: string
              example:
                apiTokens:
                  - token: 2544847b-****-****-****-************
                    scope:
                      - apps:write
                    created: '2019-11-05T09:22:31.249Z'
                    label: token dva write
                  - token: 40aff759-****-****-****-************
                    scope:
                      - apps:read
                    created: '2019-11-05T09:22:22.615Z'
                    label: token one read
    post:
      x-published: true
      tags:
        - Users > API Tokens
      summary: Create new API token
      description: >-
        Create a new API token for the currently authenticated user. Specify the
        API token scopes in the `scope` array parameter.
      security:
        - token:
            - user:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  description: The API token label visible in the Make user profile.
                scope:
                  type: array
                  items:
                    type: string
                    format: uri
                  description: >-
                    The API scopes provided to the API token. The API scopes
                    determine the scope of operations that you can do with the
                    API token.


                    Check the list of all existing Make API scopes with the API
                    call `GET /enums/user-api-tokes-scopes`.
              required:
                - label
                - scope
            example:
              label: example token
              scope:
                - apps:read
                - apps:write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiToken:
                    type: object
                    properties:
                      token:
                        type: string
                      scope:
                        type: array
                        items:
                          type: string
                          format: uri
                      created:
                        type: string
                        format: date-time
                      label:
                        type: string
              example:
                apiToken:
                  token: 7615989d-d213-48dc-b625-27133ae3f1a8
                  scope:
                    - apps:read
                    - apps:write
                  created: '2019-11-06T14:37:51.493Z'
                  label: example token
  /users/me/oauth-connections:
    get:
      x-private: true
      tags:
        - Users > OAuth connections
      summary: List OAuth connections
      description: Gets the OAuth connections for the currently authenticated user.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  connections:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        clientName:
                          type: string
                        lastUsedAt:
                          type: string
                          format: date-time
                        scopes:
                          type: array
                          items:
                            type: string
  /users/me/oauth-connections/{clientId}:
    delete:
      x-private: true
      tags:
        - Users > OAuth connections
      summary: Delete OAuth connection
      description: Delete a specific OAuth connection for the currently authenticated user.
      parameters:
        - name: clientId
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  client:
                    type: integer
  /users/me/api-tokens/{timestamp}:
    delete:
      x-published: true
      tags:
        - Users > API Tokens
      summary: Delete API token
      description: >-
        Deletes currently authenticated user's API token with the specified
        creation timestamp. Get the API token creation timestamp with the API
        call `GET /users/me/api-tokens` in the parameter value `created`. Copy
        the timestamp string to the API call path to delete the API token.
      security:
        - token:
            - user:write
      parameters:
        - name: timestamp
          in: path
          schema:
            type: string
            format: date-time
          required: true
          description: >-
            The timestamp of the moment when you created the API key in the ISO
            8601 compliant format.
          example: '2020-03-27T05:53:27.368Z'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiToken:
                    type: string
                    format: date-time
              example:
                apiToken: '2020-03-27T05:53:27.368Z'
  /users/{userId}/user-team-roles:
    get:
      x-published: true
      tags:
        - Users > User team roles
      summary: List user roles
      description: >-
        Gets team roles of the user with the specified `userId`. The response
        contains user's team role ID for all teams the user is part of. Get the
        mapping of the `userRoleId` and the user role `name` with the API call
        `GET /users/roles`.
      security:
        - token:
            - user:read
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: The ID of the user.
          example: 111
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userTeamRoles:
                    type: array
                    items:
                      type: object
                      properties:
                        usersRoleId:
                          type: integer
                        userId:
                          type: integer
                        teamId:
                          type: integer
                        changeable:
                          type: boolean
                        ssoPending:
                          type: boolean
              example:
                userTeamRoles:
                  - usersRoleId: 3
                    userId: 13
                    teamId: 1
                    changeable: true
                  - usersRoleId: 1
                    userId: 13
                    teamId: 21
                    changeable: true
  /users/{userId}/user-team-roles/{teamId}:
    get:
      x-published: true
      tags:
        - Users > User team roles
      summary: Get user team role detail
      description: >-
        Gets user role detail in the team with the specified `teamId`. Get the
        mapping of the `userRoleId` and the user role `name` with the API call
        `GET /users/roles`.
      security:
        - token:
            - user:read
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: The ID of the user.
          example: 111
        - name: teamId
          in: path
          schema:
            type: string
          required: true
          description: The ID of the team.
          example: 22
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userTeamRole:
                    type: object
                    properties:
                      usersRoleId:
                        type: integer
                      userId:
                        type: integer
                      teamId:
                        type: integer
                      changeable:
                        type: boolean
                      ssoPending:
                        type: boolean
              example:
                userTeamRole:
                  usersRoleId: 3
                  userId: 13
                  teamId: 1
                  changeable: true
    post:
      x-published: true
      tags:
        - Users > User team roles
      summary: Update user role
      description: >-
        Updates the user role in the team with the specified `teamId`. Get the
        mapping of the `userRoleId` and the user role `name` with the API call
        `GET /users/roles`.
      security:
        - token:
            - user:write
      parameters:
        - name: userId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the user.
          example: 111
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the team.
          example: 22
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usersRoleId:
                  type: integer
                  description: >-
                    The ID of the user role. Check the `GET /users/roles` API
                    call for the available `usersRoleId` values.
            example:
              usersRoleId: 3
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userTeamRole:
                    type: object
                    properties:
                      usersRoleId:
                        type: integer
                      userId:
                        type: integer
                      teamId:
                        type: integer
                      changeable:
                        type: boolean
                      ssoPending:
                        type: boolean
              example:
                userTeamRole:
                  usersRoleId: 3
                  userId: 13
                  teamId: 1
                  changeable: true
  /users/{userId}/user-team-notifications/{teamId}:
    get:
      x-published: true
      tags:
        - Users > User team notifications
      summary: List user team notification settings
      description: >-
        Gets settings for user notifications for a user specified by the
        `userId` and a team specified by the `teamId`. Get the mapping of the
        `notificationId` and the team notification setting type with the API
        call `GET /enums/user-email-notifications`.
      security:
        - token:
            - user:read
      parameters:
        - name: userId
          in: path
          schema:
            type: integer
          required: true
          example: 3
          description: The ID of the user.
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          example: 3
          description: The ID of the team.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userTeamNotifications:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: integer
                        teamId:
                          type: integer
                        notificationId:
                          type: integer
                        enabled:
                          type: boolean
              example:
                userTeamNotifications:
                  - userId: 3
                    teamId: 3
                    notificationId: 1
                    enabled: true
                  - userId: 3
                    teamId: 3
                    notificationId: 2
                    enabled: false
                  - userId: 3
                    teamId: 3
                    notificationId: 6
                    enabled: true
  /users/{userId}/user-team-notifications/{teamId}/{notificationId}:
    get:
      x-published: true
      tags:
        - Users > User team notifications
      summary: Check user's notification settings
      description: >-
        Checks team notification settings for specific user, team and
        notification type with the specified `userId`, `teamId` and
        `notificationId`. Get the mapping of the `notificationId` and the team
        notification setting type with the API call `GET
        /enums/user-email-notifications`.
      security:
        - token:
            - user:read
      parameters:
        - name: userId
          in: path
          schema:
            type: integer
          required: true
          example: 1
          description: The ID of the user.
        - name: teamId
          in: path
          schema:
            type: integer
          required: true
          example: 1
          description: The ID of the team.
        - name: notificationId
          in: path
          schema:
            type: integer
          required: true
          example: 6
          description: >-
            The ID of the notification type. Get the mapping of the
            `notificationId` and the team notification setting type with the API
            call `GET /enums/user-email-notifications`.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userTeamNotification:
                    type: object
                    properties:
                      userId:
                        type: integer
                      teamId:
                        type: integer
                      notificationId:
                        type: integer
                      enabled:
                        type: boolean
              example:
                userTeamNotification:
                  userId: 1
                  teamId: 1
                  notificationId: 6
                  enabled: true
    put:
      x-published: true
      tags:
        - Users > User team notifications
      summary: Update user's notification settings
      description: >
        Updates team notification settings for the user identified with the
        `userId`, `teamId` and `notificationId`.


        Get the mapping of the `notificationId` and the team notification
        setting type with the API call `GET /enums/user-email-notifications`.


        Note that you can only update notification settings for the user
        associated with the API key used for authentication.
      security:
        - token:
            - user:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                  description: Enables or disables team notification type for the user.
            example:
              enabled: true
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          example: 1
          description: The ID of the user.
        - name: teamId
          in: path
          schema:
            type: string
          required: true
          example: 1
          description: The ID of the team.
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          example: 6
          description: >-
            The ID of the notification type. Get the mapping of the
            `notificationId` and the team notification setting type with the API
            call `GET /enums/user-email-notifications`.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userTeamNotification:
                    type: object
                    properties:
                      userId:
                        type: integer
                      teamId:
                        type: integer
                      notificationId:
                        type: integer
                      enabled:
                        type: boolean
              example:
                userTeamNotification:
                  userId: 1
                  teamId: 1
                  notificationId: 6
                  enabled: true
  /users/roles:
    get:
      x-published: true
      tags:
        - Users > Roles
      summary: User role definitions
      description: >-
        Gets list of all existing user role names and IDs. Set the user roles in
        an organization with the `POST
        /users/{userId}/user-organization-roles/{organizationId}` API call. Use
        the `POST /users/{userId}/user-team-roles/{teamId}` API call to set user
        roles in a team.
      security:
        - token:
            - user:read
      parameters:
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            all-cols:
              value:
                - id
                - name
                - subsidiary
                - category
                - permissions
        - name: category
          in: query
          schema:
            type: string
            enum:
              - organization
              - team
          example: team
          description: >-
            Set this parameter to `organization` or `team` to get user roles in
            an organization or in a team.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  usersRoles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        subsidiary:
                          type: boolean
                        category:
                          type: string
                        permissions:
                          type: array
                          items:
                            type: string
              examples:
                list:
                  summary: List all user roles
                  description: >-
                    Get all existing user role IDs and the corresponding role
                    names.
                  value:
                    usersRoles:
                      - id: 1
                        name: Team Admin
                      - id: 3
                        name: Team Member
                      - id: 4
                        name: Team Monitoring
                      - id: 6
                        name: Team Operator
                      - id: 11
                        name: Owner
                      - id: 12
                        name: Admin
                      - id: 13
                        name: Member
                      - id: 14
                        name: Accountant
                all-cols:
                  summary: List all columns
                  description: >-
                    Get all existing user role IDs and the corresponding role
                    names. The response contains all columns available in the
                    endpoint.
                  value:
                    usersRoles:
                      - id: 1
                        name: Team Admin
                        subsidiary: true
                        category: team
                        permissions:
                          - account add
                          - account delete
                          - account edit
                          - accounts get
                          - datastore add
                          - datastore delete
                          - datastore edit
                          - datastores get
                          - datastore view
                          - device add
                          - device delete
                          - device edit
                          - devices get
                          - dlq edit
                          - dlq view
                          - function add
                          - function delete
                          - function edit
                          - functions get
                          - hook add
                          - hook delete
                          - hook edit
                          - hooks get
                          - key add
                          - key delete
                          - key edit
                          - keys get
                          - scenario add
                          - scenario delete
                          - scenario edit
                          - scenario logs get
                          - scenario notifications
                          - scenario reset counters
                          - scenario scheduling
                          - scenarios get
                          - scenario start
                          - scenario stop
                          - scenario verify
                          - scenario view
                          - storage edit
                          - storage view
                          - team delete
                          - team edit
                          - team user add and edit
                          - team view
                          - template add
                          - template delete
                          - template edit
                          - templates get
                          - template view
                          - udt add
                          - udt delete
                          - udt edit
                          - udts get
                      - id: 3
                        name: Team Member
                        subsidiary: true
                        category: team
                        permissions:
                          - account add
                          - account delete
                          - account edit
                          - accounts get
                          - datastore add
                          - datastore delete
                          - datastore edit
                          - datastores get
                          - datastore view
                          - device add
                          - device delete
                          - device edit
                          - devices get
                          - dlq edit
                          - dlq view
                          - function add
                          - function delete
                          - function edit
                          - functions get
                          - hook add
                          - hook delete
                          - hook edit
                          - hooks get
                          - key add
                          - key delete
                          - key edit
                          - keys get
                          - scenario add
                          - scenario delete
                          - scenario edit
                          - scenario logs get
                          - scenario notifications
                          - scenario reset counters
                          - scenario scheduling
                          - scenarios get
                          - scenario start
                          - scenario stop
                          - scenario verify
                          - scenario view
                          - storage edit
                          - storage view
                          - team edit
                          - team view
                          - template add
                          - template delete
                          - template edit
                          - templates get
                          - template view
                          - udt add
                          - udt delete
                          - udt edit
                          - udts get
                      - id: 4
                        name: Team Monitoring
                        subsidiary: true
                        category: team
                        permissions:
                          - dlq view
                          - scenario logs get
                          - scenario notifications
                          - scenario reset counters
                          - scenarios get
                          - scenario view
                          - team view
                          - templates get
                          - template view
                      - id: 6
                        name: Team Operator
                        subsidiary: true
                        category: team
                        permissions:
                          - accounts get
                          - datastores get
                          - datastore view
                          - devices get
                          - dlq view
                          - functions get
                          - hooks get
                          - keys get
                          - scenario logs get
                          - scenario notifications
                          - scenario reset counters
                          - scenario scheduling
                          - scenarios get
                          - scenario start
                          - scenario stop
                          - scenario verify
                          - scenario view
                          - storage view
                          - team view
                          - templates get
                          - template view
                          - udts get
  /users/{userId}/user-organization-roles:
    get:
      x-published: true
      tags:
        - Users > User organization roles
      summary: List user roles in an organization
      description: >-
        Gets list of all users and their roles in the organization with the
        specified `organizationId`. Get all user role IDs with the API call `GET
        /users/roles`.
      security:
        - token:
            - user:read
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: The ID of the user.
          example: 111
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            all-cols:
              value:
                - userId
                - organizationId
                - usersRoleId
                - invitation
                - organizationTeamsCount
                - joinedTeamsCount
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userOrganizationRoles:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: integer
                        organizationId:
                          type: integer
                        usersRoleId:
                          type: integer
                        invitation:
                          type: string
              examples:
                default-cols:
                  summary: Get user roles
                  description: >-
                    List all users in the organization and their organization
                    roles.
                  value:
                    userOrganizationRoles:
                      - userId: 1
                        organizationId: 1
                        usersRoleId: 11
                        invitation: null
                      - userId: 1
                        organizationId: 2
                        usersRoleId: 11
                        invitation: null
                all-cols:
                  summary: Get all columns
                  description: >-
                    List all users in the organization and their organization
                    roles. The example response contains all available columns.
                  value:
                    userOrganizationRoles:
                      - userId: 1
                        organizationId: 1
                        usersRoleId: 11
                        invitation: null
                        organizationTeamsCount: 8
                        joinedTeamsCount: 7
                      - userId: 1
                        organizationId: 2
                        usersRoleId: 11
                        invitation: null
                        organizationTeamsCount: 2
                        joinedTeamsCount: 2
  /users/{userId}/user-organization-roles/{organizationId}:
    get:
      x-published: true
      tags:
        - Users > User organization roles
      summary: Get user organization role details
      description: >-
        Gets information about user role in an organization with the specified
        `userId` and `organizationId`. Get all user role IDs with the API call
        `GET /users/roles`.
      security:
        - token:
            - user:read
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          example: 254
          description: The ID of the user
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          example: 11
          description: The ID of the organization
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            all-cols:
              value:
                - userId
                - organizationId
                - userRoleId
                - invitation
                - organizationTeamsCount
                - joinedTeamsCount
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userOrganizationRole:
                    type: object
                    properties:
                      userId:
                        type: integer
                      organizationId:
                        type: integer
                      usersRoleId:
                        type: integer
                      invitation:
                        type: string
                      organizationTeamsCount:
                        type: integer
                      joinedTeamsCount:
                        type: integer
              examples:
                default-cols:
                  summary: Get user role detail
                  description: Get the user role in the organization.
                  value:
                    userOrganizationRole:
                      userId: 254
                      organizationId: 11
                      usersRoleId: 11
                      invitation: null
                all-cols:
                  summary: Get all columns
                  description: >-
                    Get all available columns of the user role in the
                    organization.
                  value:
                    userOrganizationRole:
                      userId: 254
                      organizationId: 11
                      usersRoleId: 11
                      invitation: null
                      organizationTeamsCount: 2
                      joinedTeamsCount: 2
    post:
      x-published: true
      tags:
        - Users > User organization roles
      summary: Update user role
      description: >-
        Updates the specified user role in the organization. Only organization
        owners and admins can change the user organization roles. Refer to the
        Make Help center for a breakdown of the user [role
        permissions](https://www.make.com/en/help/access-management/organizations#organization-roles).


        Specify the ID of the new role for the user in the request body. Get all
        available user role IDs and the corresponding user role names with the
        API call `GET /users/roles`.


        You cannot change the organization "Owner" with this endpoint. Use the
        API call to [transfer organization
        ownership](https://www.make.com/en/api-documentation/organizations-organizationId-user-organization-roles-transfer-post)
        instead.


        If you send an empty request body, the user with the specified `userId`
        will be removed from the organization.
      security:
        - token:
            - user:write
      parameters:
        - name: userId
          in: path
          schema:
            type: integer
          required: true
          example: 5
          description: The ID of the user.
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          example: 22
          description: The ID of the organization.
        - name: cols
          in: query
          schema:
            type: array
            items:
              type: string
          description: >-
            Specifies columns that are returned in the response. Use the
            `cols[]` parameter for every column that you want to return in the
            response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get
            both `key1` and `key2` columns in the response.


            [Check the "Filtering" section for a full
            example.](https://www.make.com/en/api-documentation/filtering)
          examples:
            all-cols:
              value:
                - userId
                - organizationId
                - usersRoleId
                - invitation
                - organizationTeamsCount
                - joinedTeamsCount
        - name: confirmed
          in: query
          schema:
            type: boolean
          examples:
            remove-user:
              value: true
          description: >-
            Use this parameter when you are removing a user from an
            organization. Set this parameter to `true` is you want to delete the
            user's connections from the organization with the parameter
            `deleteConnections`.
        - name: deleteConnections
          in: query
          schema:
            type: boolean
          examples:
            remove-user:
              value: true
          description: >-
            Set this parameter to `true` if you are removing a user from an
            organization to delete also the user's connections. If you set this
            parameter to `false`, the API call won't delete the user's
            connections.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usersRoleId:
                  type: integer
                  description: >-
                    The ID of the user role. Check the `GET /users/roles` API
                    call for the available `usersRoleId` values.
            examples:
              set-user-role:
                summary: Set user role
                description: >-
                  Set the user role in the organization. Get all user role IDs
                  with the API call `GET /users/roles`.
                value:
                  usersRoleId: 12
              all-cols:
                summary: Set user data all cols
                description: >-
                  Set user role in the organization. The response returns all
                  available columns for the user role in the organization.
                value:
                  usersRoleId: 12
              remove-user:
                summary: Remove user from organization
                description: >-
                  To remove a user from the organization send empty request
                  body.
                value: ''
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userOrganizationRole:
                    type: object
                    properties:
                      userId:
                        type: integer
                      organizationId:
                        type: integer
                      usersRoleId:
                        type: integer
                      invitation:
                        type: string
              examples:
                set-user-role:
                  value:
                    userOrganizationRole:
                      userId: 5
                      organizationId: 22
                      usersRoleId: 12
                      invitation: null
                all-cols:
                  value:
                    userOrganizationRole:
                      userId: 5
                      organizationId: 22
                      usersRoleId: 12
                      invitation: null
                      organizationTeamsCount: 2
                      joinedTeamsCount: 2
                remove-user:
                  value:
                    userOrganizationRole:
                      userId: 5
                      organizationId: 22
                      usersRoleId: null
                      invitation: null
  /users/{userId}/user-organization-roles/{organizationId}/transfer:
    post:
      x-published: true
      tags:
        - Users > User organization roles
      summary: Transfer organization ownership
      description: >-
        Transfer organization ownership to the user with the specified `userId`.
        Only organization owner can transfer their ownership to another user.
      security:
        - token:
            - user:write
      parameters:
        - name: userId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the user.
          example: 111
        - name: organizationId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the organization.
          example: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userOrganizationRoles:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: integer
                        organizationId:
                          type: integer
                        usersRoleId:
                          type: integer
                        invitation:
                          type: boolean
              example:
                userOrganizationRoles:
                  - userId: 111
                    organizationId: 11
                    usersRoleId: 11
                    invitation: null
                  - userId: 1
                    organizationId: 11
                    usersRoleId: 12
                    invitation: null
  /users/unread-notifications:
    get:
      x-published: true
      tags:
        - Users > Unread notifications
      summary: Unread notifications
      description: >-
        Gets the number of unread notifications for the currently authenticated
        user.
      security:
        - token:
            - user:read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userUnreadNotifications:
                    type: integer
                  userZoneUnreadNotifications:
                    type: array
                    items:
                      type: object
                      properties:
                        zoneId:
                          type: integer
                        unreadNotifications:
                          type: integer
              example:
                userUnreadNotifications: 2
  /users/redirect-action:
    get:
      tags:
        - Users
      summary: Get user redirect action
      x-private: true
      parameters:
        - name: orgId
          in: query
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect:
                    type: string
                  redirectAction:
                    type: object
                    properties:
                      action:
                        type: string
                      data:
                        type: object
                example:
                  redirect: /5/scenarios/add`
                  redirectAction:
                    action: CREATE_SCENARIO
                    data:
                      modules:
                        - weather:now
                        - google:sheet
  /mailhub/users/{userId}/preferences:
    get:
      tags:
        - Users > User email preferences - Mailhub
      summary: Get preferences
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  preferences:
                    type: object
                    properties:
                      id:
                        type: integer
                      uuid:
                        type: string
                      email:
                        type: string
                        format: email
                      is_email_verified:
                        type: boolean
                      global:
                        type: object
                        properties:
                          isEmailVerified:
                            type: boolean
                          preferences:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                enabled:
                                  type: boolean
                                label:
                                  type: string
                                description:
                                  type: string
                      zones:
                        type: array
                        items: {}
              examples:
                get-preferences:
                  summary: Get preferences
                  value:
                    preferences:
                      id: 1
                      uuid: e39de7bc-95b0-443c-83e9-ac397ea8f004
                      email: admin@make.cloud
                      is_email_verified: true
                      global:
                        isEmailVerified: true
                        preferences:
                          - id: use_cases
                            enabled: false
                            label: Use Cases
                            description: Get new Make use cases delivered to your inbox.
                          - id: product_updates
                            enabled: false
                            label: Product Updates
                            description: >-
                              Product and feature updates including new releases
                              and important changes.
                          - id: app_updates
                            enabled: false
                            label: App Updates
                            description: >-
                              Get notified about new apps and services as they
                              become available, as well as changes in the
                              existing apps.
                          - id: events_and_webinars
                            enabled: false
                            label: Events and Webinars
                            description: >-
                              Get notified about Make events and webinars
                              including demos, discussions and community events.
                          - id: promotions
                            enabled: false
                            label: Offers and Promotions
                            description: >-
                              Latest promotions and discounts delivered to your
                              inbox.
                          - id: channel_partner_updates
                            enabled: false
                            label: Partnerships
                            description: >-
                              Emails with exclusive information for Make
                              partners such as partner updates and resources.
                          - id: academy
                            enabled: false
                            label: Academy
                            description: >-
                              Receive the latest content from Make Academy
                              including videos, tutorials and educational
                              events.
                          - id: blog
                            enabled: false
                            label: Blog and Newsletter
                            description: >-
                              Get the latest advice, resources and updates on
                              all things Make and no-code automation.
                      zones: []
    patch:
      tags:
        - Users > User email preferences - Mailhub
      summary: Update global preferences
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                enabled:
                  type: boolean
            example:
              id: use_cases
              enabled: true
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  preferences:
                    type: object
                    properties:
                      global:
                        type: object
                        properties:
                          preferences:
                            type: object
                            properties:
                              id:
                                type: string
                              enabled:
                                type: boolean
              examples:
                update-global-preferences:
                  summary: Update global preferences
                  value:
                    preferences:
                      global:
                        preferences:
                          id: use_cases
                          enabled: true
  /mailhub/users/{userId}/organizations/{organizationId}/teams/{teamId}/preferences:
    get:
      tags:
        - Users > User email preferences - Mailhub
      summary: Get team preferences
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
        - name: teamId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  uuid:
                    type: string
                  email:
                    type: string
                    format: email
                  is_email_verified:
                    type: boolean
                  team:
                    type: object
                    properties:
                      teamId:
                        type: integer
                      teamName:
                        type: string
                      preferences:
                        type: object
                        properties:
                          native:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                subscribed:
                                  type: boolean
                                label:
                                  type: string
                                description:
                                  type: string
                          marketing:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                enabled:
                                  type: boolean
                                label:
                                  type: string
                                description:
                                  type: string
              examples:
                get-team-preferences:
                  summary: Get team preferences
                  value:
                    id: 3
                    uuid: 4c090605-19a1-46b9-a3f3-a2cb83e8adc1
                    email: petr.malimanek@make.com
                    is_email_verified: true
                    team:
                      teamId: 10
                      teamName: My Team
                      preferences:
                        native:
                          - id: 6
                            subscribed: true
                            label: Deactivation
                            description: >-
                              Get notified when your scenario gets deactivated
                              due to critical issues such as multiple
                              consecutive errors.
                          - id: 2
                            subscribed: false
                            label: Warnings
                            description: >-
                              Warnings encountered by your scenarios that need
                              your attention, such as failure to connect with
                              your apps and services.
                          - id: 1
                            subscribed: true
                            label: Errors
                            description: >-
                              Notifications about errors encountered by specific
                              modules in your scenarios that keep your workflows
                              from running smoothly.
                        marketing:
                          - id: onboarding
                            enabled: false
                            label: Tips For Success
                            description: >-
                              Organization-specific emails to help you succeed
                              with Make and make the most of your subscription.
    patch:
      tags:
        - Users > User email preferences - Mailhub
      summary: Update team preferences
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                enabled:
                  type: boolean
            example:
              id: onboarding
              enabled: true
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
        - name: teamId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      preferences:
                        type: object
                        properties:
                          id:
                            type: string
                          enabled:
                            type: boolean
              examples:
                update-team-preferences:
                  summary: Update team preferences
                  value:
                    team:
                      preferences:
                        id: onboarding
                        enabled: false
  /mailhub/users/{userId}/organizations/{organizationId}/teams/{teamId}/native-preferences:
    patch:
      tags:
        - Users > User email preferences - Mailhub
      summary: Update team native preferences
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: utc-millisec
                enabled:
                  type: boolean
            example:
              id: '1'
              enabled: true
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
        - name: teamId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      preferences:
                        type: object
                        properties:
                          id:
                            type: string
                          enabled:
                            type: boolean
              examples:
                update-team-native-preferences:
                  summary: Update team native preferences
                  value:
                    team:
                      preferences:
                        id: onboarding
                        enabled: false
  /debug/hq/zone:
    get:
      tags:
        - Debug
      description: Get config of current zone
      x-private: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  state:
                    type: number
                    description: Number 3 means ready
              example:
                state: 3
  /hq/sanity-check:
    get:
      tags:
        - HQ
      description: Get sanity check
      x-private: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userSessionExpiresAt:
                    type: string
                    format: date-time
                    description: When user session will expire at
                  authUser:
                    type: object
                    properties:
                      id:
                        type: number
                        description: User id
